"""add recommendation_rule_settings table

Revision ID: 2c4970b953a4
Revises: d26614473f34
Create Date: 2025-10-21 20:26:41.522558

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '2c4970b953a4'
down_revision: Union[str, Sequence[str], None] = 'd26614473f34'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('recommendation_rule_settings',
    sa.Column('rule_id', sa.String(length=100), nullable=False),
    sa.Column('scope', sa.String(length=20), nullable=False),
    sa.Column('provider_type', sa.String(length=50), nullable=True),
    sa.Column('resource_type', sa.String(length=50), nullable=True),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('rule_id', 'scope', 'provider_type', 'resource_type', name='uq_reco_rule_scopes')
    )
    op.create_index(op.f('ix_recommendation_rule_settings_provider_type'), 'recommendation_rule_settings', ['provider_type'], unique=False)
    op.create_index(op.f('ix_recommendation_rule_settings_resource_type'), 'recommendation_rule_settings', ['resource_type'], unique=False)
    op.create_index(op.f('ix_recommendation_rule_settings_rule_id'), 'recommendation_rule_settings', ['rule_id'], unique=False)
    op.create_index(op.f('ix_recommendation_rule_settings_scope'), 'recommendation_rule_settings', ['scope'], unique=False)
    op.alter_column('resource_tags', 'tag_value',
               existing_type=mysql.TEXT(collation='utf8mb4_unicode_ci'),
               nullable=False)
    # ### end Alembic commands ###

    # Seed initial rules (enabled by default)
    conn = op.get_bind()
    try:
        rules = [
            ('cost.rightsize.cpu_underuse', 'resource', None, None, True, 'Auto-seeded'),
            ('cost.price_check.cross_provider', 'resource', None, None, True, 'Auto-seeded'),
            ('debug.global.resource_count', 'global', None, None, True, 'Auto-seeded'),
        ]
        for rule_id, scope, provider_type, resource_type, enabled, description in rules:
            conn.execute(
                sa.text(
                    """
                    INSERT INTO recommendation_rule_settings
                    (rule_id, scope, provider_type, resource_type, enabled, description, created_at, updated_at)
                    VALUES (:rule_id, :scope, :provider_type, :resource_type, :enabled, :description, NOW(), NOW())
                    ON DUPLICATE KEY UPDATE updated_at = NOW()
                    """
                ),
                {
                    'rule_id': rule_id,
                    'scope': scope,
                    'provider_type': provider_type,
                    'resource_type': resource_type,
                    'enabled': enabled,
                    'description': description,
                }
            )
    except Exception:
        # Seeding is best-effort; continue if table exists but insert fails
        pass


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('resource_tags', 'tag_value',
               existing_type=mysql.TEXT(collation='utf8mb4_unicode_ci'),
               nullable=True)
    op.drop_index(op.f('ix_recommendation_rule_settings_scope'), table_name='recommendation_rule_settings')
    op.drop_index(op.f('ix_recommendation_rule_settings_rule_id'), table_name='recommendation_rule_settings')
    op.drop_index(op.f('ix_recommendation_rule_settings_resource_type'), table_name='recommendation_rule_settings')
    op.drop_index(op.f('ix_recommendation_rule_settings_provider_type'), table_name='recommendation_rule_settings')
    op.drop_table('recommendation_rule_settings')
    # ### end Alembic commands ###
