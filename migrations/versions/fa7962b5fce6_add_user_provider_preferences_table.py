"""Add user provider preferences table

Revision ID: fa7962b5fce6
Revises: f7b8c9d2e1a3
Create Date: 2025-11-01 22:29:38.221853

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'fa7962b5fce6'
down_revision: Union[str, Sequence[str], None] = 'f7b8c9d2e1a3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    from datetime import datetime
    
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_provider_preferences',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('provider_type', sa.String(length=50), nullable=False),
    sa.Column('is_enabled', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'provider_type', name='uq_user_provider')
    )
    op.create_index('idx_user_provider_enabled', 'user_provider_preferences', ['user_id', 'provider_type', 'is_enabled'], unique=False)
    op.create_index(op.f('ix_user_provider_preferences_provider_type'), 'user_provider_preferences', ['provider_type'], unique=False)
    op.create_index(op.f('ix_user_provider_preferences_user_id'), 'user_provider_preferences', ['user_id'], unique=False)
    # ### end Alembic commands ###
    
    # Seed data: Initialize preferences for existing users
    # Get all users
    conn = op.get_bind()
    users_result = conn.execute(sa.text("SELECT id FROM users WHERE is_active = 1"))
    users = users_result.fetchall()
    
    # Get all enabled providers from catalog
    providers_result = conn.execute(sa.text("SELECT provider_type FROM provider_catalog WHERE is_enabled = 1"))
    providers = providers_result.fetchall()
    
    # Create preferences for each user-provider combination (all enabled by default)
    now = datetime.utcnow()
    for user in users:
        user_id = user[0]
        for provider in providers:
            provider_type = provider[0]
            conn.execute(
                sa.text("""
                    INSERT INTO user_provider_preferences 
                    (user_id, provider_type, is_enabled, created_at, updated_at) 
                    VALUES (:user_id, :provider_type, 1, :created_at, :updated_at)
                """),
                {
                    'user_id': user_id,
                    'provider_type': provider_type,
                    'created_at': now,
                    'updated_at': now
                }
            )


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_provider_preferences_user_id'), table_name='user_provider_preferences')
    op.drop_index(op.f('ix_user_provider_preferences_provider_type'), table_name='user_provider_preferences')
    op.drop_index('idx_user_provider_enabled', table_name='user_provider_preferences')
    op.drop_table('user_provider_preferences')
    # ### end Alembic commands ###
