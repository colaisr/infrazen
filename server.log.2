2025-10-28 07:53:03,793 INFO sqlalchemy.engine.Engine: SELECT DATABASE()
2025-10-28 07:53:03,794 INFO sqlalchemy.engine.Engine: [raw sql] {}
2025-10-28 07:53:03,794 INFO sqlalchemy.engine.Engine: SELECT @@sql_mode
2025-10-28 07:53:03,794 INFO sqlalchemy.engine.Engine: [raw sql] {}
2025-10-28 07:53:03,795 INFO sqlalchemy.engine.Engine: SELECT @@lower_case_table_names
2025-10-28 07:53:03,795 INFO sqlalchemy.engine.Engine: [raw sql] {}
2025-10-28 07:53:03,795 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 07:53:03,796 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers
2025-10-28 07:53:03,796 INFO sqlalchemy.engine.Engine: [generated in 0.00008s] {}
2025-10-28 07:53:03,800 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.provider_id = %(provider_id_1)s) AS anon_1
2025-10-28 07:53:03,800 INFO sqlalchemy.engine.Engine: [generated in 0.00009s] {'provider_id_1': 1}
2025-10-28 07:53:03,802 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_status AS sync_snapshots_sync_status, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_completed_at AS sync_snapshots_sync_completed_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.total_resources_found AS sync_snapshots_total_resources_found, sync_snapshots.resources_created AS sync_snapshots_resources_created, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.provider_id = %(provider_id_1)s AND sync_snapshots.sync_status = %(sync_status_1)s ORDER BY sync_snapshots.sync_completed_at DESC 
 LIMIT %(param_1)s
2025-10-28 07:53:03,802 INFO sqlalchemy.engine.Engine: [generated in 0.00008s] {'provider_id_1': 1, 'sync_status_1': 'success', 'param_1': 1}
2025-10-28 07:53:03,808 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.provider_id = %(provider_id_1)s) AS anon_1
2025-10-28 07:53:03,808 INFO sqlalchemy.engine.Engine: [cached since 0.007669s ago] {'provider_id_1': 2}
2025-10-28 07:53:03,808 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_status AS sync_snapshots_sync_status, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_completed_at AS sync_snapshots_sync_completed_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.total_resources_found AS sync_snapshots_total_resources_found, sync_snapshots.resources_created AS sync_snapshots_resources_created, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.provider_id = %(provider_id_1)s AND sync_snapshots.sync_status = %(sync_status_1)s ORDER BY sync_snapshots.sync_completed_at DESC 
 LIMIT %(param_1)s
2025-10-28 07:53:03,809 INFO sqlalchemy.engine.Engine: [cached since 0.006266s ago] {'provider_id_1': 2, 'sync_status_1': 'success', 'param_1': 1}
2025-10-28 07:53:03,810 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.provider_id = %(provider_id_1)s AND resources.is_active = true
2025-10-28 07:53:03,810 INFO sqlalchemy.engine.Engine: [generated in 0.00007s] {'provider_id_1': 2}
2025-10-28 07:53:03,812 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.provider_id = %(provider_id_1)s) AS anon_1
2025-10-28 07:53:03,812 INFO sqlalchemy.engine.Engine: [cached since 0.01176s ago] {'provider_id_1': 117}
2025-10-28 07:53:03,813 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_status AS sync_snapshots_sync_status, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_completed_at AS sync_snapshots_sync_completed_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.total_resources_found AS sync_snapshots_total_resources_found, sync_snapshots.resources_created AS sync_snapshots_resources_created, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.provider_id = %(provider_id_1)s AND sync_snapshots.sync_status = %(sync_status_1)s ORDER BY sync_snapshots.sync_completed_at DESC 
 LIMIT %(param_1)s
2025-10-28 07:53:03,813 INFO sqlalchemy.engine.Engine: [cached since 0.0103s ago] {'provider_id_1': 117, 'sync_status_1': 'success', 'param_1': 1}
2025-10-28 07:53:03,814 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.provider_id = %(provider_id_1)s) AS anon_1
2025-10-28 07:53:03,814 INFO sqlalchemy.engine.Engine: [cached since 0.01392s ago] {'provider_id_1': 150}
2025-10-28 07:53:03,815 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_status AS sync_snapshots_sync_status, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_completed_at AS sync_snapshots_sync_completed_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.total_resources_found AS sync_snapshots_total_resources_found, sync_snapshots.resources_created AS sync_snapshots_resources_created, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.provider_id = %(provider_id_1)s AND sync_snapshots.sync_status = %(sync_status_1)s ORDER BY sync_snapshots.sync_completed_at DESC 
 LIMIT %(param_1)s
2025-10-28 07:53:03,815 INFO sqlalchemy.engine.Engine: [cached since 0.01243s ago] {'provider_id_1': 150, 'sync_status_1': 'success', 'param_1': 1}
2025-10-28 07:53:03,816 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.provider_id = %(provider_id_1)s AND resources.is_active = true
2025-10-28 07:53:03,816 INFO sqlalchemy.engine.Engine: [cached since 0.005271s ago] {'provider_id_1': 150}
2025-10-28 07:53:03,818 INFO sqlalchemy.engine.Engine: SELECT provider_catalog.id AS provider_catalog_id, provider_catalog.provider_type AS provider_catalog_provider_type, provider_catalog.display_name AS provider_catalog_display_name, provider_catalog.description AS provider_catalog_description, provider_catalog.logo_url AS provider_catalog_logo_url, provider_catalog.is_enabled AS provider_catalog_is_enabled, provider_catalog.has_pricing_api AS provider_catalog_has_pricing_api, provider_catalog.pricing_method AS provider_catalog_pricing_method, provider_catalog.last_price_sync AS provider_catalog_last_price_sync, provider_catalog.sync_status AS provider_catalog_sync_status, provider_catalog.sync_error AS provider_catalog_sync_error, provider_catalog.website_url AS provider_catalog_website_url, provider_catalog.documentation_url AS provider_catalog_documentation_url, provider_catalog.supported_regions AS provider_catalog_supported_regions, provider_catalog.created_at AS provider_catalog_created_at, provider_catalog.updated_at AS provider_catalog_updated_at 
FROM provider_catalog 
WHERE provider_catalog.is_enabled = true
2025-10-28 07:53:03,818 INFO sqlalchemy.engine.Engine: [generated in 0.00008s] {}
2025-10-28 07:53:03,819 INFO sqlalchemy.engine.Engine: SELECT complete_syncs.user_id AS complete_syncs_user_id, complete_syncs.sync_type AS complete_syncs_sync_type, complete_syncs.sync_status AS complete_syncs_sync_status, complete_syncs.sync_started_at AS complete_syncs_sync_started_at, complete_syncs.sync_completed_at AS complete_syncs_sync_completed_at, complete_syncs.sync_duration_seconds AS complete_syncs_sync_duration_seconds, complete_syncs.total_providers_synced AS complete_syncs_total_providers_synced, complete_syncs.successful_providers AS complete_syncs_successful_providers, complete_syncs.failed_providers AS complete_syncs_failed_providers, complete_syncs.total_resources_found AS complete_syncs_total_resources_found, complete_syncs.total_monthly_cost AS complete_syncs_total_monthly_cost, complete_syncs.total_daily_cost AS complete_syncs_total_daily_cost, complete_syncs.cost_by_provider AS complete_syncs_cost_by_provider, complete_syncs.resources_by_provider AS complete_syncs_resources_by_provider, complete_syncs.error_message AS complete_syncs_error_message, complete_syncs.error_details AS complete_syncs_error_details, complete_syncs.sync_config AS complete_syncs_sync_config, complete_syncs.id AS complete_syncs_id, complete_syncs.created_at AS complete_syncs_created_at, complete_syncs.updated_at AS complete_syncs_updated_at 
FROM complete_syncs 
WHERE complete_syncs.user_id = %(user_id_1)s ORDER BY complete_syncs.sync_completed_at DESC 
 LIMIT %(param_1)s
2025-10-28 07:53:03,820 INFO sqlalchemy.engine.Engine: [generated in 0.00008s] {'user_id_1': 2, 'param_1': 1}
2025-10-28 07:53:03,850 INFO sqlalchemy.engine.Engine: ROLLBACK
2025-10-28 07:53:03,850 INFO werkzeug: 127.0.0.1 - - [28/Oct/2025 07:53:03] "GET /connections HTTP/1.1" 200 -
2025-10-28 07:53:03,867 INFO werkzeug: 127.0.0.1 - - [28/Oct/2025 07:53:03] "[33mGET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1[0m" 404 -
2025-10-28 07:53:03,876 INFO werkzeug: 127.0.0.1 - - [28/Oct/2025 07:53:03] "GET /static/css/pages/connections.css HTTP/1.1" 200 -
2025-10-28 07:53:03,876 INFO werkzeug: 127.0.0.1 - - [28/Oct/2025 07:53:03] "GET /static/provider_logos/beget_logo.jpeg HTTP/1.1" 200 -
2025-10-28 07:53:03,877 INFO werkzeug: 127.0.0.1 - - [28/Oct/2025 07:53:03] "GET /static/css/main.css?v=9170 HTTP/1.1" 200 -
2025-10-28 07:53:03,878 INFO werkzeug: 127.0.0.1 - - [28/Oct/2025 07:53:03] "GET /static/js/main.js HTTP/1.1" 200 -
2025-10-28 07:53:03,878 INFO werkzeug: 127.0.0.1 - - [28/Oct/2025 07:53:03] "GET /static/provider_logos/yc_logo.png HTTP/1.1" 200 -
2025-10-28 07:53:03,880 INFO werkzeug: 127.0.0.1 - - [28/Oct/2025 07:53:03] "GET /static/provider_logos/selectel_logo.svg HTTP/1.1" 200 -
2025-10-28 07:53:03,885 INFO werkzeug: 127.0.0.1 - - [28/Oct/2025 07:53:03] "GET /static/js/connections.js HTTP/1.1" 200 -
2025-10-28 07:53:03,887 INFO werkzeug: 127.0.0.1 - - [28/Oct/2025 07:53:03] "GET /static/css/core/variables.css HTTP/1.1" 200 -
2025-10-28 07:53:03,888 INFO werkzeug: 127.0.0.1 - - [28/Oct/2025 07:53:03] "GET /static/css/core/reset.css HTTP/1.1" 200 -
2025-10-28 07:53:03,890 INFO werkzeug: 127.0.0.1 - - [28/Oct/2025 07:53:03] "GET /static/css/core/utilities.css HTTP/1.1" 200 -
2025-10-28 07:53:03,892 INFO werkzeug: 127.0.0.1 - - [28/Oct/2025 07:53:03] "GET /static/css/components/forms.css HTTP/1.1" 200 -
2025-10-28 07:53:03,893 INFO werkzeug: 127.0.0.1 - - [28/Oct/2025 07:53:03] "GET /static/css/components/cards.css HTTP/1.1" 200 -
2025-10-28 07:53:03,893 INFO werkzeug: 127.0.0.1 - - [28/Oct/2025 07:53:03] "GET /static/css/components/buttons.css HTTP/1.1" 200 -
2025-10-28 07:53:03,894 INFO werkzeug: 127.0.0.1 - - [28/Oct/2025 07:53:03] "GET /static/css/components/tables.css HTTP/1.1" 200 -
2025-10-28 07:53:03,895 INFO werkzeug: 127.0.0.1 - - [28/Oct/2025 07:53:03] "GET /static/css/components/modals.css HTTP/1.1" 200 -
2025-10-28 07:53:03,896 INFO werkzeug: 127.0.0.1 - - [28/Oct/2025 07:53:03] "GET /static/css/components/badges.css HTTP/1.1" 200 -
2025-10-28 07:53:03,896 INFO werkzeug: 127.0.0.1 - - [28/Oct/2025 07:53:03] "GET /static/css/layouts/admin.css HTTP/1.1" 200 -
2025-10-28 07:53:03,896 INFO werkzeug: 127.0.0.1 - - [28/Oct/2025 07:53:03] "GET /static/css/components/navigation.css HTTP/1.1" 200 -
2025-10-28 07:53:03,898 INFO werkzeug: 127.0.0.1 - - [28/Oct/2025 07:53:03] "GET /static/css/layouts/dashboard.css HTTP/1.1" 200 -
2025-10-28 07:53:03,899 INFO werkzeug: 127.0.0.1 - - [28/Oct/2025 07:53:03] "GET /static/css/layouts/connections.css HTTP/1.1" 200 -
2025-10-28 07:53:03,899 INFO werkzeug: 127.0.0.1 - - [28/Oct/2025 07:53:03] "GET /static/css/pages/admin/unrecognized-resources.css HTTP/1.1" 200 -
2025-10-28 07:53:03,900 INFO werkzeug: 127.0.0.1 - - [28/Oct/2025 07:53:03] "GET /static/css/features/drag-drop.css HTTP/1.1" 200 -
2025-10-28 07:53:03,901 INFO werkzeug: 127.0.0.1 - - [28/Oct/2025 07:53:03] "GET /static/css/features/charts.css HTTP/1.1" 200 -
2025-10-28 07:53:03,902 INFO werkzeug: 127.0.0.1 - - [28/Oct/2025 07:53:03] "GET /static/css/pages/admin/users.css HTTP/1.1" 200 -
2025-10-28 07:53:03,902 INFO werkzeug: 127.0.0.1 - - [28/Oct/2025 07:53:03] "GET /static/css/legacy.css HTTP/1.1" 200 -
2025-10-28 07:54:21,563 INFO sqlalchemy.engine.Engine: SELECT DATABASE()
2025-10-28 07:54:21,563 INFO sqlalchemy.engine.Engine: [raw sql] {}
2025-10-28 07:54:21,563 INFO sqlalchemy.engine.Engine: SELECT @@sql_mode
2025-10-28 07:54:21,563 INFO sqlalchemy.engine.Engine: [raw sql] {}
2025-10-28 07:54:21,564 INFO sqlalchemy.engine.Engine: SELECT @@lower_case_table_names
2025-10-28 07:54:21,564 INFO sqlalchemy.engine.Engine: [raw sql] {}
2025-10-28 07:54:21,564 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 07:54:21,565 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.connection_name = %(connection_name_1)s 
 LIMIT %(param_1)s
2025-10-28 07:54:21,565 INFO sqlalchemy.engine.Engine: [generated in 0.00008s] {'connection_name_1': 'yc', 'param_1': 1}
2025-10-28 07:54:21,567 INFO sqlalchemy.engine.Engine: SELECT users.username AS users_username, users.email AS users_email, users.password_hash AS users_password_hash, users.google_id AS users_google_id, users.google_picture AS users_google_picture, users.google_verified_email AS users_google_verified_email, users.google_locale AS users_google_locale, users.first_name AS users_first_name, users.last_name AS users_last_name, users.company AS users_company, users.`role` AS users_role, users.permissions AS users_permissions, users.is_active AS users_is_active, users.is_verified AS users_is_verified, users.email_confirmed AS users_email_confirmed, users.email_confirmation_token AS users_email_confirmation_token, users.email_confirmation_sent_at AS users_email_confirmation_sent_at, users.last_login AS users_last_login, users.login_count AS users_login_count, users.created_by_admin AS users_created_by_admin, users.admin_notes AS users_admin_notes, users.timezone AS users_timezone, users.currency AS users_currency, users.language AS users_language, users.id AS users_id, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.id = %(pk_1)s
2025-10-28 07:54:21,567 INFO sqlalchemy.engine.Engine: [generated in 0.00009s] {'pk_1': 2}
2025-10-28 07:54:21,570 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.provider_id = %(provider_id_1)s AND resources.is_active = true
2025-10-28 07:54:21,570 INFO sqlalchemy.engine.Engine: [generated in 0.00011s] {'provider_id_1': 117}
2025-10-28 07:54:21,571 INFO sqlalchemy.engine.Engine: ROLLBACK
2025-10-28 07:54:32,523 INFO sqlalchemy.engine.Engine: SELECT DATABASE()
2025-10-28 07:54:32,523 INFO sqlalchemy.engine.Engine: [raw sql] {}
2025-10-28 07:54:32,523 INFO sqlalchemy.engine.Engine: SELECT @@sql_mode
2025-10-28 07:54:32,524 INFO sqlalchemy.engine.Engine: [raw sql] {}
2025-10-28 07:54:32,524 INFO sqlalchemy.engine.Engine: SELECT @@lower_case_table_names
2025-10-28 07:54:32,524 INFO sqlalchemy.engine.Engine: [raw sql] {}
2025-10-28 07:54:32,524 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 07:54:32,525 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id IN (%(id_1_1)s, %(id_1_2)s, %(id_1_3)s)
2025-10-28 07:54:32,525 INFO sqlalchemy.engine.Engine: [generated in 0.00009s] {'id_1_1': 1287, 'id_1_2': 1288, 'id_1_3': 1289}
2025-10-28 07:54:32,527 INFO sqlalchemy.engine.Engine: ROLLBACK
2025-10-28 07:54:51,336 INFO sqlalchemy.engine.Engine: SELECT DATABASE()
2025-10-28 07:54:51,337 INFO sqlalchemy.engine.Engine: [raw sql] {}
2025-10-28 07:54:51,337 INFO sqlalchemy.engine.Engine: SELECT @@sql_mode
2025-10-28 07:54:51,337 INFO sqlalchemy.engine.Engine: [raw sql] {}
2025-10-28 07:54:51,337 INFO sqlalchemy.engine.Engine: SELECT @@lower_case_table_names
2025-10-28 07:54:51,337 INFO sqlalchemy.engine.Engine: [raw sql] {}
2025-10-28 07:54:51,338 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 07:54:51,339 INFO sqlalchemy.engine.Engine: SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.provider = %(provider_1)s AND provider_prices.resource_type = %(resource_type_1)s 
 LIMIT %(param_1)s
2025-10-28 07:54:51,339 INFO sqlalchemy.engine.Engine: [generated in 0.00008s] {'provider_1': 'yandex', 'resource_type_1': 'compute_cpu', 'param_1': 5}
2025-10-28 07:54:51,340 INFO sqlalchemy.engine.Engine: SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.provider = %(provider_1)s AND provider_prices.resource_type = %(resource_type_1)s 
 LIMIT %(param_1)s
2025-10-28 07:54:51,340 INFO sqlalchemy.engine.Engine: [cached since 0.00158s ago] {'provider_1': 'yandex', 'resource_type_1': 'compute_ram', 'param_1': 5}
2025-10-28 07:54:51,341 INFO sqlalchemy.engine.Engine: SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.provider = %(provider_1)s AND provider_prices.resource_type = %(resource_type_1)s 
 LIMIT %(param_1)s
2025-10-28 07:54:51,341 INFO sqlalchemy.engine.Engine: [cached since 0.002564s ago] {'provider_1': 'yandex', 'resource_type_1': 'storage', 'param_1': 5}
2025-10-28 07:54:51,342 INFO sqlalchemy.engine.Engine: ROLLBACK
2025-10-28 07:55:05,709 INFO sqlalchemy.engine.Engine: SELECT DATABASE()
2025-10-28 07:55:05,709 INFO sqlalchemy.engine.Engine: [raw sql] {}
2025-10-28 07:55:05,710 INFO sqlalchemy.engine.Engine: SELECT @@sql_mode
2025-10-28 07:55:05,710 INFO sqlalchemy.engine.Engine: [raw sql] {}
2025-10-28 07:55:05,710 INFO sqlalchemy.engine.Engine: SELECT @@lower_case_table_names
2025-10-28 07:55:05,710 INFO sqlalchemy.engine.Engine: [raw sql] {}
2025-10-28 07:55:05,710 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 07:55:05,712 INFO sqlalchemy.engine.Engine: SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.provider = %(provider_1)s AND provider_prices.resource_type = %(resource_type_1)s 
 LIMIT %(param_1)s
2025-10-28 07:55:05,712 INFO sqlalchemy.engine.Engine: [generated in 0.00007s] {'provider_1': 'yandex', 'resource_type_1': 'compute_cpu', 'param_1': 5}
2025-10-28 07:55:05,713 INFO sqlalchemy.engine.Engine: SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.provider = %(provider_1)s AND provider_prices.resource_type = %(resource_type_1)s 
 LIMIT %(param_1)s
2025-10-28 07:55:05,713 INFO sqlalchemy.engine.Engine: [cached since 0.001882s ago] {'provider_1': 'yandex', 'resource_type_1': 'compute_ram', 'param_1': 5}
2025-10-28 07:55:05,715 INFO sqlalchemy.engine.Engine: SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.provider = %(provider_1)s AND provider_prices.resource_type = %(resource_type_1)s 
 LIMIT %(param_1)s
2025-10-28 07:55:05,715 INFO sqlalchemy.engine.Engine: [cached since 0.003036s ago] {'provider_1': 'yandex', 'resource_type_1': 'storage', 'param_1': 5}
2025-10-28 07:55:05,716 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.provider = %(provider_1)s) AS anon_1
2025-10-28 07:55:05,717 INFO sqlalchemy.engine.Engine: [generated in 0.00006s] {'provider_1': 'yandex'}
2025-10-28 07:55:05,718 INFO sqlalchemy.engine.Engine: ROLLBACK
2025-10-28 07:55:19,894 INFO sqlalchemy.engine.Engine: SELECT DATABASE()
2025-10-28 07:55:19,894 INFO sqlalchemy.engine.Engine: [raw sql] {}
2025-10-28 07:55:19,895 INFO sqlalchemy.engine.Engine: SELECT @@sql_mode
2025-10-28 07:55:19,895 INFO sqlalchemy.engine.Engine: [raw sql] {}
2025-10-28 07:55:19,895 INFO sqlalchemy.engine.Engine: SELECT @@lower_case_table_names
2025-10-28 07:55:19,895 INFO sqlalchemy.engine.Engine: [raw sql] {}
2025-10-28 07:55:19,896 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 07:55:19,897 INFO sqlalchemy.engine.Engine: SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.provider = %(provider_1)s
2025-10-28 07:55:19,897 INFO sqlalchemy.engine.Engine: [generated in 0.00007s] {'provider_1': 'yandex'}
2025-10-28 07:55:19,914 INFO sqlalchemy.engine.Engine: ROLLBACK
2025-10-28 07:55:39,836 INFO sqlalchemy.engine.Engine: SELECT DATABASE()
2025-10-28 07:55:39,836 INFO sqlalchemy.engine.Engine: [raw sql] {}
2025-10-28 07:55:39,837 INFO sqlalchemy.engine.Engine: SELECT @@sql_mode
2025-10-28 07:55:39,837 INFO sqlalchemy.engine.Engine: [raw sql] {}
2025-10-28 07:55:39,837 INFO sqlalchemy.engine.Engine: SELECT @@lower_case_table_names
2025-10-28 07:55:39,837 INFO sqlalchemy.engine.Engine: [raw sql] {}
2025-10-28 07:55:39,837 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 07:55:39,839 INFO sqlalchemy.engine.Engine: SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.provider = %(provider_1)s AND provider_prices.resource_type = %(resource_type_1)s ORDER BY provider_prices.monthly_cost
2025-10-28 07:55:39,839 INFO sqlalchemy.engine.Engine: [generated in 0.00007s] {'provider_1': 'yandex', 'resource_type_1': 'compute_cpu'}
2025-10-28 07:55:39,846 INFO sqlalchemy.engine.Engine: SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.provider = %(provider_1)s AND provider_prices.resource_type = %(resource_type_1)s ORDER BY provider_prices.monthly_cost
2025-10-28 07:55:39,846 INFO sqlalchemy.engine.Engine: [cached since 0.007996s ago] {'provider_1': 'yandex', 'resource_type_1': 'compute_ram'}
2025-10-28 07:55:39,851 INFO sqlalchemy.engine.Engine: SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.provider = %(provider_1)s AND provider_prices.resource_type = %(resource_type_1)s ORDER BY provider_prices.monthly_cost
2025-10-28 07:55:39,851 INFO sqlalchemy.engine.Engine: [cached since 0.01295s ago] {'provider_1': 'yandex', 'resource_type_1': 'storage'}
2025-10-28 07:55:39,854 INFO sqlalchemy.engine.Engine: ROLLBACK
2025-10-28 08:01:10,557 INFO werkzeug:  * Detected change in '/Users/colakamornik/Desktop/InfraZen/app/providers/yandex/service.py', reloading
2025-10-28 08:01:10,968 WARNING werkzeug:  * Debugger is active!
2025-10-28 08:01:10,972 INFO werkzeug:  * Debugger PIN: 146-110-975
2025-10-28 08:01:32,345 INFO werkzeug:  * Detected change in '/Users/colakamornik/Desktop/InfraZen/app/providers/yandex/service.py', reloading
2025-10-28 08:01:32,678 WARNING werkzeug:  * Debugger is active!
2025-10-28 08:01:32,682 INFO werkzeug:  * Debugger PIN: 146-110-975
2025-10-28 08:02:02,186 INFO werkzeug:  * Detected change in '/Users/colakamornik/Desktop/InfraZen/app/providers/yandex/service.py', reloading
2025-10-28 08:02:02,514 WARNING werkzeug:  * Debugger is active!
2025-10-28 08:02:02,518 INFO werkzeug:  * Debugger PIN: 146-110-975
2025-10-28 08:02:23,885 INFO werkzeug:  * Detected change in '/Users/colakamornik/Desktop/InfraZen/app/providers/yandex/service.py', reloading
2025-10-28 08:02:24,231 WARNING werkzeug:  * Debugger is active!
2025-10-28 08:02:24,234 INFO werkzeug:  * Debugger PIN: 146-110-975
2025-10-28 08:02:57,782 INFO werkzeug:  * Detected change in '/Users/colakamornik/Desktop/InfraZen/app/providers/yandex/service.py', reloading
2025-10-28 08:02:58,116 WARNING werkzeug:  * Debugger is active!
2025-10-28 08:02:58,119 INFO werkzeug:  * Debugger PIN: 146-110-975
2025-10-28 08:03:25,573 INFO werkzeug:  * Detected change in '/Users/colakamornik/Desktop/InfraZen/app/providers/yandex/service.py', reloading
2025-10-28 08:03:25,903 WARNING werkzeug:  * Debugger is active!
2025-10-28 08:03:25,907 INFO werkzeug:  * Debugger PIN: 146-110-975
2025-10-28 08:03:36,752 INFO sqlalchemy.engine.Engine: SELECT DATABASE()
2025-10-28 08:03:36,753 INFO sqlalchemy.engine.Engine: [raw sql] {}
2025-10-28 08:03:36,753 INFO sqlalchemy.engine.Engine: SELECT @@sql_mode
2025-10-28 08:03:36,753 INFO sqlalchemy.engine.Engine: [raw sql] {}
2025-10-28 08:03:36,753 INFO sqlalchemy.engine.Engine: SELECT @@lower_case_table_names
2025-10-28 08:03:36,753 INFO sqlalchemy.engine.Engine: [raw sql] {}
2025-10-28 08:03:36,754 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:03:36,755 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.connection_name = %(connection_name_1)s 
 LIMIT %(param_1)s
2025-10-28 08:03:36,755 INFO sqlalchemy.engine.Engine: [generated in 0.00008s] {'connection_name_1': 'yc', 'param_1': 1}
2025-10-28 08:03:36,756 INFO sqlalchemy.engine.Engine: ROLLBACK
2025-10-28 08:03:47,714 INFO sqlalchemy.engine.Engine: SELECT DATABASE()
2025-10-28 08:03:47,714 INFO sqlalchemy.engine.Engine: [raw sql] {}
2025-10-28 08:03:47,715 INFO sqlalchemy.engine.Engine: SELECT @@sql_mode
2025-10-28 08:03:47,715 INFO sqlalchemy.engine.Engine: [raw sql] {}
2025-10-28 08:03:47,715 INFO sqlalchemy.engine.Engine: SELECT @@lower_case_table_names
2025-10-28 08:03:47,715 INFO sqlalchemy.engine.Engine: [raw sql] {}
2025-10-28 08:03:47,715 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:03:47,716 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.connection_name = %(connection_name_1)s 
 LIMIT %(param_1)s
2025-10-28 08:03:47,716 INFO sqlalchemy.engine.Engine: [generated in 0.00008s] {'connection_name_1': 'yc', 'param_1': 1}
2025-10-28 08:03:47,718 INFO sqlalchemy.engine.Engine: INSERT INTO sync_snapshots (provider_id, sync_type, sync_status, sync_started_at, sync_completed_at, sync_duration_seconds, total_resources_found, resources_created, resources_updated, resources_deleted, resources_unchanged, total_monthly_cost, total_resources_by_type, total_resources_by_status, error_message, error_details, sync_config, created_at, updated_at) VALUES (%(provider_id)s, %(sync_type)s, %(sync_status)s, %(sync_started_at)s, %(sync_completed_at)s, %(sync_duration_seconds)s, %(total_resources_found)s, %(resources_created)s, %(resources_updated)s, %(resources_deleted)s, %(resources_unchanged)s, %(total_monthly_cost)s, %(total_resources_by_type)s, %(total_resources_by_status)s, %(error_message)s, %(error_details)s, %(sync_config)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:03:47,718 INFO sqlalchemy.engine.Engine: [generated in 0.00009s] {'provider_id': 117, 'sync_type': 'managed_services', 'sync_status': 'running', 'sync_started_at': datetime.datetime(2025, 10, 28, 8, 3, 47, 717558), 'sync_completed_at': None, 'sync_duration_seconds': None, 'total_resources_found': 0, 'resources_created': 0, 'resources_updated': 0, 'resources_deleted': 0, 'resources_unchanged': 0, 'total_monthly_cost': 0.0, 'total_resources_by_type': None, 'total_resources_by_status': None, 'error_message': None, 'error_details': None, 'sync_config': None, 'created_at': datetime.datetime(2025, 10, 28, 8, 3, 47, 718206), 'updated_at': datetime.datetime(2025, 10, 28, 8, 3, 47, 718206)}
2025-10-28 08:03:47,719 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:03:47,721 INFO app.providers.yandex.service: PHASE 1: Discovering clouds and folders
2025-10-28 08:03:47,821 INFO app.providers.yandex.client: ✅ IAM token generated successfully using service account
2025-10-28 08:03:47,901 INFO app.providers.yandex.client: Found 0 clouds
2025-10-28 08:03:47,902 WARNING app.providers.yandex.client: No clouds accessible - attempting to discover folder from service account
2025-10-28 08:03:47,966 INFO app.providers.yandex.client: Service account belongs to folder: b1gjjjsvn78f7bm7gdss
2025-10-28 08:03:47,967 INFO app.providers.yandex.client: Using service account folder: b1gjjjsvn78f7bm7gdss
2025-10-28 08:03:49,249 INFO app.providers.yandex.client: Found 1 instances in folder b1gjjjsvn78f7bm7gdss
2025-10-28 08:03:49,361 INFO app.providers.yandex.client: Found 2 disks in folder b1gjjjsvn78f7bm7gdss
2025-10-28 08:03:49,476 INFO app.providers.yandex.client: Found 1 networks in folder b1gjjjsvn78f7bm7gdss
2025-10-28 08:03:49,565 INFO app.providers.yandex.client: Found 3 subnets in folder b1gjjjsvn78f7bm7gdss
2025-10-28 08:03:49,567 INFO app.providers.yandex.client: Found 1 instances from folder b1gjjjsvn78f7bm7gdss
2025-10-28 08:03:49,567 INFO app.providers.yandex.service: PHASE 2: Processing 1 folders
2025-10-28 08:03:49,568 INFO app.providers.yandex.service: Processing folder: default (b1gjjjsvn78f7bm7gdss)
2025-10-28 08:03:49,568 INFO app.providers.yandex.service:   Querying managed services...
2025-10-28 08:03:49,654 INFO app.providers.yandex.client: Found 0 Kubernetes clusters in folder b1gjjjsvn78f7bm7gdss
2025-10-28 08:03:49,778 INFO app.providers.yandex.client: Found 0 PostgreSQL clusters in folder b1gjjjsvn78f7bm7gdss
2025-10-28 08:03:49,849 INFO app.providers.yandex.client: Found 0 MySQL clusters in folder b1gjjjsvn78f7bm7gdss
2025-10-28 08:03:49,924 INFO app.providers.yandex.client: Found 0 MongoDB clusters in folder b1gjjjsvn78f7bm7gdss
2025-10-28 08:03:50,050 INFO app.providers.yandex.client: Found 0 ClickHouse clusters in folder b1gjjjsvn78f7bm7gdss
2025-10-28 08:03:50,162 INFO app.providers.yandex.client: Found 0 Redis clusters in folder b1gjjjsvn78f7bm7gdss
2025-10-28 08:03:50,165 INFO app.providers.yandex.client: Found 0 managed service clusters in folder b1gjjjsvn78f7bm7gdss
2025-10-28 08:03:50,165 INFO app.providers.yandex.service:   Processing compute resources (filtering managed service nodes)...
2025-10-28 08:03:50,166 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:03:50,169 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_status AS sync_snapshots_sync_status, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_completed_at AS sync_snapshots_sync_completed_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.total_resources_found AS sync_snapshots_total_resources_found, sync_snapshots.resources_created AS sync_snapshots_resources_created, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:03:50,169 INFO sqlalchemy.engine.Engine: [generated in 0.00025s] {'pk_1': 8359}
2025-10-28 08:03:50,171 ERROR app.providers.yandex.service: Error processing instance fv4q6scfocfakj434b3t: name 'resources' is not defined
2025-10-28 08:03:50,172 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:03:50,172 INFO sqlalchemy.engine.Engine: [generated in 0.00020s] {'pk_1': 117}
2025-10-28 08:03:50,175 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.provider_id = %(provider_id_1)s AND resources.resource_id = %(resource_id_1)s AND resources.resource_type = %(resource_type_1)s 
 LIMIT %(param_1)s
2025-10-28 08:03:50,176 INFO sqlalchemy.engine.Engine: [generated in 0.00024s] {'provider_id_1': 117, 'resource_id_1': 'fv44kusm1jl8uqif22iv', 'resource_type_1': 'volume', 'param_1': 1}
2025-10-28 08:03:50,179 INFO sqlalchemy.engine.Engine: UPDATE resources SET last_sync=%(last_sync)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:03:50,179 INFO sqlalchemy.engine.Engine: [generated in 0.00022s] {'last_sync': datetime.datetime(2025, 10, 28, 8, 3, 50, 177593), 'updated_at': datetime.datetime(2025, 10, 28, 8, 3, 50, 179549), 'resources_id': 1289}
2025-10-28 08:03:50,181 INFO sqlalchemy.engine.Engine: INSERT INTO resource_states (sync_snapshot_id, resource_id, provider_resource_id, resource_type, resource_name, state_action, previous_state, current_state, changes_detected, service_name, region, status, effective_cost, has_cost_change, has_status_change, has_config_change, created_at, updated_at) VALUES (%(sync_snapshot_id)s, %(resource_id)s, %(provider_resource_id)s, %(resource_type)s, %(resource_name)s, %(state_action)s, %(previous_state)s, %(current_state)s, %(changes_detected)s, %(service_name)s, %(region)s, %(status)s, %(effective_cost)s, %(has_cost_change)s, %(has_status_change)s, %(has_config_change)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:03:50,181 INFO sqlalchemy.engine.Engine: [generated in 0.00025s] {'sync_snapshot_id': 8359, 'resource_id': 1289, 'provider_resource_id': 'fv44kusm1jl8uqif22iv', 'resource_type': 'volume', 'resource_name': 'justdisk', 'state_action': 'updated', 'previous_state': '{"id": 1289, "provider_id": 117, "resource_id": "fv44kusm1jl8uqif22iv", "resource_name": "justdisk", "region": "ru-central1-d", "external_ip": null,  ... (905 characters truncated) ... t": "2025-10-25T15:54:47Z", "is_standalone": true, "estimated_cost": true}, "created_at": "2025-10-25T19:53:51", "updated_at": "2025-10-27T13:03:23"}', 'current_state': '{"resource_id": "fv44kusm1jl8uqif22iv", "resource_name": "justdisk", "resource_type": "volume", "service_name": "Block Storage", "region": "ru-centra ... (553 characters truncated) ... ize_gb": 20.0, "disk_type": "network-ssd", "created_at": "2025-10-25T15:54:47Z", "is_standalone": true, "estimated_cost": true}, "external_ip": null}', 'changes_detected': '{"effective_cost": {"previous": 2.4, "current": 0.0}}', 'service_name': 'Block Storage', 'region': 'ru-central1-d', 'status': 'RUNNING', 'effective_cost': 0.0, 'has_cost_change': 1, 'has_status_change': 0, 'has_config_change': 0, 'created_at': datetime.datetime(2025, 10, 28, 8, 3, 50, 181390), 'updated_at': datetime.datetime(2025, 10, 28, 8, 3, 50, 181393)}
2025-10-28 08:03:50,182 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:03:50,183 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:03:50,184 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:03:50,184 INFO sqlalchemy.engine.Engine: [generated in 0.00008s] {'pk_1': 1289}
2025-10-28 08:03:50,185 INFO sqlalchemy.engine.Engine: UPDATE resources SET status=%(status)s, effective_cost=%(effective_cost)s, currency=%(currency)s, daily_cost=%(daily_cost)s, original_cost=%(original_cost)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:03:50,185 INFO sqlalchemy.engine.Engine: [generated in 0.00007s] {'status': 'RUNNING', 'effective_cost': 5.99, 'currency': 'RUB', 'daily_cost': 5.99, 'original_cost': 179.70000000000002, 'updated_at': datetime.datetime(2025, 10, 28, 8, 3, 50, 185045), 'resources_id': 1289}
2025-10-28 08:03:50,185 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:03:50,185 INFO sqlalchemy.engine.Engine: [cached since 0.001706s ago] {'pk_1': 1289}
2025-10-28 08:03:50,186 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:03:50,187 INFO sqlalchemy.engine.Engine: [generated in 0.00007s] {'resource_id_1': 1289, 'tag_key_1': 'folder_id', 'param_1': 1}
2025-10-28 08:03:50,187 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:03:50,187 INFO sqlalchemy.engine.Engine: [cached since 0.0009665s ago] {'resource_id_1': 1289, 'tag_key_1': 'folder_name', 'param_1': 1}
2025-10-28 08:03:50,188 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:03:50,188 INFO sqlalchemy.engine.Engine: [cached since 0.001513s ago] {'resource_id_1': 1289, 'tag_key_1': 'cloud_id', 'param_1': 1}
2025-10-28 08:03:50,188 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:03:50,188 INFO sqlalchemy.engine.Engine: [cached since 0.002024s ago] {'resource_id_1': 1289, 'tag_key_1': 'cost_source', 'param_1': 1}
2025-10-28 08:03:50,189 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:03:50,189 INFO sqlalchemy.engine.Engine: [cached since 0.002488s ago] {'resource_id_1': 1289, 'tag_key_1': 'disk_type', 'param_1': 1}
2025-10-28 08:03:50,189 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:03:50,189 INFO sqlalchemy.engine.Engine: [cached since 0.002948s ago] {'resource_id_1': 1289, 'tag_key_1': 'is_orphan', 'param_1': 1}
2025-10-28 08:03:50,190 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:03:50,190 INFO sqlalchemy.engine.Engine: [generated in 0.00005s] {'pk_1': 8359}
2025-10-28 08:03:50,191 INFO sqlalchemy.engine.Engine: UPDATE sync_snapshots SET sync_status=%(sync_status)s, sync_completed_at=%(sync_completed_at)s, total_resources_found=%(total_resources_found)s, resources_created=%(resources_created)s, updated_at=%(updated_at)s WHERE sync_snapshots.id = %(sync_snapshots_id)s
2025-10-28 08:03:50,191 INFO sqlalchemy.engine.Engine: [generated in 0.00006s] {'sync_status': 'success', 'sync_completed_at': datetime.datetime(2025, 10, 28, 8, 3, 50, 190162), 'total_resources_found': 1, 'resources_created': 1, 'updated_at': datetime.datetime(2025, 10, 28, 8, 3, 50, 191159), 'sync_snapshots_id': 8359}
2025-10-28 08:03:50,191 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:03:50,191 INFO sqlalchemy.engine.Engine: [cached since 0.001256s ago] {'pk_1': 8359}
2025-10-28 08:03:50,192 INFO sqlalchemy.engine.Engine: UPDATE sync_snapshots SET sync_duration_seconds=%(sync_duration_seconds)s, sync_config=%(sync_config)s, updated_at=%(updated_at)s WHERE sync_snapshots.id = %(sync_snapshots_id)s
2025-10-28 08:03:50,192 INFO sqlalchemy.engine.Engine: [generated in 0.00006s] {'sync_duration_seconds': 2, 'sync_config': '{"sync_method": "managed_services", "clouds_discovered": 0, "folders_discovered": 1, "total_instances": 0, "total_disks": 1, "total_managed_clusters": 0, "total_estimated_daily_cost": 5.99}', 'updated_at': datetime.datetime(2025, 10, 28, 8, 3, 50, 192325), 'sync_snapshots_id': 8359}
2025-10-28 08:03:50,192 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:03:50,192 INFO sqlalchemy.engine.Engine: [cached since 0.02061s ago] {'pk_1': 117}
2025-10-28 08:03:50,193 INFO app.providers.yandex.service: PHASE 3: Performance statistics ENABLED
2025-10-28 08:03:50,193 INFO sqlalchemy.engine.Engine: UPDATE cloud_providers SET last_sync=%(last_sync)s, updated_at=%(updated_at)s WHERE cloud_providers.id = %(cloud_providers_id)s
2025-10-28 08:03:50,193 INFO sqlalchemy.engine.Engine: [generated in 0.00005s] {'last_sync': datetime.datetime(2025, 10, 28, 8, 3, 50, 193218), 'updated_at': datetime.datetime(2025, 10, 28, 8, 3, 50, 193445), 'cloud_providers_id': 117}
2025-10-28 08:03:50,193 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:03:50,194 INFO app.providers.yandex.service: Sync completed: 1 resources (0 clusters, 0 VMs, 1 disks), estimated 5.99 ₽/day
2025-10-28 08:03:50,194 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:03:50,194 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_status AS sync_snapshots_sync_status, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_completed_at AS sync_snapshots_sync_completed_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.total_resources_found AS sync_snapshots_total_resources_found, sync_snapshots.resources_created AS sync_snapshots_resources_created, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:03:50,194 INFO sqlalchemy.engine.Engine: [cached since 0.02489s ago] {'pk_1': 8359}
2025-10-28 08:03:50,194 INFO sqlalchemy.engine.Engine: ROLLBACK
2025-10-28 08:04:19,804 INFO werkzeug:  * Detected change in '/Users/colakamornik/Desktop/InfraZen/app/providers/yandex/service.py', reloading
2025-10-28 08:04:20,155 WARNING werkzeug:  * Debugger is active!
2025-10-28 08:04:20,159 INFO werkzeug:  * Debugger PIN: 146-110-975
2025-10-28 08:04:30,119 INFO sqlalchemy.engine.Engine: SELECT DATABASE()
2025-10-28 08:04:30,119 INFO sqlalchemy.engine.Engine: [raw sql] {}
2025-10-28 08:04:30,120 INFO sqlalchemy.engine.Engine: SELECT @@sql_mode
2025-10-28 08:04:30,120 INFO sqlalchemy.engine.Engine: [raw sql] {}
2025-10-28 08:04:30,120 INFO sqlalchemy.engine.Engine: SELECT @@lower_case_table_names
2025-10-28 08:04:30,120 INFO sqlalchemy.engine.Engine: [raw sql] {}
2025-10-28 08:04:30,121 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:04:30,122 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.connection_name = %(connection_name_1)s 
 LIMIT %(param_1)s
2025-10-28 08:04:30,122 INFO sqlalchemy.engine.Engine: [generated in 0.00008s] {'connection_name_1': 'yc', 'param_1': 1}
2025-10-28 08:04:30,123 INFO sqlalchemy.engine.Engine: INSERT INTO sync_snapshots (provider_id, sync_type, sync_status, sync_started_at, sync_completed_at, sync_duration_seconds, total_resources_found, resources_created, resources_updated, resources_deleted, resources_unchanged, total_monthly_cost, total_resources_by_type, total_resources_by_status, error_message, error_details, sync_config, created_at, updated_at) VALUES (%(provider_id)s, %(sync_type)s, %(sync_status)s, %(sync_started_at)s, %(sync_completed_at)s, %(sync_duration_seconds)s, %(total_resources_found)s, %(resources_created)s, %(resources_updated)s, %(resources_deleted)s, %(resources_unchanged)s, %(total_monthly_cost)s, %(total_resources_by_type)s, %(total_resources_by_status)s, %(error_message)s, %(error_details)s, %(sync_config)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:04:30,123 INFO sqlalchemy.engine.Engine: [generated in 0.00011s] {'provider_id': 117, 'sync_type': 'managed_services', 'sync_status': 'running', 'sync_started_at': datetime.datetime(2025, 10, 28, 8, 4, 30, 123077), 'sync_completed_at': None, 'sync_duration_seconds': None, 'total_resources_found': 0, 'resources_created': 0, 'resources_updated': 0, 'resources_deleted': 0, 'resources_unchanged': 0, 'total_monthly_cost': 0.0, 'total_resources_by_type': None, 'total_resources_by_status': None, 'error_message': None, 'error_details': None, 'sync_config': None, 'created_at': datetime.datetime(2025, 10, 28, 8, 4, 30, 123747), 'updated_at': datetime.datetime(2025, 10, 28, 8, 4, 30, 123748)}
2025-10-28 08:04:30,124 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:04:30,125 INFO app.providers.yandex.service: PHASE 1: Discovering clouds and folders
2025-10-28 08:04:30,268 INFO app.providers.yandex.client: ✅ IAM token generated successfully using service account
2025-10-28 08:04:30,347 INFO app.providers.yandex.client: Found 0 clouds
2025-10-28 08:04:30,348 WARNING app.providers.yandex.client: No clouds accessible - attempting to discover folder from service account
2025-10-28 08:04:30,406 INFO app.providers.yandex.client: Service account belongs to folder: b1gjjjsvn78f7bm7gdss
2025-10-28 08:04:30,407 INFO app.providers.yandex.client: Using service account folder: b1gjjjsvn78f7bm7gdss
2025-10-28 08:04:30,580 INFO app.providers.yandex.client: Found 1 instances in folder b1gjjjsvn78f7bm7gdss
2025-10-28 08:04:30,687 INFO app.providers.yandex.client: Found 2 disks in folder b1gjjjsvn78f7bm7gdss
2025-10-28 08:04:30,805 INFO app.providers.yandex.client: Found 1 networks in folder b1gjjjsvn78f7bm7gdss
2025-10-28 08:04:30,906 INFO app.providers.yandex.client: Found 3 subnets in folder b1gjjjsvn78f7bm7gdss
2025-10-28 08:04:30,909 INFO app.providers.yandex.client: Found 1 instances from folder b1gjjjsvn78f7bm7gdss
2025-10-28 08:04:30,909 INFO app.providers.yandex.service: PHASE 2: Processing 1 folders
2025-10-28 08:04:30,910 INFO app.providers.yandex.service: Processing folder: default (b1gjjjsvn78f7bm7gdss)
2025-10-28 08:04:30,910 INFO app.providers.yandex.service:   Querying managed services...
2025-10-28 08:04:30,983 INFO app.providers.yandex.client: Found 0 Kubernetes clusters in folder b1gjjjsvn78f7bm7gdss
2025-10-28 08:04:31,082 INFO app.providers.yandex.client: Found 0 PostgreSQL clusters in folder b1gjjjsvn78f7bm7gdss
2025-10-28 08:04:31,165 INFO app.providers.yandex.client: Found 0 MySQL clusters in folder b1gjjjsvn78f7bm7gdss
2025-10-28 08:04:31,262 INFO app.providers.yandex.client: Found 0 MongoDB clusters in folder b1gjjjsvn78f7bm7gdss
2025-10-28 08:04:31,393 INFO app.providers.yandex.client: Found 0 ClickHouse clusters in folder b1gjjjsvn78f7bm7gdss
2025-10-28 08:04:31,483 INFO app.providers.yandex.client: Found 0 Redis clusters in folder b1gjjjsvn78f7bm7gdss
2025-10-28 08:04:31,484 INFO app.providers.yandex.client: Found 0 managed service clusters in folder b1gjjjsvn78f7bm7gdss
2025-10-28 08:04:31,484 INFO app.providers.yandex.service:   Processing compute resources (filtering managed service nodes)...
2025-10-28 08:04:31,485 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:04:31,487 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_status AS sync_snapshots_sync_status, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_completed_at AS sync_snapshots_sync_completed_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.total_resources_found AS sync_snapshots_total_resources_found, sync_snapshots.resources_created AS sync_snapshots_resources_created, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:04:31,487 INFO sqlalchemy.engine.Engine: [generated in 0.00017s] {'pk_1': 8360}
2025-10-28 08:04:31,489 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:04:31,490 INFO sqlalchemy.engine.Engine: [generated in 0.00011s] {'pk_1': 117}
2025-10-28 08:04:31,492 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.provider_id = %(provider_id_1)s AND resources.resource_id = %(resource_id_1)s AND resources.resource_type = %(resource_type_1)s 
 LIMIT %(param_1)s
2025-10-28 08:04:31,493 INFO sqlalchemy.engine.Engine: [generated in 0.00014s] {'provider_id_1': 117, 'resource_id_1': 'fv4q6scfocfakj434b3t', 'resource_type_1': 'server', 'param_1': 1}
2025-10-28 08:04:31,496 INFO sqlalchemy.engine.Engine: UPDATE resources SET last_sync=%(last_sync)s, provider_config=%(provider_config)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:04:31,496 INFO sqlalchemy.engine.Engine: [generated in 0.00018s] {'last_sync': datetime.datetime(2025, 10, 28, 8, 4, 31, 494429), 'provider_config': '{"instance": {"resources": {"memory": "2147483648", "cores": "2", "coreFraction": "100"}, "metadataOptions": {"gceHttpEndpoint": "ENABLED", "awsV1Htt ... (1552 characters truncated) ... d0:0d:1a:37:18:fc", "subnetId": "fl8b569sf74reuumftkp"}], "created_at": "2025-10-25T15:15:57Z", "platform_id": "standard-v3", "estimated_cost": true}', 'updated_at': datetime.datetime(2025, 10, 28, 8, 4, 31, 495972), 'resources_id': 1288}
2025-10-28 08:04:31,497 INFO sqlalchemy.engine.Engine: INSERT INTO resource_states (sync_snapshot_id, resource_id, provider_resource_id, resource_type, resource_name, state_action, previous_state, current_state, changes_detected, service_name, region, status, effective_cost, has_cost_change, has_status_change, has_config_change, created_at, updated_at) VALUES (%(sync_snapshot_id)s, %(resource_id)s, %(provider_resource_id)s, %(resource_type)s, %(resource_name)s, %(state_action)s, %(previous_state)s, %(current_state)s, %(changes_detected)s, %(service_name)s, %(region)s, %(status)s, %(effective_cost)s, %(has_cost_change)s, %(has_status_change)s, %(has_config_change)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:04:31,497 INFO sqlalchemy.engine.Engine: [generated in 0.00016s] {'sync_snapshot_id': 8360, 'resource_id': 1288, 'provider_resource_id': 'fv4q6scfocfakj434b3t', 'resource_type': 'server', 'resource_name': 'goodvm', 'state_action': 'updated', 'previous_state': '{"id": 1288, "provider_id": 117, "resource_id": "fv4q6scfocfakj434b3t", "resource_name": "goodvm", "region": "ru-central1-d", "external_ip": "158.160 ... (2422 characters truncated) ... t"}, "disk": {"note": "Disk usage metrics require Yandex Unified Agent"}}}, "created_at": "2025-10-25T19:53:51", "updated_at": "2025-10-27T13:03:24"}', 'current_state': '{"resource_id": "fv4q6scfocfakj434b3t", "resource_name": "goodvm", "resource_type": "server", "service_name": "Compute Cloud", "region": "ru-central1 ... (1803 characters truncated) ... l8b569sf74reuumftkp"}], "created_at": "2025-10-25T15:15:57Z", "platform_id": "standard-v3", "estimated_cost": true}, "external_ip": "158.160.178.82"}', 'changes_detected': '{"effective_cost": {"previous": 92.4, "current": 0.0}, "provider_config": {"previous": {"instance": {"resources": {"memory": "2147483648", "cores": " ... (3770 characters truncated) ... :0d:1a:37:18:fc", "subnetId": "fl8b569sf74reuumftkp"}], "created_at": "2025-10-25T15:15:57Z", "platform_id": "standard-v3", "estimated_cost": true}}}', 'service_name': 'Compute Cloud', 'region': 'ru-central1-d', 'status': 'RUNNING', 'effective_cost': 0.0, 'has_cost_change': 1, 'has_status_change': 0, 'has_config_change': 1, 'created_at': datetime.datetime(2025, 10, 28, 8, 4, 31, 497699), 'updated_at': datetime.datetime(2025, 10, 28, 8, 4, 31, 497701)}
2025-10-28 08:04:31,499 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:04:31,501 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:04:31,502 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:04:31,502 INFO sqlalchemy.engine.Engine: [generated in 0.00010s] {'pk_1': 1288}
2025-10-28 08:04:31,503 INFO sqlalchemy.engine.Engine: UPDATE resources SET external_ip=%(external_ip)s, effective_cost=%(effective_cost)s, currency=%(currency)s, daily_cost=%(daily_cost)s, original_cost=%(original_cost)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:04:31,503 INFO sqlalchemy.engine.Engine: [generated in 0.00010s] {'external_ip': '158.160.178.82', 'effective_cost': 74.15, 'currency': 'RUB', 'daily_cost': 74.15, 'original_cost': 2224.5, 'updated_at': datetime.datetime(2025, 10, 28, 8, 4, 31, 503672), 'resources_id': 1288}
2025-10-28 08:04:31,504 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:04:31,504 INFO sqlalchemy.engine.Engine: [cached since 0.00234s ago] {'pk_1': 1288}
2025-10-28 08:04:31,505 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:04:31,506 INFO sqlalchemy.engine.Engine: [generated in 0.00010s] {'resource_id_1': 1288, 'tag_key_1': 'folder_id', 'param_1': 1}
2025-10-28 08:04:31,507 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:04:31,507 INFO sqlalchemy.engine.Engine: [cached since 0.001346s ago] {'resource_id_1': 1288, 'tag_key_1': 'folder_name', 'param_1': 1}
2025-10-28 08:04:31,507 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:04:31,508 INFO sqlalchemy.engine.Engine: [cached since 0.002142s ago] {'resource_id_1': 1288, 'tag_key_1': 'cloud_id', 'param_1': 1}
2025-10-28 08:04:31,508 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:04:31,508 INFO sqlalchemy.engine.Engine: [cached since 0.00297s ago] {'resource_id_1': 1288, 'tag_key_1': 'cost_source', 'param_1': 1}
2025-10-28 08:04:31,509 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:04:31,509 INFO sqlalchemy.engine.Engine: [cached since 0.003654s ago] {'resource_id_1': 1288, 'tag_key_1': 'platform_id', 'param_1': 1}
2025-10-28 08:04:31,510 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_status AS sync_snapshots_sync_status, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_completed_at AS sync_snapshots_sync_completed_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.total_resources_found AS sync_snapshots_total_resources_found, sync_snapshots.resources_created AS sync_snapshots_resources_created, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:04:31,510 INFO sqlalchemy.engine.Engine: [cached since 0.02246s ago] {'pk_1': 8360}
2025-10-28 08:04:31,510 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:04:31,510 INFO sqlalchemy.engine.Engine: [cached since 0.021s ago] {'pk_1': 117}
2025-10-28 08:04:31,511 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.provider_id = %(provider_id_1)s AND resources.resource_id = %(resource_id_1)s AND resources.resource_type = %(resource_type_1)s 
 LIMIT %(param_1)s
2025-10-28 08:04:31,511 INFO sqlalchemy.engine.Engine: [cached since 0.01864s ago] {'provider_id_1': 117, 'resource_id_1': 'fv44kusm1jl8uqif22iv', 'resource_type_1': 'volume', 'param_1': 1}
2025-10-28 08:04:31,512 INFO sqlalchemy.engine.Engine: UPDATE resources SET last_sync=%(last_sync)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:04:31,512 INFO sqlalchemy.engine.Engine: [generated in 0.00010s] {'last_sync': datetime.datetime(2025, 10, 28, 8, 4, 31, 512317), 'updated_at': datetime.datetime(2025, 10, 28, 8, 4, 31, 512841), 'resources_id': 1289}
2025-10-28 08:04:31,513 INFO sqlalchemy.engine.Engine: INSERT INTO resource_states (sync_snapshot_id, resource_id, provider_resource_id, resource_type, resource_name, state_action, previous_state, current_state, changes_detected, service_name, region, status, effective_cost, has_cost_change, has_status_change, has_config_change, created_at, updated_at) VALUES (%(sync_snapshot_id)s, %(resource_id)s, %(provider_resource_id)s, %(resource_type)s, %(resource_name)s, %(state_action)s, %(previous_state)s, %(current_state)s, %(changes_detected)s, %(service_name)s, %(region)s, %(status)s, %(effective_cost)s, %(has_cost_change)s, %(has_status_change)s, %(has_config_change)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:04:31,513 INFO sqlalchemy.engine.Engine: [cached since 0.01586s ago] {'sync_snapshot_id': 8360, 'resource_id': 1289, 'provider_resource_id': 'fv44kusm1jl8uqif22iv', 'resource_type': 'volume', 'resource_name': 'justdisk', 'state_action': 'updated', 'previous_state': '{"id": 1289, "provider_id": 117, "resource_id": "fv44kusm1jl8uqif22iv", "resource_name": "justdisk", "region": "ru-central1-d", "external_ip": null,  ... (906 characters truncated) ... t": "2025-10-25T15:54:47Z", "is_standalone": true, "estimated_cost": true}, "created_at": "2025-10-25T19:53:51", "updated_at": "2025-10-28T08:03:50"}', 'current_state': '{"resource_id": "fv44kusm1jl8uqif22iv", "resource_name": "justdisk", "resource_type": "volume", "service_name": "Block Storage", "region": "ru-centra ... (553 characters truncated) ... ize_gb": 20.0, "disk_type": "network-ssd", "created_at": "2025-10-25T15:54:47Z", "is_standalone": true, "estimated_cost": true}, "external_ip": null}', 'changes_detected': '{"effective_cost": {"previous": 5.99, "current": 0.0}}', 'service_name': 'Block Storage', 'region': 'ru-central1-d', 'status': 'RUNNING', 'effective_cost': 0.0, 'has_cost_change': 1, 'has_status_change': 0, 'has_config_change': 0, 'created_at': datetime.datetime(2025, 10, 28, 8, 4, 31, 513452), 'updated_at': datetime.datetime(2025, 10, 28, 8, 4, 31, 513453)}
2025-10-28 08:04:31,514 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:04:31,515 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:04:31,516 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:04:31,516 INFO sqlalchemy.engine.Engine: [generated in 0.00009s] {'pk_1': 1289}
2025-10-28 08:04:31,517 INFO sqlalchemy.engine.Engine: UPDATE resources SET status=%(status)s, effective_cost=%(effective_cost)s, currency=%(currency)s, daily_cost=%(daily_cost)s, original_cost=%(original_cost)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:04:31,517 INFO sqlalchemy.engine.Engine: [generated in 0.00009s] {'status': 'RUNNING', 'effective_cost': 5.99, 'currency': 'RUB', 'daily_cost': 5.99, 'original_cost': 179.70000000000002, 'updated_at': datetime.datetime(2025, 10, 28, 8, 4, 31, 517156), 'resources_id': 1289}
2025-10-28 08:04:31,517 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:04:31,517 INFO sqlalchemy.engine.Engine: [cached since 0.001633s ago] {'pk_1': 1289}
2025-10-28 08:04:31,518 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:04:31,518 INFO sqlalchemy.engine.Engine: [cached since 0.01272s ago] {'resource_id_1': 1289, 'tag_key_1': 'folder_id', 'param_1': 1}
2025-10-28 08:04:31,519 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:04:31,519 INFO sqlalchemy.engine.Engine: [cached since 0.01352s ago] {'resource_id_1': 1289, 'tag_key_1': 'folder_name', 'param_1': 1}
2025-10-28 08:04:31,520 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:04:31,520 INFO sqlalchemy.engine.Engine: [cached since 0.01427s ago] {'resource_id_1': 1289, 'tag_key_1': 'cloud_id', 'param_1': 1}
2025-10-28 08:04:31,520 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:04:31,520 INFO sqlalchemy.engine.Engine: [cached since 0.01502s ago] {'resource_id_1': 1289, 'tag_key_1': 'cost_source', 'param_1': 1}
2025-10-28 08:04:31,521 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:04:31,521 INFO sqlalchemy.engine.Engine: [cached since 0.01572s ago] {'resource_id_1': 1289, 'tag_key_1': 'disk_type', 'param_1': 1}
2025-10-28 08:04:31,522 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:04:31,522 INFO sqlalchemy.engine.Engine: [cached since 0.01639s ago] {'resource_id_1': 1289, 'tag_key_1': 'is_orphan', 'param_1': 1}
2025-10-28 08:04:31,523 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:04:31,523 INFO sqlalchemy.engine.Engine: [generated in 0.00008s] {'pk_1': 8360}
2025-10-28 08:04:31,524 INFO sqlalchemy.engine.Engine: UPDATE sync_snapshots SET sync_status=%(sync_status)s, sync_completed_at=%(sync_completed_at)s, total_resources_found=%(total_resources_found)s, resources_created=%(resources_created)s, updated_at=%(updated_at)s WHERE sync_snapshots.id = %(sync_snapshots_id)s
2025-10-28 08:04:31,524 INFO sqlalchemy.engine.Engine: [generated in 0.00009s] {'sync_status': 'success', 'sync_completed_at': datetime.datetime(2025, 10, 28, 8, 4, 31, 522688), 'total_resources_found': 2, 'resources_created': 2, 'updated_at': datetime.datetime(2025, 10, 28, 8, 4, 31, 524044), 'sync_snapshots_id': 8360}
2025-10-28 08:04:31,524 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:04:31,524 INFO sqlalchemy.engine.Engine: [cached since 0.001532s ago] {'pk_1': 8360}
2025-10-28 08:04:31,525 INFO sqlalchemy.engine.Engine: UPDATE sync_snapshots SET sync_duration_seconds=%(sync_duration_seconds)s, sync_config=%(sync_config)s, updated_at=%(updated_at)s WHERE sync_snapshots.id = %(sync_snapshots_id)s
2025-10-28 08:04:31,525 INFO sqlalchemy.engine.Engine: [generated in 0.00008s] {'sync_duration_seconds': 1, 'sync_config': '{"sync_method": "managed_services", "clouds_discovered": 0, "folders_discovered": 1, "total_instances": 1, "total_disks": 1, "total_managed_clusters": 0, "total_estimated_daily_cost": 80.14}', 'updated_at': datetime.datetime(2025, 10, 28, 8, 4, 31, 525545), 'sync_snapshots_id': 8360}
2025-10-28 08:04:31,526 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:04:31,526 INFO sqlalchemy.engine.Engine: [cached since 0.03617s ago] {'pk_1': 117}
2025-10-28 08:04:31,526 INFO app.providers.yandex.service: PHASE 3: Performance statistics ENABLED
2025-10-28 08:04:31,527 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:04:31,527 INFO sqlalchemy.engine.Engine: [generated in 0.00008s] {'pk_1': 1288}
2025-10-28 08:04:31,528 INFO app.providers.yandex.service: Collecting CPU statistics for 1 standalone VMs...
2025-10-28 08:04:32,137 INFO app.providers.yandex.client: ✅ CPU statistics for fv4q6scfocfakj434b3t: avg=0.12%, max=0.94%, 63 points
2025-10-28 08:04:32,141 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:04:32,141 INFO sqlalchemy.engine.Engine: [cached since 0.6355s ago] {'resource_id_1': 1288, 'tag_key_1': 'cpu_avg_usage', 'param_1': 1}
2025-10-28 08:04:32,144 INFO sqlalchemy.engine.Engine: UPDATE resource_tags SET tag_value=%(tag_value)s, updated_at=%(updated_at)s WHERE resource_tags.id = %(resource_tags_id)s
2025-10-28 08:04:32,144 INFO sqlalchemy.engine.Engine: [generated in 0.00046s] {'tag_value': '0.12', 'updated_at': datetime.datetime(2025, 10, 28, 8, 4, 32, 144418), 'resource_tags_id': 2743}
2025-10-28 08:04:32,146 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:04:32,146 INFO sqlalchemy.engine.Engine: [cached since 0.6407s ago] {'resource_id_1': 1288, 'tag_key_1': 'cpu_max_usage', 'param_1': 1}
2025-10-28 08:04:32,148 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:04:32,148 INFO sqlalchemy.engine.Engine: [cached since 0.643s ago] {'resource_id_1': 1288, 'tag_key_1': 'cpu_min_usage', 'param_1': 1}
2025-10-28 08:04:32,150 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:04:32,150 INFO sqlalchemy.engine.Engine: [cached since 0.6448s ago] {'resource_id_1': 1288, 'tag_key_1': 'cpu_performance_tier', 'param_1': 1}
2025-10-28 08:04:32,152 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:04:32,153 INFO sqlalchemy.engine.Engine: [cached since 0.6471s ago] {'resource_id_1': 1288, 'tag_key_1': 'cpu_raw_data', 'param_1': 1}
2025-10-28 08:04:32,153 INFO app.providers.yandex.service:    ✅ goodvm: CPU avg=0.12%
2025-10-28 08:04:32,154 INFO sqlalchemy.engine.Engine: UPDATE resource_tags SET tag_value=%(tag_value)s, updated_at=%(updated_at)s WHERE resource_tags.id = %(resource_tags_id)s
2025-10-28 08:04:32,154 INFO sqlalchemy.engine.Engine: [cached since 0.01003s ago] {'tag_value': '{"dates": ["2025-10-25", "2025-10-26", "2025-10-27", "2025-10-28"], "values": [0.11, 0.14, 0.11, 0.09]}', 'updated_at': datetime.datetime(2025, 10, 28, 8, 4, 32, 154251), 'resource_tags_id': 2748}
2025-10-28 08:04:32,155 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:04:32,155 INFO app.providers.yandex.service: Performance statistics collection completed
2025-10-28 08:04:32,156 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:04:32,157 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:04:32,158 INFO sqlalchemy.engine.Engine: [generated in 0.00022s] {'pk_1': 117}
2025-10-28 08:04:32,159 INFO sqlalchemy.engine.Engine: UPDATE cloud_providers SET last_sync=%(last_sync)s, sync_status=%(sync_status)s, sync_error=%(sync_error)s, updated_at=%(updated_at)s WHERE cloud_providers.id = %(cloud_providers_id)s
2025-10-28 08:04:32,159 INFO sqlalchemy.engine.Engine: [generated in 0.00028s] {'last_sync': datetime.datetime(2025, 10, 28, 8, 4, 32, 156142), 'sync_status': 'success', 'sync_error': None, 'updated_at': datetime.datetime(2025, 10, 28, 8, 4, 32, 159515), 'cloud_providers_id': 117}
2025-10-28 08:04:32,160 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:04:32,161 INFO app.providers.yandex.service: Sync completed: 2 resources (0 clusters, 1 VMs, 1 disks), estimated 80.14 ₽/day
2025-10-28 08:04:32,161 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:04:32,161 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_status AS sync_snapshots_sync_status, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_completed_at AS sync_snapshots_sync_completed_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.total_resources_found AS sync_snapshots_total_resources_found, sync_snapshots.resources_created AS sync_snapshots_resources_created, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:04:32,162 INFO sqlalchemy.engine.Engine: [cached since 0.6743s ago] {'pk_1': 8360}
2025-10-28 08:04:32,162 INFO sqlalchemy.engine.Engine: ROLLBACK
2025-10-28 08:04:49,068 INFO sqlalchemy.engine.Engine: SELECT DATABASE()
2025-10-28 08:04:49,068 INFO sqlalchemy.engine.Engine: [raw sql] {}
2025-10-28 08:04:49,069 INFO sqlalchemy.engine.Engine: SELECT @@sql_mode
2025-10-28 08:04:49,069 INFO sqlalchemy.engine.Engine: [raw sql] {}
2025-10-28 08:04:49,069 INFO sqlalchemy.engine.Engine: SELECT @@lower_case_table_names
2025-10-28 08:04:49,069 INFO sqlalchemy.engine.Engine: [raw sql] {}
2025-10-28 08:04:49,070 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:04:49,071 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.provider_id = %(provider_id_1)s AND resources.is_active = true
2025-10-28 08:04:49,071 INFO sqlalchemy.engine.Engine: [generated in 0.00007s] {'provider_id_1': 117}
2025-10-28 08:04:49,072 INFO sqlalchemy.engine.Engine: ROLLBACK
2025-10-28 08:05:20,663 INFO sqlalchemy.engine.Engine: SELECT DATABASE()
2025-10-28 08:05:20,664 INFO sqlalchemy.engine.Engine: [raw sql] {}
2025-10-28 08:05:20,664 INFO sqlalchemy.engine.Engine: SELECT @@sql_mode
2025-10-28 08:05:20,664 INFO sqlalchemy.engine.Engine: [raw sql] {}
2025-10-28 08:05:20,664 INFO sqlalchemy.engine.Engine: SELECT @@lower_case_table_names
2025-10-28 08:05:20,664 INFO sqlalchemy.engine.Engine: [raw sql] {}
2025-10-28 08:05:20,665 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:05:20,666 INFO sqlalchemy.engine.Engine: SELECT users.username AS users_username, users.email AS users_email, users.password_hash AS users_password_hash, users.google_id AS users_google_id, users.google_picture AS users_google_picture, users.google_verified_email AS users_google_verified_email, users.google_locale AS users_google_locale, users.first_name AS users_first_name, users.last_name AS users_last_name, users.company AS users_company, users.`role` AS users_role, users.permissions AS users_permissions, users.is_active AS users_is_active, users.is_verified AS users_is_verified, users.email_confirmed AS users_email_confirmed, users.email_confirmation_token AS users_email_confirmation_token, users.email_confirmation_sent_at AS users_email_confirmation_sent_at, users.last_login AS users_last_login, users.login_count AS users_login_count, users.created_by_admin AS users_created_by_admin, users.admin_notes AS users_admin_notes, users.timezone AS users_timezone, users.currency AS users_currency, users.language AS users_language, users.id AS users_id, users.created_at AS users_created_at, users.updated_at AS users_updated_at 
FROM users 
WHERE users.id = %(pk_1)s
2025-10-28 08:05:20,666 INFO sqlalchemy.engine.Engine: [generated in 0.00006s] {'pk_1': 2}
2025-10-28 08:05:20,667 INFO app.core.services.complete_sync_service.CompleteSyncService: Starting complete sync for user 2
2025-10-28 08:05:20,668 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.user_id = %(user_id_1)s AND cloud_providers.auto_sync = true AND cloud_providers.is_active = true ORDER BY cloud_providers.created_at
2025-10-28 08:05:20,668 INFO sqlalchemy.engine.Engine: [generated in 0.00005s] {'user_id_1': 2}
2025-10-28 08:05:20,670 INFO sqlalchemy.engine.Engine: INSERT INTO complete_syncs (user_id, sync_type, sync_status, sync_started_at, sync_completed_at, sync_duration_seconds, total_providers_synced, successful_providers, failed_providers, total_resources_found, total_monthly_cost, total_daily_cost, cost_by_provider, resources_by_provider, error_message, error_details, sync_config, created_at, updated_at) VALUES (%(user_id)s, %(sync_type)s, %(sync_status)s, %(sync_started_at)s, %(sync_completed_at)s, %(sync_duration_seconds)s, %(total_providers_synced)s, %(successful_providers)s, %(failed_providers)s, %(total_resources_found)s, %(total_monthly_cost)s, %(total_daily_cost)s, %(cost_by_provider)s, %(resources_by_provider)s, %(error_message)s, %(error_details)s, %(sync_config)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:05:20,670 INFO sqlalchemy.engine.Engine: [generated in 0.00008s] {'user_id': 2, 'sync_type': 'manual', 'sync_status': 'running', 'sync_started_at': datetime.datetime(2025, 10, 28, 8, 5, 20, 669872), 'sync_completed_at': None, 'sync_duration_seconds': None, 'total_providers_synced': 0, 'successful_providers': 0, 'failed_providers': 0, 'total_resources_found': 0, 'total_monthly_cost': 0.0, 'total_daily_cost': 0.0, 'cost_by_provider': None, 'resources_by_provider': None, 'error_message': None, 'error_details': None, 'sync_config': '{"sync_type": "manual", "user_id": 2, "providers_count": 4, "sync_timestamp": "2025-10-28T08:05:20.669891", "providers": [{"id": 1, "name": "Beget- c ... (24 characters truncated) ... {"id": 2, "name": "Selectel-Cola", "type": "selectel"}, {"id": 117, "name": "yc", "type": "yandex"}, {"id": 150, "name": "yc-it", "type": "yandex"}]}', 'created_at': datetime.datetime(2025, 10, 28, 8, 5, 20, 670898), 'updated_at': datetime.datetime(2025, 10, 28, 8, 5, 20, 670899)}
2025-10-28 08:05:20,671 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:05:20,673 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:05:20,673 INFO sqlalchemy.engine.Engine: SELECT complete_syncs.user_id AS complete_syncs_user_id, complete_syncs.sync_type AS complete_syncs_sync_type, complete_syncs.sync_status AS complete_syncs_sync_status, complete_syncs.sync_started_at AS complete_syncs_sync_started_at, complete_syncs.sync_completed_at AS complete_syncs_sync_completed_at, complete_syncs.sync_duration_seconds AS complete_syncs_sync_duration_seconds, complete_syncs.total_providers_synced AS complete_syncs_total_providers_synced, complete_syncs.successful_providers AS complete_syncs_successful_providers, complete_syncs.failed_providers AS complete_syncs_failed_providers, complete_syncs.total_resources_found AS complete_syncs_total_resources_found, complete_syncs.total_monthly_cost AS complete_syncs_total_monthly_cost, complete_syncs.total_daily_cost AS complete_syncs_total_daily_cost, complete_syncs.cost_by_provider AS complete_syncs_cost_by_provider, complete_syncs.resources_by_provider AS complete_syncs_resources_by_provider, complete_syncs.error_message AS complete_syncs_error_message, complete_syncs.error_details AS complete_syncs_error_details, complete_syncs.sync_config AS complete_syncs_sync_config, complete_syncs.id AS complete_syncs_id, complete_syncs.created_at AS complete_syncs_created_at, complete_syncs.updated_at AS complete_syncs_updated_at 
FROM complete_syncs 
WHERE complete_syncs.id = %(pk_1)s
2025-10-28 08:05:20,673 INFO sqlalchemy.engine.Engine: [generated in 0.00005s] {'pk_1': 2082}
2025-10-28 08:05:20,674 INFO app.core.services.complete_sync_service.CompleteSyncService: Created complete sync 2082 for 4 providers
2025-10-28 08:05:20,674 INFO sqlalchemy.engine.Engine: UPDATE complete_syncs SET total_providers_synced=%(total_providers_synced)s, updated_at=%(updated_at)s WHERE complete_syncs.id = %(complete_syncs_id)s
2025-10-28 08:05:20,674 INFO sqlalchemy.engine.Engine: [generated in 0.00005s] {'total_providers_synced': 4, 'updated_at': datetime.datetime(2025, 10, 28, 8, 5, 20, 674533), 'complete_syncs_id': 2082}
2025-10-28 08:05:20,675 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:05:20,675 INFO sqlalchemy.engine.Engine: [generated in 0.00005s] {'pk_1': 1}
2025-10-28 08:05:20,675 INFO app.core.services.complete_sync_service.CompleteSyncService: Syncing provider 1 (Beget- cola) - 1/4
2025-10-28 08:05:20,675 INFO app.providers.sync_orchestrator.SyncOrchestrator: Starting complete_sync sync for provider 1 (beget)
2025-10-28 08:05:20,676 INFO sqlalchemy.engine.Engine: INSERT INTO sync_snapshots (provider_id, sync_type, sync_status, sync_started_at, sync_completed_at, sync_duration_seconds, total_resources_found, resources_created, resources_updated, resources_deleted, resources_unchanged, total_monthly_cost, total_resources_by_type, total_resources_by_status, error_message, error_details, sync_config, created_at, updated_at) VALUES (%(provider_id)s, %(sync_type)s, %(sync_status)s, %(sync_started_at)s, %(sync_completed_at)s, %(sync_duration_seconds)s, %(total_resources_found)s, %(resources_created)s, %(resources_updated)s, %(resources_deleted)s, %(resources_unchanged)s, %(total_monthly_cost)s, %(total_resources_by_type)s, %(total_resources_by_status)s, %(error_message)s, %(error_details)s, %(sync_config)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:05:20,676 INFO sqlalchemy.engine.Engine: [generated in 0.00010s] {'provider_id': 1, 'sync_type': 'complete_sync', 'sync_status': 'running', 'sync_started_at': datetime.datetime(2025, 10, 28, 8, 5, 20, 675810), 'sync_completed_at': None, 'sync_duration_seconds': None, 'total_resources_found': 0, 'resources_created': 0, 'resources_updated': 0, 'resources_deleted': 0, 'resources_unchanged': 0, 'total_monthly_cost': 0.0, 'total_resources_by_type': None, 'total_resources_by_status': None, 'error_message': None, 'error_details': None, 'sync_config': '{"sync_type": "complete_sync", "provider_type": "beget", "connection_name": "Beget- cola", "sync_timestamp": "2025-10-28T08:05:20.675824"}', 'created_at': datetime.datetime(2025, 10, 28, 8, 5, 20, 676444), 'updated_at': datetime.datetime(2025, 10, 28, 8, 5, 20, 676448)}
2025-10-28 08:05:20,676 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:05:20,677 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:05:20,677 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:05:20,677 INFO sqlalchemy.engine.Engine: [cached since 0.00242s ago] {'pk_1': 1}
2025-10-28 08:05:20,678 INFO app.providers.plugin_system.ProviderPluginManager: Discovering provider plugins...
2025-10-28 08:05:20,679 INFO app.providers.plugin_system.ProviderPluginManager: Discovered plugin: beget -> BegetProviderPlugin
2025-10-28 08:05:20,679 INFO app.providers.plugin_system.ProviderPluginManager: Discovered plugin: selectel -> SelectelProviderPlugin
2025-10-28 08:05:20,679 INFO app.providers.plugin_system.ProviderPluginManager: Discovered plugin: yandex -> YandexProviderPlugin
2025-10-28 08:05:20,679 INFO app.providers.plugin_system.ProviderPluginManager: Plugin discovery complete. Found 3 plugins: ['beget', 'selectel', 'yandex']
2025-10-28 08:05:20,679 INFO app.providers.sync_orchestrator.SyncOrchestrator: Testing connection for provider 1
2025-10-28 08:05:21,018 INFO app.providers.beget.client: DEBUG: Full Beget API response: {'token': 'eyJhbGciOiJSUzUxMiIsInR5cCI6IkpXVCJ9.eyJjdXN0b21lcklkIjoiMjQ0MjU4MSIsImN1c3RvbWVyTG9naW4iOiJjb2xhaXN3diIsImVudiI6IndlYiIsImV4cCI6MTc2MTg4NzEyMSwiaWF0IjoxNzYxNjI3ODYxLCJpcCI6Ijk1LjI0LjM0LjE2NCIsImlzcyI6ImF1dGguYmVnZXQuY29tIiwianRpIjoiNmJlNTdjYTg0NWYzZTI5ZDIxMDFhYWNjZjlhOWE1MWUiLCJwYXJlbnRMb2dpbiI6IiIsInN1YiI6ImN1c3RvbWVyIn0.jfLHGBlrSZNWcCJlJ_ZAcApmj-MhvhxDZE2kV1PJkWPcSsjIN44UngGUg2r20uNsKW3dVV6tmito9Sn-kHtVdVB4JAJ9Xblo07FpzePuyx2l1dgDKSPTI_VeeS_kRReVcALJhEZypk8MEvb5UXltk9c8yBUlDOnN8uxO8q-s781xFOuF202P2SQAcY7oAJr2z8cekuoRzW4Oe-BvJ8HUmb_uXvvl_UKJwsnCL0D5zqAWwcfFaA68HyVjUCmyBhA8F-1uLTMqNkH1fVVEbU_0EkvLjswqcnmBvv7p_V1FI5zbUKQEg5ZytidPiR7Sq39V1V1lzrv8KvH76RCr6Md-CQ'}
2025-10-28 08:05:21,019 INFO app.providers.beget.client: Successfully authenticated with Beget API - Token: eyJhbGciOiJSUzUxMiIs...
2025-10-28 08:05:21,021 INFO app.providers.beget.client: DEBUG: Authentication successful for user colaiswv
2025-10-28 08:05:21,021 INFO app.providers.beget.client: DEBUG: Access token received: eyJhbGciOiJSUzUxMiIs...
2025-10-28 08:05:21,021 INFO app.providers.beget.client: DEBUG: Extracted user info from JWT: {'customer_id': '2442581', 'customer_login': 'colaiswv', 'environment': 'web', 'ip_address': '95.24.34.164', 'token_expires': 1761887121}
2025-10-28 08:05:21,022 INFO app.providers.sync_orchestrator.SyncOrchestrator: Performing resource sync for provider 1
2025-10-28 08:05:21,022 INFO app.providers.plugin_system.BegetProviderPlugin: Starting Beget billing-first resource sync for provider 1
2025-10-28 08:05:21,022 INFO app.providers.plugin_system.BegetProviderPlugin: Phase 1: Collecting billing data
2025-10-28 08:05:21,022 INFO app.providers.beget.client: Fetching detailed account info from: https://api.beget.com/api/user/getAccountInfo
2025-10-28 08:05:21,454 INFO app.providers.beget.client: Account info API response: {'status': 'success', 'answer': {'status': 'success', 'result': {'plan_name': 'Cloud', 'user_sites': 0, 'plan_site': 0, 'user_domains': 8, 'plan_domain': 2147483647, 'user_mysqlsize': 0, 'plan_mysql': 0, 'user_quota': 1, 'plan_quota': 0, 'user_ftp': 0, 'plan_ftp': 0, 'user_mail': 2, 'plan_mail': 0, 'user_bash': '/bin/false', 'plan_cp': 0, 'user_rate_current': 67.73, 'user_is_year_plan': '0', 'user_rate_year': 24721, 'user_rate_month': 2060, 'user_balance': 644.53, 'user_days_to_block': 10, 'server_apache_version': '2.4.63', 'server_mysql_version': '5.7.21-20-beget', 'server_nginx_version': '2.4.63', 'server_perl_version': '5.14.2', 'server_python_version': '2.7.3', 'server_php_version': '8.2.13', 'server_name': 'gagarin7.beget.com', 'server_cpu_name': '12 *  Intel(R) Xeon(R) CPU E5-2620 0 @ 2.00GHz', 'server_memory': 32003, 'server_memorycurrent': 4160, 'server_loadaverage': 7.1999998092651, 'server_uptime': 860}}}
2025-10-28 08:05:21,455 INFO app.providers.beget.client: Processed account info: {'account_id': 'colaiswv', 'account_status': 'active', 'account_type': 'Cloud', 'plan_name': 'Cloud', 'balance': 644.53, 'currency': 'RUB', 'daily_rate': 67.73, 'monthly_rate': 2060, 'yearly_rate': 24721, 'is_yearly_plan': False, 'days_to_block': 10, 'service_limits': {'domains': {'used': 8, 'limit': 2147483647}, 'sites': {'used': 0, 'limit': 0}, 'mysql': {'used': 0, 'limit': 0}, 'ftp': {'used': 0, 'limit': 0}, 'mail': {'used': 2, 'limit': 0}, 'quota': {'used': 1, 'limit': 0}}, 'server_info': {'name': 'gagarin7.beget.com', 'cpu': '12 *  Intel(R) Xeon(R) CPU E5-2620 0 @ 2.00GHz', 'memory_total_mb': 32003, 'memory_used_mb': 4160, 'load_average': 7.1999998092651, 'uptime_days': 860}, 'software_versions': {'apache': '2.4.63', 'nginx': '2.4.63', 'mysql': '5.7.21-20-beget', 'php': '8.2.13', 'python': '2.7.3', 'perl': '5.14.2'}, 'security': {'bash_access': '/bin/false', 'control_panel': False, 'api_enabled': True}, 'finops_insights': {'daily_cost': 67.73, 'monthly_cost': 2060, 'yearly_cost': 24721, 'current_balance': 644.53, 'days_until_block': 10, 'cost_per_day': 67.73}, 'raw_data': {'plan_name': 'Cloud', 'user_sites': 0, 'plan_site': 0, 'user_domains': 8, 'plan_domain': 2147483647, 'user_mysqlsize': 0, 'plan_mysql': 0, 'user_quota': 1, 'plan_quota': 0, 'user_ftp': 0, 'plan_ftp': 0, 'user_mail': 2, 'plan_mail': 0, 'user_bash': '/bin/false', 'plan_cp': 0, 'user_rate_current': 67.73, 'user_is_year_plan': '0', 'user_rate_year': 24721, 'user_rate_month': 2060, 'user_balance': 644.53, 'user_days_to_block': 10, 'server_apache_version': '2.4.63', 'server_mysql_version': '5.7.21-20-beget', 'server_nginx_version': '2.4.63', 'server_perl_version': '5.14.2', 'server_python_version': '2.7.3', 'server_php_version': '8.2.13', 'server_name': 'gagarin7.beget.com', 'server_cpu_name': '12 *  Intel(R) Xeon(R) CPU E5-2620 0 @ 2.00GHz', 'server_memory': 32003, 'server_memorycurrent': 4160, 'server_loadaverage': 7.1999998092651, 'server_uptime': 860}}
2025-10-28 08:05:21,457 INFO app.providers.plugin_system.BegetProviderPlugin: Collected account billing: 67.73 RUB/day, balance: 644.53 RUB
2025-10-28 08:05:21,457 INFO app.providers.plugin_system.BegetProviderPlugin: Phase 2: Discovering paid resources
2025-10-28 08:05:21,457 INFO app.providers.beget.client: Fetching VPS servers from new API: https://api.beget.com/v1/vps/server/list
2025-10-28 08:05:22,025 INFO app.providers.beget.client: Successfully retrieved VPS servers from new API
2025-10-28 08:05:22,028 INFO app.providers.beget.client: Fetching cloud services from: https://api.beget.com/v1/cloud
2025-10-28 08:05:22,277 INFO app.providers.beget.client: Successfully retrieved cloud services from https://api.beget.com/v1/cloud
2025-10-28 08:05:22,281 INFO app.providers.beget.client: Fetching domains from real Beget API: https://api.beget.com/api/domain/getList
2025-10-28 08:05:23,048 INFO app.providers.beget.client: API Response: {'status': 'success', 'answer': {'status': 'success', 'result': [{'id': 13314909, 'fqdn': 'neurocola.com', 'date_add': '2025-09-23 17:34:33', 'auto_renew': True, 'date_register': '2025-09-23', 'date_expire': '2026-09-23', 'can_renew': None, 'registrar': 'beget', 'registrar_status': 'delegated', 'register_order_status': 'FINISH', 'register_order_comment': None, 'renew_order_status': None, 'is_under_control': 1}, {'id': 13283697, 'fqdn': 'daposriyuston.beget.app', 'date_add': '2025-09-15 22:47:57', 'auto_renew': False, 'date_register': None, 'date_expire': None, 'can_renew': None, 'registrar': None, 'registrar_status': None, 'register_order_status': None, 'register_order_comment': '', 'renew_order_status': None, 'is_under_control': 0}, {'id': 13285381, 'fqdn': 'bemibuetique.beget.app', 'date_add': '2025-09-16 11:58:06', 'auto_renew': False, 'date_register': None, 'date_expire': None, 'can_renew': None, 'registrar': None, 'registrar_status': None, 'register_order_status': None, 'register_order_comment': '', 'renew_order_status': None, 'is_under_control': 0}, {'id': 13285384, 'fqdn': 'notosiyalier.beget.app', 'date_add': '2025-09-16 11:58:57', 'auto_renew': False, 'date_register': None, 'date_expire': None, 'can_renew': None, 'registrar': None, 'registrar_status': None, 'register_order_status': None, 'register_order_comment': '', 'renew_order_status': None, 'is_under_control': 0}, {'id': 13299032, 'fqdn': 'sobingsusoufpaf.beget.app', 'date_add': '2025-09-19 16:23:03', 'auto_renew': False, 'date_register': None, 'date_expire': None, 'can_renew': None, 'registrar': None, 'registrar_status': None, 'register_order_status': None, 'register_order_comment': '', 'renew_order_status': None, 'is_under_control': 0}, {'id': 13489068, 'fqdn': 'jufiedeycadeth.beget.app', 'date_add': '2025-10-15 08:47:03', 'auto_renew': False, 'date_register': None, 'date_expire': None, 'can_renew': None, 'registrar': None, 'registrar_status': None, 'register_order_status': None, 'register_order_comment': '', 'renew_order_status': None, 'is_under_control': 0}, {'id': 13490013, 'fqdn': 'infrazen.ru', 'date_add': '2025-10-15 12:23:09', 'auto_renew': True, 'date_register': '2025-10-15', 'date_expire': '2026-10-15', 'can_renew': None, 'registrar': 'beget', 'registrar_status': 'delegated', 'register_order_status': 'FINISH', 'register_order_comment': None, 'renew_order_status': None, 'is_under_control': 1}, {'id': 13490014, 'fqdn': 'infrazen.store', 'date_add': '2025-10-15 12:23:14', 'auto_renew': False, 'date_register': '2025-10-15', 'date_expire': '2026-10-15', 'can_renew': None, 'registrar': 'beget', 'registrar_status': 'delegated', 'register_order_status': 'FINISH', 'register_order_comment': None, 'renew_order_status': None, 'is_under_control': 1}]}}
2025-10-28 08:05:23,051 INFO app.providers.plugin_system.BegetProviderPlugin: Discovered 7 paid resources: 3 VPS, 1 cloud services, 3 domains
2025-10-28 08:05:23,051 INFO app.providers.plugin_system.BegetProviderPlugin: Phase 3: Processing and unifying resources
2025-10-28 08:05:23,052 INFO app.providers.plugin_system.BegetProviderPlugin: Collecting CPU statistics for VPS servers...
2025-10-28 08:05:23,052 INFO app.providers.beget.client: Collecting CPU statistics for VPS: InfraZen Prod (2301b82e-57a3-4d98-9663-136762a1c8ab)
2025-10-28 08:05:23,052 INFO app.providers.beget.client: Fetching CPU statistics for VPS 2301b82e-57a3-4d98-9663-136762a1c8ab with period MONTH
2025-10-28 08:05:23,199 INFO app.providers.beget.client: Successfully retrieved CPU statistics for VPS 2301b82e-57a3-4d98-9663-136762a1c8ab
2025-10-28 08:05:23,202 INFO app.providers.beget.client: Collecting CPU statistics for VPS: Objective Perrin (439418ea-1fd8-46e2-859e-a50cbc9f7420)
2025-10-28 08:05:23,203 INFO app.providers.beget.client: Fetching CPU statistics for VPS 439418ea-1fd8-46e2-859e-a50cbc9f7420 with period MONTH
2025-10-28 08:05:23,422 INFO app.providers.beget.client: Successfully retrieved CPU statistics for VPS 439418ea-1fd8-46e2-859e-a50cbc9f7420
2025-10-28 08:05:23,424 INFO app.providers.beget.client: Collecting CPU statistics for VPS: runner rus (48533ae0-b0f9-477c-9729-5a900dd3cde5)
2025-10-28 08:05:23,425 INFO app.providers.beget.client: Fetching CPU statistics for VPS 48533ae0-b0f9-477c-9729-5a900dd3cde5 with period MONTH
2025-10-28 08:05:23,752 INFO app.providers.beget.client: Successfully retrieved CPU statistics for VPS 48533ae0-b0f9-477c-9729-5a900dd3cde5
2025-10-28 08:05:23,754 INFO app.providers.plugin_system.BegetProviderPlugin: Collecting memory statistics for VPS servers...
2025-10-28 08:05:23,754 INFO app.providers.beget.client: Collecting memory statistics for VPS: InfraZen Prod (2301b82e-57a3-4d98-9663-136762a1c8ab)
2025-10-28 08:05:23,754 INFO app.providers.beget.client: Fetching memory statistics for VPS 2301b82e-57a3-4d98-9663-136762a1c8ab with period MONTH
2025-10-28 08:05:23,889 INFO app.providers.beget.client: Successfully retrieved memory statistics for VPS 2301b82e-57a3-4d98-9663-136762a1c8ab
2025-10-28 08:05:23,892 INFO app.providers.beget.client: Collecting memory statistics for VPS: Objective Perrin (439418ea-1fd8-46e2-859e-a50cbc9f7420)
2025-10-28 08:05:23,892 INFO app.providers.beget.client: Fetching memory statistics for VPS 439418ea-1fd8-46e2-859e-a50cbc9f7420 with period MONTH
2025-10-28 08:05:24,071 INFO app.providers.beget.client: Successfully retrieved memory statistics for VPS 439418ea-1fd8-46e2-859e-a50cbc9f7420
2025-10-28 08:05:24,075 INFO app.providers.beget.client: Collecting memory statistics for VPS: runner rus (48533ae0-b0f9-477c-9729-5a900dd3cde5)
2025-10-28 08:05:24,075 INFO app.providers.beget.client: Fetching memory statistics for VPS 48533ae0-b0f9-477c-9729-5a900dd3cde5 with period MONTH
2025-10-28 08:05:24,481 INFO app.providers.beget.client: Successfully retrieved memory statistics for VPS 48533ae0-b0f9-477c-9729-5a900dd3cde5
2025-10-28 08:05:24,485 INFO app.providers.plugin_system.BegetProviderPlugin: CPU statistics collected for 3 VPS servers
2025-10-28 08:05:24,485 INFO app.providers.plugin_system.BegetProviderPlugin: Memory statistics collected for 3 VPS servers
2025-10-28 08:05:24,485 INFO app.providers.plugin_system.BegetProviderPlugin: Attached performance statistics to 3 resources
2025-10-28 08:05:24,486 INFO app.providers.plugin_system.BegetProviderPlugin: Unified 7 paid resources
2025-10-28 08:05:24,486 INFO app.providers.plugin_system.BegetProviderPlugin: Phase 4: Validating costs against account billing
2025-10-28 08:05:24,486 INFO app.providers.plugin_system.BegetProviderPlugin: Cost validation passed: calculated 68.14, account 67.73, difference 0.41
2025-10-28 08:05:24,486 INFO app.providers.plugin_system.BegetProviderPlugin: Beget billing-first sync completed: 7 paid resources, 68.14 RUB/day
2025-10-28 08:05:24,489 INFO sqlalchemy.engine.Engine: UPDATE cloud_providers SET provider_metadata=%(provider_metadata)s, updated_at=%(updated_at)s WHERE cloud_providers.id = %(cloud_providers_id)s
2025-10-28 08:05:24,489 INFO sqlalchemy.engine.Engine: [generated in 0.00043s] {'provider_metadata': '{"last_connection_test": "2025-10-28T08:05:21.021828", "connection_status": "success", "account_info": {"account_id": "beget_colaiswv", "username": "colaiswv", "customer_id": "2442581", "customer_login": "colaiswv", "status": "active", "api_status": "connected"}}', 'updated_at': datetime.datetime(2025, 10, 28, 8, 5, 24, 489411), 'cloud_providers_id': 1}
2025-10-28 08:05:24,493 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.total_resources_found AS sync_snapshots_total_resources_found, sync_snapshots.resources_created AS sync_snapshots_resources_created, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:05:24,493 INFO sqlalchemy.engine.Engine: [generated in 0.00031s] {'pk_1': 8361}
2025-10-28 08:05:24,495 INFO sqlalchemy.engine.Engine: UPDATE sync_snapshots SET sync_status=%(sync_status)s, sync_completed_at=%(sync_completed_at)s, updated_at=%(updated_at)s WHERE sync_snapshots.id = %(sync_snapshots_id)s
2025-10-28 08:05:24,496 INFO sqlalchemy.engine.Engine: [generated in 0.00027s] {'sync_status': 'success', 'sync_completed_at': datetime.datetime(2025, 10, 28, 8, 5, 24, 486717), 'updated_at': datetime.datetime(2025, 10, 28, 8, 5, 24, 495887), 'sync_snapshots_id': 8361}
2025-10-28 08:05:24,497 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.total_resources_found AS sync_snapshots_total_resources_found, sync_snapshots.resources_created AS sync_snapshots_resources_created, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:05:24,497 INFO sqlalchemy.engine.Engine: [cached since 0.004136s ago] {'pk_1': 8361}
2025-10-28 08:05:24,500 INFO sqlalchemy.engine.Engine: UPDATE sync_snapshots SET sync_duration_seconds=%(sync_duration_seconds)s, sync_config=%(sync_config)s, updated_at=%(updated_at)s WHERE sync_snapshots.id = %(sync_snapshots_id)s
2025-10-28 08:05:24,500 INFO sqlalchemy.engine.Engine: [generated in 0.00033s] {'sync_duration_seconds': 3, 'sync_config': '{"sync_type": "complete_sync", "provider_type": "beget", "connection_name": "Beget- cola", "sync_timestamp": "2025-10-28T08:05:20.675824", "sync_succ ... (34873 characters truncated) ... st_phases": {"phase_1_billing_collected": true, "phase_2_paid_resources_found": 3, "phase_3_resources_unified": 7, "phase_4_costs_validated": true}}}', 'updated_at': datetime.datetime(2025, 10, 28, 8, 5, 24, 500409), 'sync_snapshots_id': 8361}
2025-10-28 08:05:24,508 INFO sqlalchemy.engine.Engine: SELECT provider_resource_types.provider_type AS provider_resource_types_provider_type, provider_resource_types.unified_type AS provider_resource_types_unified_type, provider_resource_types.display_name AS provider_resource_types_display_name, provider_resource_types.icon AS provider_resource_types_icon, provider_resource_types.enabled AS provider_resource_types_enabled, provider_resource_types.raw_aliases AS provider_resource_types_raw_aliases, provider_resource_types.id AS provider_resource_types_id, provider_resource_types.created_at AS provider_resource_types_created_at, provider_resource_types.updated_at AS provider_resource_types_updated_at 
FROM provider_resource_types 
WHERE provider_resource_types.provider_type = %(provider_type_1)s AND provider_resource_types.unified_type = %(unified_type_1)s AND provider_resource_types.enabled = true 
 LIMIT %(param_1)s
2025-10-28 08:05:24,509 INFO sqlalchemy.engine.Engine: [generated in 0.00028s] {'provider_type_1': 'beget', 'unified_type_1': 'server', 'param_1': 1}
2025-10-28 08:05:24,511 INFO app.providers.sync_orchestrator.SyncOrchestrator: Processing resource: InfraZen Prod (server) - ID: 2301b82e-57a3-4d98-9663-136762a1c8ab
2025-10-28 08:05:24,514 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.provider_id = %(provider_id_1)s AND resources.resource_id = %(resource_id_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,514 INFO sqlalchemy.engine.Engine: [generated in 0.00026s] {'provider_id_1': 1, 'resource_id_1': '2301b82e-57a3-4d98-9663-136762a1c8ab', 'param_1': 1}
2025-10-28 08:05:24,518 INFO sqlalchemy.engine.Engine: UPDATE resources SET last_sync=%(last_sync)s, provider_config=%(provider_config)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:05:24,518 INFO sqlalchemy.engine.Engine: [generated in 0.00028s] {'last_sync': datetime.datetime(2025, 10, 28, 8, 5, 24, 516782), 'provider_config': '{"id": "2301b82e-57a3-4d98-9663-136762a1c8ab", "name": "InfraZen Prod", "status": "RUNNING", "ip_address": "217.26.28.90", "hostname": "biggclakeb.lo ... (350 characters truncated) ... ": "", "admin_credentials": {}, "ssh_access_allowed": true, "manage_enabled": true, "description": "", "technical_domain": "", "software_domain": ""}', 'updated_at': datetime.datetime(2025, 10, 28, 8, 5, 24, 518260), 'resources_id': 520}
2025-10-28 08:05:24,519 INFO app.providers.sync_orchestrator.SyncOrchestrator: Successfully processed resource: InfraZen Prod
2025-10-28 08:05:24,519 INFO app.providers.sync_orchestrator.SyncOrchestrator: Successfully processed resource: InfraZen Prod
2025-10-28 08:05:24,520 INFO sqlalchemy.engine.Engine: SELECT provider_resource_types.provider_type AS provider_resource_types_provider_type, provider_resource_types.unified_type AS provider_resource_types_unified_type, provider_resource_types.display_name AS provider_resource_types_display_name, provider_resource_types.icon AS provider_resource_types_icon, provider_resource_types.enabled AS provider_resource_types_enabled, provider_resource_types.raw_aliases AS provider_resource_types_raw_aliases, provider_resource_types.id AS provider_resource_types_id, provider_resource_types.created_at AS provider_resource_types_created_at, provider_resource_types.updated_at AS provider_resource_types_updated_at 
FROM provider_resource_types 
WHERE provider_resource_types.provider_type = %(provider_type_1)s AND provider_resource_types.unified_type = %(unified_type_1)s AND provider_resource_types.enabled = true 
 LIMIT %(param_1)s
2025-10-28 08:05:24,520 INFO sqlalchemy.engine.Engine: [cached since 0.01161s ago] {'provider_type_1': 'beget', 'unified_type_1': 'server', 'param_1': 1}
2025-10-28 08:05:24,521 INFO app.providers.sync_orchestrator.SyncOrchestrator: Processing resource: Objective Perrin (server) - ID: 439418ea-1fd8-46e2-859e-a50cbc9f7420
2025-10-28 08:05:24,521 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.provider_id = %(provider_id_1)s AND resources.resource_id = %(resource_id_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,521 INFO sqlalchemy.engine.Engine: [cached since 0.00705s ago] {'provider_id_1': 1, 'resource_id_1': '439418ea-1fd8-46e2-859e-a50cbc9f7420', 'param_1': 1}
2025-10-28 08:05:24,523 INFO sqlalchemy.engine.Engine: UPDATE resources SET last_sync=%(last_sync)s, provider_config=%(provider_config)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:05:24,523 INFO sqlalchemy.engine.Engine: [cached since 0.005122s ago] {'last_sync': datetime.datetime(2025, 10, 28, 8, 5, 24, 522808), 'provider_config': '{"id": "439418ea-1fd8-46e2-859e-a50cbc9f7420", "name": "Objective Perrin", "status": "RUNNING", "ip_address": "45.145.168.14", "hostname": "qnbgwqqzf ... (495 characters truncated) ... allowed": true, "manage_enabled": true, "description": "", "technical_domain": "notosiyalier.beget.app", "software_domain": "notosiyalier.beget.app"}', 'updated_at': datetime.datetime(2025, 10, 28, 8, 5, 24, 523181), 'resources_id': 1}
2025-10-28 08:05:24,524 INFO app.providers.sync_orchestrator.SyncOrchestrator: Successfully processed resource: Objective Perrin
2025-10-28 08:05:24,524 INFO app.providers.sync_orchestrator.SyncOrchestrator: Successfully processed resource: Objective Perrin
2025-10-28 08:05:24,524 INFO sqlalchemy.engine.Engine: SELECT provider_resource_types.provider_type AS provider_resource_types_provider_type, provider_resource_types.unified_type AS provider_resource_types_unified_type, provider_resource_types.display_name AS provider_resource_types_display_name, provider_resource_types.icon AS provider_resource_types_icon, provider_resource_types.enabled AS provider_resource_types_enabled, provider_resource_types.raw_aliases AS provider_resource_types_raw_aliases, provider_resource_types.id AS provider_resource_types_id, provider_resource_types.created_at AS provider_resource_types_created_at, provider_resource_types.updated_at AS provider_resource_types_updated_at 
FROM provider_resource_types 
WHERE provider_resource_types.provider_type = %(provider_type_1)s AND provider_resource_types.unified_type = %(unified_type_1)s AND provider_resource_types.enabled = true 
 LIMIT %(param_1)s
2025-10-28 08:05:24,524 INFO sqlalchemy.engine.Engine: [cached since 0.01588s ago] {'provider_type_1': 'beget', 'unified_type_1': 'server', 'param_1': 1}
2025-10-28 08:05:24,525 INFO app.providers.sync_orchestrator.SyncOrchestrator: Processing resource: runner rus (server) - ID: 48533ae0-b0f9-477c-9729-5a900dd3cde5
2025-10-28 08:05:24,525 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.provider_id = %(provider_id_1)s AND resources.resource_id = %(resource_id_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,526 INFO sqlalchemy.engine.Engine: [cached since 0.0114s ago] {'provider_id_1': 1, 'resource_id_1': '48533ae0-b0f9-477c-9729-5a900dd3cde5', 'param_1': 1}
2025-10-28 08:05:24,527 INFO sqlalchemy.engine.Engine: UPDATE resources SET last_sync=%(last_sync)s, provider_config=%(provider_config)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:05:24,528 INFO sqlalchemy.engine.Engine: [cached since 0.009826s ago] {'last_sync': datetime.datetime(2025, 10, 28, 8, 5, 24, 527401), 'provider_config': '{"id": "48533ae0-b0f9-477c-9729-5a900dd3cde5", "name": "runner rus", "status": "RUNNING", "ip_address": "85.117.234.65", "hostname": "poqttoljnv.loca ... (499 characters truncated) ... d": true, "manage_enabled": true, "description": "", "technical_domain": "sobingsusoufpaf.beget.app", "software_domain": "sobingsusoufpaf.beget.app"}', 'updated_at': datetime.datetime(2025, 10, 28, 8, 5, 24, 527856), 'resources_id': 2}
2025-10-28 08:05:24,528 INFO app.providers.sync_orchestrator.SyncOrchestrator: Successfully processed resource: runner rus
2025-10-28 08:05:24,529 INFO app.providers.sync_orchestrator.SyncOrchestrator: Successfully processed resource: runner rus
2025-10-28 08:05:24,529 INFO sqlalchemy.engine.Engine: SELECT provider_resource_types.provider_type AS provider_resource_types_provider_type, provider_resource_types.unified_type AS provider_resource_types_unified_type, provider_resource_types.display_name AS provider_resource_types_display_name, provider_resource_types.icon AS provider_resource_types_icon, provider_resource_types.enabled AS provider_resource_types_enabled, provider_resource_types.raw_aliases AS provider_resource_types_raw_aliases, provider_resource_types.id AS provider_resource_types_id, provider_resource_types.created_at AS provider_resource_types_created_at, provider_resource_types.updated_at AS provider_resource_types_updated_at 
FROM provider_resource_types 
WHERE provider_resource_types.provider_type = %(provider_type_1)s AND provider_resource_types.unified_type = %(unified_type_1)s AND provider_resource_types.enabled = true 
 LIMIT %(param_1)s
2025-10-28 08:05:24,529 INFO sqlalchemy.engine.Engine: [cached since 0.02078s ago] {'provider_type_1': 'beget', 'unified_type_1': 'database', 'param_1': 1}
2025-10-28 08:05:24,531 INFO sqlalchemy.engine.Engine: SELECT provider_resource_types.provider_type AS provider_resource_types_provider_type, provider_resource_types.unified_type AS provider_resource_types_unified_type, provider_resource_types.display_name AS provider_resource_types_display_name, provider_resource_types.icon AS provider_resource_types_icon, provider_resource_types.enabled AS provider_resource_types_enabled, provider_resource_types.raw_aliases AS provider_resource_types_raw_aliases, provider_resource_types.id AS provider_resource_types_id, provider_resource_types.created_at AS provider_resource_types_created_at, provider_resource_types.updated_at AS provider_resource_types_updated_at 
FROM provider_resource_types 
WHERE provider_resource_types.provider_type = %(provider_type_1)s AND provider_resource_types.enabled = true
2025-10-28 08:05:24,531 INFO sqlalchemy.engine.Engine: [generated in 0.00015s] {'provider_type_1': 'beget'}
2025-10-28 08:05:24,532 INFO app.providers.sync_orchestrator.SyncOrchestrator: Processing resource: InfraZen DB (database-bg) - ID: 19475bc3-0a35-41f7-b568-5a3711e21778
2025-10-28 08:05:24,532 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.provider_id = %(provider_id_1)s AND resources.resource_id = %(resource_id_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,533 INFO sqlalchemy.engine.Engine: [cached since 0.01831s ago] {'provider_id_1': 1, 'resource_id_1': '19475bc3-0a35-41f7-b568-5a3711e21778', 'param_1': 1}
2025-10-28 08:05:24,534 INFO sqlalchemy.engine.Engine: UPDATE resources SET last_sync=%(last_sync)s, provider_config=%(provider_config)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:05:24,534 INFO sqlalchemy.engine.Engine: [cached since 0.01659s ago] {'last_sync': datetime.datetime(2025, 10, 28, 8, 5, 24, 534335), 'provider_config': '{"id": "19475bc3-0a35-41f7-b568-5a3711e21778", "name": "InfraZen DB", "type": "MySQL Database", "service_type": "Database", "status": "RUNNING", "reg ... (3232 characters truncated) ... esources": ["26771b2a-6325-419f-a868-5a057db0cc81"], "unblocking": false, "migrating": false, "region": "ru2", "type": "MYSQL5", "restoring": false}}', 'updated_at': datetime.datetime(2025, 10, 28, 8, 5, 24, 534690), 'resources_id': 352}
2025-10-28 08:05:24,535 INFO app.providers.sync_orchestrator.SyncOrchestrator: Successfully processed resource: InfraZen DB
2025-10-28 08:05:24,536 INFO app.providers.sync_orchestrator.SyncOrchestrator: Successfully processed resource: InfraZen DB
2025-10-28 08:05:24,536 INFO sqlalchemy.engine.Engine: SELECT provider_resource_types.provider_type AS provider_resource_types_provider_type, provider_resource_types.unified_type AS provider_resource_types_unified_type, provider_resource_types.display_name AS provider_resource_types_display_name, provider_resource_types.icon AS provider_resource_types_icon, provider_resource_types.enabled AS provider_resource_types_enabled, provider_resource_types.raw_aliases AS provider_resource_types_raw_aliases, provider_resource_types.id AS provider_resource_types_id, provider_resource_types.created_at AS provider_resource_types_created_at, provider_resource_types.updated_at AS provider_resource_types_updated_at 
FROM provider_resource_types 
WHERE provider_resource_types.provider_type = %(provider_type_1)s AND provider_resource_types.unified_type = %(unified_type_1)s AND provider_resource_types.enabled = true 
 LIMIT %(param_1)s
2025-10-28 08:05:24,536 INFO sqlalchemy.engine.Engine: [cached since 0.02763s ago] {'provider_type_1': 'beget', 'unified_type_1': 'domain', 'param_1': 1}
2025-10-28 08:05:24,537 INFO app.providers.sync_orchestrator.SyncOrchestrator: Processing resource: neurocola.com (domain) - ID: 13314909
2025-10-28 08:05:24,537 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.provider_id = %(provider_id_1)s AND resources.resource_id = %(resource_id_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,537 INFO sqlalchemy.engine.Engine: [cached since 0.02293s ago] {'provider_id_1': 1, 'resource_id_1': '13314909', 'param_1': 1}
2025-10-28 08:05:24,539 INFO sqlalchemy.engine.Engine: UPDATE resources SET effective_cost=%(effective_cost)s, last_sync=%(last_sync)s, provider_config=%(provider_config)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:05:24,539 INFO sqlalchemy.engine.Engine: [generated in 0.00015s] {'effective_cost': 0.136986301369863, 'last_sync': datetime.datetime(2025, 10, 28, 8, 5, 24, 538654), 'provider_config': '{"id": 13314909, "name": "neurocola.com", "status": "active", "registrar": "beget", "registration_date": "2025-09-23", "expiration_date": "2026-09-23 ... (390 characters truncated) ... 7:34:33", "domain_age_days": 35, "days_until_expiry": 329, "is_under_control": 1, "registrar_status": "delegated", "register_order_status": "FINISH"}', 'updated_at': datetime.datetime(2025, 10, 28, 8, 5, 24, 539277), 'resources_id': 3}
2025-10-28 08:05:24,540 INFO app.providers.sync_orchestrator.SyncOrchestrator: Successfully processed resource: neurocola.com
2025-10-28 08:05:24,540 INFO app.providers.sync_orchestrator.SyncOrchestrator: Successfully processed resource: neurocola.com
2025-10-28 08:05:24,540 INFO sqlalchemy.engine.Engine: SELECT provider_resource_types.provider_type AS provider_resource_types_provider_type, provider_resource_types.unified_type AS provider_resource_types_unified_type, provider_resource_types.display_name AS provider_resource_types_display_name, provider_resource_types.icon AS provider_resource_types_icon, provider_resource_types.enabled AS provider_resource_types_enabled, provider_resource_types.raw_aliases AS provider_resource_types_raw_aliases, provider_resource_types.id AS provider_resource_types_id, provider_resource_types.created_at AS provider_resource_types_created_at, provider_resource_types.updated_at AS provider_resource_types_updated_at 
FROM provider_resource_types 
WHERE provider_resource_types.provider_type = %(provider_type_1)s AND provider_resource_types.unified_type = %(unified_type_1)s AND provider_resource_types.enabled = true 
 LIMIT %(param_1)s
2025-10-28 08:05:24,540 INFO sqlalchemy.engine.Engine: [cached since 0.03178s ago] {'provider_type_1': 'beget', 'unified_type_1': 'domain', 'param_1': 1}
2025-10-28 08:05:24,541 INFO app.providers.sync_orchestrator.SyncOrchestrator: Processing resource: infrazen.ru (domain) - ID: 13490013
2025-10-28 08:05:24,541 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.provider_id = %(provider_id_1)s AND resources.resource_id = %(resource_id_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,541 INFO sqlalchemy.engine.Engine: [cached since 0.02701s ago] {'provider_id_1': 1, 'resource_id_1': '13490013', 'param_1': 1}
2025-10-28 08:05:24,543 INFO sqlalchemy.engine.Engine: UPDATE resources SET effective_cost=%(effective_cost)s, last_sync=%(last_sync)s, provider_config=%(provider_config)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:05:24,543 INFO sqlalchemy.engine.Engine: [cached since 0.004006s ago] {'effective_cost': 0.136986301369863, 'last_sync': datetime.datetime(2025, 10, 28, 8, 5, 24, 542814), 'provider_config': '{"id": 13490013, "name": "infrazen.ru", "status": "active", "registrar": "beget", "registration_date": "2025-10-15", "expiration_date": "2026-10-15", ... (388 characters truncated) ... 2:23:09", "domain_age_days": 13, "days_until_expiry": 351, "is_under_control": 1, "registrar_status": "delegated", "register_order_status": "FINISH"}', 'updated_at': datetime.datetime(2025, 10, 28, 8, 5, 24, 543143), 'resources_id': 353}
2025-10-28 08:05:24,543 INFO app.providers.sync_orchestrator.SyncOrchestrator: Successfully processed resource: infrazen.ru
2025-10-28 08:05:24,543 INFO app.providers.sync_orchestrator.SyncOrchestrator: Successfully processed resource: infrazen.ru
2025-10-28 08:05:24,544 INFO sqlalchemy.engine.Engine: SELECT provider_resource_types.provider_type AS provider_resource_types_provider_type, provider_resource_types.unified_type AS provider_resource_types_unified_type, provider_resource_types.display_name AS provider_resource_types_display_name, provider_resource_types.icon AS provider_resource_types_icon, provider_resource_types.enabled AS provider_resource_types_enabled, provider_resource_types.raw_aliases AS provider_resource_types_raw_aliases, provider_resource_types.id AS provider_resource_types_id, provider_resource_types.created_at AS provider_resource_types_created_at, provider_resource_types.updated_at AS provider_resource_types_updated_at 
FROM provider_resource_types 
WHERE provider_resource_types.provider_type = %(provider_type_1)s AND provider_resource_types.unified_type = %(unified_type_1)s AND provider_resource_types.enabled = true 
 LIMIT %(param_1)s
2025-10-28 08:05:24,544 INFO sqlalchemy.engine.Engine: [cached since 0.03541s ago] {'provider_type_1': 'beget', 'unified_type_1': 'domain', 'param_1': 1}
2025-10-28 08:05:24,544 INFO app.providers.sync_orchestrator.SyncOrchestrator: Processing resource: infrazen.store (domain) - ID: 13490014
2025-10-28 08:05:24,545 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.provider_id = %(provider_id_1)s AND resources.resource_id = %(resource_id_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,545 INFO sqlalchemy.engine.Engine: [cached since 0.03062s ago] {'provider_id_1': 1, 'resource_id_1': '13490014', 'param_1': 1}
2025-10-28 08:05:24,546 INFO sqlalchemy.engine.Engine: UPDATE resources SET effective_cost=%(effective_cost)s, last_sync=%(last_sync)s, provider_config=%(provider_config)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:05:24,546 INFO sqlalchemy.engine.Engine: [cached since 0.00745s ago] {'effective_cost': 0.136986301369863, 'last_sync': datetime.datetime(2025, 10, 28, 8, 5, 24, 546298), 'provider_config': '{"id": 13490014, "name": "infrazen.store", "status": "active", "registrar": "beget", "registration_date": "2025-10-15", "expiration_date": "2026-10-1 ... (392 characters truncated) ... 2:23:14", "domain_age_days": 13, "days_until_expiry": 351, "is_under_control": 1, "registrar_status": "delegated", "register_order_status": "FINISH"}', 'updated_at': datetime.datetime(2025, 10, 28, 8, 5, 24, 546596), 'resources_id': 354}
2025-10-28 08:05:24,547 INFO app.providers.sync_orchestrator.SyncOrchestrator: Successfully processed resource: infrazen.store
2025-10-28 08:05:24,547 INFO app.providers.sync_orchestrator.SyncOrchestrator: Successfully processed resource: infrazen.store
2025-10-28 08:05:24,548 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,548 INFO sqlalchemy.engine.Engine: [generated in 0.00015s] {'resource_id_1': 520, 'tag_key_1': 'vps_id', 'param_1': 1}
2025-10-28 08:05:24,549 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,550 INFO sqlalchemy.engine.Engine: [cached since 0.001335s ago] {'resource_id_1': 520, 'tag_key_1': 'ip_address', 'param_1': 1}
2025-10-28 08:05:24,551 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,551 INFO sqlalchemy.engine.Engine: [cached since 0.002656s ago] {'resource_id_1': 520, 'tag_key_1': 'hostname', 'param_1': 1}
2025-10-28 08:05:24,552 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,552 INFO sqlalchemy.engine.Engine: [cached since 0.003717s ago] {'resource_id_1': 520, 'tag_key_1': 'cpu_cores', 'param_1': 1}
2025-10-28 08:05:24,553 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,553 INFO sqlalchemy.engine.Engine: [cached since 0.004461s ago] {'resource_id_1': 520, 'tag_key_1': 'ram_mb', 'param_1': 1}
2025-10-28 08:05:24,553 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,553 INFO sqlalchemy.engine.Engine: [cached since 0.005181s ago] {'resource_id_1': 520, 'tag_key_1': 'disk_gb', 'param_1': 1}
2025-10-28 08:05:24,554 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,554 INFO sqlalchemy.engine.Engine: [cached since 0.005898s ago] {'resource_id_1': 520, 'tag_key_1': 'total_storage_gb', 'param_1': 1}
2025-10-28 08:05:24,555 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,555 INFO sqlalchemy.engine.Engine: [cached since 0.006619s ago] {'resource_id_1': 520, 'tag_key_1': 'software', 'param_1': 1}
2025-10-28 08:05:24,556 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,556 INFO sqlalchemy.engine.Engine: [cached since 0.007354s ago] {'resource_id_1': 520, 'tag_key_1': 'software_version', 'param_1': 1}
2025-10-28 08:05:24,556 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,556 INFO sqlalchemy.engine.Engine: [cached since 0.008061s ago] {'resource_id_1': 520, 'tag_key_1': 'bandwidth_gb', 'param_1': 1}
2025-10-28 08:05:24,557 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,557 INFO sqlalchemy.engine.Engine: [cached since 0.008756s ago] {'resource_id_1': 520, 'tag_key_1': 'monthly_cost', 'param_1': 1}
2025-10-28 08:05:24,558 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,558 INFO sqlalchemy.engine.Engine: [cached since 0.009433s ago] {'resource_id_1': 520, 'tag_key_1': 'daily_cost', 'param_1': 1}
2025-10-28 08:05:24,558 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,558 INFO sqlalchemy.engine.Engine: [cached since 0.01008s ago] {'resource_id_1': 520, 'tag_key_1': 'cpu_avg_usage', 'param_1': 1}
2025-10-28 08:05:24,559 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,559 INFO sqlalchemy.engine.Engine: [cached since 0.01089s ago] {'resource_id_1': 520, 'tag_key_1': 'cpu_max_usage', 'param_1': 1}
2025-10-28 08:05:24,560 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,560 INFO sqlalchemy.engine.Engine: [cached since 0.01159s ago] {'resource_id_1': 520, 'tag_key_1': 'cpu_min_usage', 'param_1': 1}
2025-10-28 08:05:24,560 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,561 INFO sqlalchemy.engine.Engine: [cached since 0.0123s ago] {'resource_id_1': 520, 'tag_key_1': 'cpu_trend', 'param_1': 1}
2025-10-28 08:05:24,561 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,561 INFO sqlalchemy.engine.Engine: [cached since 0.01301s ago] {'resource_id_1': 520, 'tag_key_1': 'cpu_performance_tier', 'param_1': 1}
2025-10-28 08:05:24,562 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,562 INFO sqlalchemy.engine.Engine: [cached since 0.01369s ago] {'resource_id_1': 520, 'tag_key_1': 'cpu_data_points', 'param_1': 1}
2025-10-28 08:05:24,563 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,563 INFO sqlalchemy.engine.Engine: [cached since 0.01436s ago] {'resource_id_1': 520, 'tag_key_1': 'cpu_timestamp', 'param_1': 1}
2025-10-28 08:05:24,563 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,563 INFO sqlalchemy.engine.Engine: [cached since 0.01498s ago] {'resource_id_1': 520, 'tag_key_1': 'cpu_raw_data', 'param_1': 1}
2025-10-28 08:05:24,564 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,564 INFO sqlalchemy.engine.Engine: [cached since 0.0156s ago] {'resource_id_1': 520, 'tag_key_1': 'memory_avg_usage_mb', 'param_1': 1}
2025-10-28 08:05:24,564 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,564 INFO sqlalchemy.engine.Engine: [cached since 0.01621s ago] {'resource_id_1': 520, 'tag_key_1': 'memory_max_usage_mb', 'param_1': 1}
2025-10-28 08:05:24,565 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,565 INFO sqlalchemy.engine.Engine: [cached since 0.01683s ago] {'resource_id_1': 520, 'tag_key_1': 'memory_min_usage_mb', 'param_1': 1}
2025-10-28 08:05:24,566 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,566 INFO sqlalchemy.engine.Engine: [cached since 0.01747s ago] {'resource_id_1': 520, 'tag_key_1': 'memory_usage_percent', 'param_1': 1}
2025-10-28 08:05:24,566 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,566 INFO sqlalchemy.engine.Engine: [cached since 0.01808s ago] {'resource_id_1': 520, 'tag_key_1': 'memory_trend', 'param_1': 1}
2025-10-28 08:05:24,567 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,567 INFO sqlalchemy.engine.Engine: [cached since 0.01878s ago] {'resource_id_1': 520, 'tag_key_1': 'memory_tier', 'param_1': 1}
2025-10-28 08:05:24,568 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,568 INFO sqlalchemy.engine.Engine: [cached since 0.01949s ago] {'resource_id_1': 520, 'tag_key_1': 'memory_data_points', 'param_1': 1}
2025-10-28 08:05:24,568 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,568 INFO sqlalchemy.engine.Engine: [cached since 0.02014s ago] {'resource_id_1': 520, 'tag_key_1': 'memory_timestamp', 'param_1': 1}
2025-10-28 08:05:24,569 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,569 INFO sqlalchemy.engine.Engine: [cached since 0.02075s ago] {'resource_id_1': 520, 'tag_key_1': 'memory_raw_data', 'param_1': 1}
2025-10-28 08:05:24,569 INFO app.providers.sync_orchestrator.SyncOrchestrator: Successfully created ResourceState for InfraZen Prod
2025-10-28 08:05:24,570 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,570 INFO sqlalchemy.engine.Engine: [cached since 0.02155s ago] {'resource_id_1': 1, 'tag_key_1': 'vps_id', 'param_1': 1}
2025-10-28 08:05:24,570 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,570 INFO sqlalchemy.engine.Engine: [cached since 0.02223s ago] {'resource_id_1': 1, 'tag_key_1': 'ip_address', 'param_1': 1}
2025-10-28 08:05:24,571 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,571 INFO sqlalchemy.engine.Engine: [cached since 0.02288s ago] {'resource_id_1': 1, 'tag_key_1': 'hostname', 'param_1': 1}
2025-10-28 08:05:24,572 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,572 INFO sqlalchemy.engine.Engine: [cached since 0.0235s ago] {'resource_id_1': 1, 'tag_key_1': 'cpu_cores', 'param_1': 1}
2025-10-28 08:05:24,572 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,572 INFO sqlalchemy.engine.Engine: [cached since 0.02412s ago] {'resource_id_1': 1, 'tag_key_1': 'ram_mb', 'param_1': 1}
2025-10-28 08:05:24,573 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,573 INFO sqlalchemy.engine.Engine: [cached since 0.02474s ago] {'resource_id_1': 1, 'tag_key_1': 'disk_gb', 'param_1': 1}
2025-10-28 08:05:24,574 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,574 INFO sqlalchemy.engine.Engine: [cached since 0.02534s ago] {'resource_id_1': 1, 'tag_key_1': 'total_storage_gb', 'param_1': 1}
2025-10-28 08:05:24,574 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,574 INFO sqlalchemy.engine.Engine: [cached since 0.02595s ago] {'resource_id_1': 1, 'tag_key_1': 'software', 'param_1': 1}
2025-10-28 08:05:24,575 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,575 INFO sqlalchemy.engine.Engine: [cached since 0.02654s ago] {'resource_id_1': 1, 'tag_key_1': 'software_version', 'param_1': 1}
2025-10-28 08:05:24,575 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,575 INFO sqlalchemy.engine.Engine: [cached since 0.02715s ago] {'resource_id_1': 1, 'tag_key_1': 'bandwidth_gb', 'param_1': 1}
2025-10-28 08:05:24,576 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,576 INFO sqlalchemy.engine.Engine: [cached since 0.02769s ago] {'resource_id_1': 1, 'tag_key_1': 'monthly_cost', 'param_1': 1}
2025-10-28 08:05:24,576 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,576 INFO sqlalchemy.engine.Engine: [cached since 0.02813s ago] {'resource_id_1': 1, 'tag_key_1': 'daily_cost', 'param_1': 1}
2025-10-28 08:05:24,577 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,577 INFO sqlalchemy.engine.Engine: [cached since 0.02866s ago] {'resource_id_1': 1, 'tag_key_1': 'cpu_avg_usage', 'param_1': 1}
2025-10-28 08:05:24,577 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,577 INFO sqlalchemy.engine.Engine: [cached since 0.02918s ago] {'resource_id_1': 1, 'tag_key_1': 'cpu_max_usage', 'param_1': 1}
2025-10-28 08:05:24,578 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,578 INFO sqlalchemy.engine.Engine: [cached since 0.0297s ago] {'resource_id_1': 1, 'tag_key_1': 'cpu_min_usage', 'param_1': 1}
2025-10-28 08:05:24,578 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,578 INFO sqlalchemy.engine.Engine: [cached since 0.03021s ago] {'resource_id_1': 1, 'tag_key_1': 'cpu_trend', 'param_1': 1}
2025-10-28 08:05:24,579 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,579 INFO sqlalchemy.engine.Engine: [cached since 0.03074s ago] {'resource_id_1': 1, 'tag_key_1': 'cpu_performance_tier', 'param_1': 1}
2025-10-28 08:05:24,579 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,579 INFO sqlalchemy.engine.Engine: [cached since 0.03126s ago] {'resource_id_1': 1, 'tag_key_1': 'cpu_data_points', 'param_1': 1}
2025-10-28 08:05:24,580 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,580 INFO sqlalchemy.engine.Engine: [cached since 0.03179s ago] {'resource_id_1': 1, 'tag_key_1': 'cpu_timestamp', 'param_1': 1}
2025-10-28 08:05:24,581 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,581 INFO sqlalchemy.engine.Engine: [cached since 0.03234s ago] {'resource_id_1': 1, 'tag_key_1': 'cpu_raw_data', 'param_1': 1}
2025-10-28 08:05:24,581 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,581 INFO sqlalchemy.engine.Engine: [cached since 0.0329s ago] {'resource_id_1': 1, 'tag_key_1': 'memory_avg_usage_mb', 'param_1': 1}
2025-10-28 08:05:24,582 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,582 INFO sqlalchemy.engine.Engine: [cached since 0.03345s ago] {'resource_id_1': 1, 'tag_key_1': 'memory_max_usage_mb', 'param_1': 1}
2025-10-28 08:05:24,582 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,582 INFO sqlalchemy.engine.Engine: [cached since 0.03398s ago] {'resource_id_1': 1, 'tag_key_1': 'memory_min_usage_mb', 'param_1': 1}
2025-10-28 08:05:24,583 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,583 INFO sqlalchemy.engine.Engine: [cached since 0.0345s ago] {'resource_id_1': 1, 'tag_key_1': 'memory_usage_percent', 'param_1': 1}
2025-10-28 08:05:24,583 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,583 INFO sqlalchemy.engine.Engine: [cached since 0.03508s ago] {'resource_id_1': 1, 'tag_key_1': 'memory_trend', 'param_1': 1}
2025-10-28 08:05:24,584 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,584 INFO sqlalchemy.engine.Engine: [cached since 0.03572s ago] {'resource_id_1': 1, 'tag_key_1': 'memory_tier', 'param_1': 1}
2025-10-28 08:05:24,584 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,585 INFO sqlalchemy.engine.Engine: [cached since 0.03628s ago] {'resource_id_1': 1, 'tag_key_1': 'memory_data_points', 'param_1': 1}
2025-10-28 08:05:24,585 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,585 INFO sqlalchemy.engine.Engine: [cached since 0.03682s ago] {'resource_id_1': 1, 'tag_key_1': 'memory_timestamp', 'param_1': 1}
2025-10-28 08:05:24,586 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,586 INFO sqlalchemy.engine.Engine: [cached since 0.03736s ago] {'resource_id_1': 1, 'tag_key_1': 'memory_raw_data', 'param_1': 1}
2025-10-28 08:05:24,586 INFO app.providers.sync_orchestrator.SyncOrchestrator: Successfully created ResourceState for Objective Perrin
2025-10-28 08:05:24,586 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,586 INFO sqlalchemy.engine.Engine: [cached since 0.03798s ago] {'resource_id_1': 2, 'tag_key_1': 'vps_id', 'param_1': 1}
2025-10-28 08:05:24,587 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,587 INFO sqlalchemy.engine.Engine: [cached since 0.0385s ago] {'resource_id_1': 2, 'tag_key_1': 'ip_address', 'param_1': 1}
2025-10-28 08:05:24,587 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,587 INFO sqlalchemy.engine.Engine: [cached since 0.03901s ago] {'resource_id_1': 2, 'tag_key_1': 'hostname', 'param_1': 1}
2025-10-28 08:05:24,588 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,588 INFO sqlalchemy.engine.Engine: [cached since 0.03953s ago] {'resource_id_1': 2, 'tag_key_1': 'cpu_cores', 'param_1': 1}
2025-10-28 08:05:24,588 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,588 INFO sqlalchemy.engine.Engine: [cached since 0.04003s ago] {'resource_id_1': 2, 'tag_key_1': 'ram_mb', 'param_1': 1}
2025-10-28 08:05:24,589 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,589 INFO sqlalchemy.engine.Engine: [cached since 0.04055s ago] {'resource_id_1': 2, 'tag_key_1': 'disk_gb', 'param_1': 1}
2025-10-28 08:05:24,589 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,589 INFO sqlalchemy.engine.Engine: [cached since 0.04106s ago] {'resource_id_1': 2, 'tag_key_1': 'total_storage_gb', 'param_1': 1}
2025-10-28 08:05:24,590 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,590 INFO sqlalchemy.engine.Engine: [cached since 0.04159s ago] {'resource_id_1': 2, 'tag_key_1': 'software', 'param_1': 1}
2025-10-28 08:05:24,590 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,590 INFO sqlalchemy.engine.Engine: [cached since 0.04212s ago] {'resource_id_1': 2, 'tag_key_1': 'software_version', 'param_1': 1}
2025-10-28 08:05:24,591 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,591 INFO sqlalchemy.engine.Engine: [cached since 0.04262s ago] {'resource_id_1': 2, 'tag_key_1': 'bandwidth_gb', 'param_1': 1}
2025-10-28 08:05:24,591 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,591 INFO sqlalchemy.engine.Engine: [cached since 0.04311s ago] {'resource_id_1': 2, 'tag_key_1': 'monthly_cost', 'param_1': 1}
2025-10-28 08:05:24,592 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,592 INFO sqlalchemy.engine.Engine: [cached since 0.04359s ago] {'resource_id_1': 2, 'tag_key_1': 'daily_cost', 'param_1': 1}
2025-10-28 08:05:24,592 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,592 INFO sqlalchemy.engine.Engine: [cached since 0.04408s ago] {'resource_id_1': 2, 'tag_key_1': 'cpu_avg_usage', 'param_1': 1}
2025-10-28 08:05:24,593 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,593 INFO sqlalchemy.engine.Engine: [cached since 0.0445s ago] {'resource_id_1': 2, 'tag_key_1': 'cpu_max_usage', 'param_1': 1}
2025-10-28 08:05:24,593 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,593 INFO sqlalchemy.engine.Engine: [cached since 0.04491s ago] {'resource_id_1': 2, 'tag_key_1': 'cpu_min_usage', 'param_1': 1}
2025-10-28 08:05:24,594 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,594 INFO sqlalchemy.engine.Engine: [cached since 0.04541s ago] {'resource_id_1': 2, 'tag_key_1': 'cpu_trend', 'param_1': 1}
2025-10-28 08:05:24,594 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,594 INFO sqlalchemy.engine.Engine: [cached since 0.0459s ago] {'resource_id_1': 2, 'tag_key_1': 'cpu_performance_tier', 'param_1': 1}
2025-10-28 08:05:24,595 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,595 INFO sqlalchemy.engine.Engine: [cached since 0.0464s ago] {'resource_id_1': 2, 'tag_key_1': 'cpu_data_points', 'param_1': 1}
2025-10-28 08:05:24,595 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,595 INFO sqlalchemy.engine.Engine: [cached since 0.04688s ago] {'resource_id_1': 2, 'tag_key_1': 'cpu_timestamp', 'param_1': 1}
2025-10-28 08:05:24,596 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,596 INFO sqlalchemy.engine.Engine: [cached since 0.04738s ago] {'resource_id_1': 2, 'tag_key_1': 'cpu_raw_data', 'param_1': 1}
2025-10-28 08:05:24,596 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,596 INFO sqlalchemy.engine.Engine: [cached since 0.04788s ago] {'resource_id_1': 2, 'tag_key_1': 'memory_avg_usage_mb', 'param_1': 1}
2025-10-28 08:05:24,597 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,597 INFO sqlalchemy.engine.Engine: [cached since 0.04838s ago] {'resource_id_1': 2, 'tag_key_1': 'memory_max_usage_mb', 'param_1': 1}
2025-10-28 08:05:24,597 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,597 INFO sqlalchemy.engine.Engine: [cached since 0.04887s ago] {'resource_id_1': 2, 'tag_key_1': 'memory_min_usage_mb', 'param_1': 1}
2025-10-28 08:05:24,598 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,598 INFO sqlalchemy.engine.Engine: [cached since 0.04935s ago] {'resource_id_1': 2, 'tag_key_1': 'memory_usage_percent', 'param_1': 1}
2025-10-28 08:05:24,598 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,598 INFO sqlalchemy.engine.Engine: [cached since 0.04982s ago] {'resource_id_1': 2, 'tag_key_1': 'memory_trend', 'param_1': 1}
2025-10-28 08:05:24,599 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,599 INFO sqlalchemy.engine.Engine: [cached since 0.05031s ago] {'resource_id_1': 2, 'tag_key_1': 'memory_tier', 'param_1': 1}
2025-10-28 08:05:24,599 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,599 INFO sqlalchemy.engine.Engine: [cached since 0.05078s ago] {'resource_id_1': 2, 'tag_key_1': 'memory_data_points', 'param_1': 1}
2025-10-28 08:05:24,600 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,600 INFO sqlalchemy.engine.Engine: [cached since 0.05139s ago] {'resource_id_1': 2, 'tag_key_1': 'memory_timestamp', 'param_1': 1}
2025-10-28 08:05:24,600 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,600 INFO sqlalchemy.engine.Engine: [cached since 0.05196s ago] {'resource_id_1': 2, 'tag_key_1': 'memory_raw_data', 'param_1': 1}
2025-10-28 08:05:24,601 INFO app.providers.sync_orchestrator.SyncOrchestrator: Successfully created ResourceState for runner rus
2025-10-28 08:05:24,601 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,601 INFO sqlalchemy.engine.Engine: [cached since 0.05262s ago] {'resource_id_1': 352, 'tag_key_1': 'service_type', 'param_1': 1}
2025-10-28 08:05:24,601 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,601 INFO sqlalchemy.engine.Engine: [cached since 0.0531s ago] {'resource_id_1': 352, 'tag_key_1': 'cloud_service_id', 'param_1': 1}
2025-10-28 08:05:24,602 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,602 INFO sqlalchemy.engine.Engine: [cached since 0.05358s ago] {'resource_id_1': 352, 'tag_key_1': 'region', 'param_1': 1}
2025-10-28 08:05:24,602 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,602 INFO sqlalchemy.engine.Engine: [cached since 0.05409s ago] {'resource_id_1': 352, 'tag_key_1': 'manage_enabled', 'param_1': 1}
2025-10-28 08:05:24,603 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,603 INFO sqlalchemy.engine.Engine: [cached since 0.05459s ago] {'resource_id_1': 352, 'tag_key_1': 'daily_cost', 'param_1': 1}
2025-10-28 08:05:24,603 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,603 INFO sqlalchemy.engine.Engine: [cached since 0.05506s ago] {'resource_id_1': 352, 'tag_key_1': 'monthly_cost', 'param_1': 1}
2025-10-28 08:05:24,604 INFO app.providers.sync_orchestrator.SyncOrchestrator: Successfully created ResourceState for InfraZen DB
2025-10-28 08:05:24,604 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,604 INFO sqlalchemy.engine.Engine: [cached since 0.05561s ago] {'resource_id_1': 3, 'tag_key_1': 'domain_name', 'param_1': 1}
2025-10-28 08:05:24,604 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,604 INFO sqlalchemy.engine.Engine: [cached since 0.05608s ago] {'resource_id_1': 3, 'tag_key_1': 'registrar', 'param_1': 1}
2025-10-28 08:05:24,605 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,605 INFO sqlalchemy.engine.Engine: [cached since 0.05654s ago] {'resource_id_1': 3, 'tag_key_1': 'registration_date', 'param_1': 1}
2025-10-28 08:05:24,605 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,605 INFO sqlalchemy.engine.Engine: [cached since 0.05701s ago] {'resource_id_1': 3, 'tag_key_1': 'expiration_date', 'param_1': 1}
2025-10-28 08:05:24,606 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,606 INFO sqlalchemy.engine.Engine: [cached since 0.05748s ago] {'resource_id_1': 3, 'tag_key_1': 'auto_renewal', 'param_1': 1}
2025-10-28 08:05:24,606 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,606 INFO sqlalchemy.engine.Engine: [cached since 0.05798s ago] {'resource_id_1': 3, 'tag_key_1': 'domain_age_days', 'param_1': 1}
2025-10-28 08:05:24,607 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,607 INFO sqlalchemy.engine.Engine: [cached since 0.05844s ago] {'resource_id_1': 3, 'tag_key_1': 'days_until_expiry', 'param_1': 1}
2025-10-28 08:05:24,607 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,607 INFO sqlalchemy.engine.Engine: [cached since 0.05898s ago] {'resource_id_1': 3, 'tag_key_1': 'monthly_cost', 'param_1': 1}
2025-10-28 08:05:24,608 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,608 INFO sqlalchemy.engine.Engine: [cached since 0.05945s ago] {'resource_id_1': 3, 'tag_key_1': 'renewal_cost', 'param_1': 1}
2025-10-28 08:05:24,608 INFO app.providers.sync_orchestrator.SyncOrchestrator: Successfully created ResourceState for neurocola.com
2025-10-28 08:05:24,608 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,608 INFO sqlalchemy.engine.Engine: [cached since 0.05999s ago] {'resource_id_1': 353, 'tag_key_1': 'domain_name', 'param_1': 1}
2025-10-28 08:05:24,609 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,609 INFO sqlalchemy.engine.Engine: [cached since 0.0605s ago] {'resource_id_1': 353, 'tag_key_1': 'registrar', 'param_1': 1}
2025-10-28 08:05:24,609 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,609 INFO sqlalchemy.engine.Engine: [cached since 0.06104s ago] {'resource_id_1': 353, 'tag_key_1': 'registration_date', 'param_1': 1}
2025-10-28 08:05:24,610 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,610 INFO sqlalchemy.engine.Engine: [cached since 0.06148s ago] {'resource_id_1': 353, 'tag_key_1': 'expiration_date', 'param_1': 1}
2025-10-28 08:05:24,610 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,610 INFO sqlalchemy.engine.Engine: [cached since 0.06196s ago] {'resource_id_1': 353, 'tag_key_1': 'auto_renewal', 'param_1': 1}
2025-10-28 08:05:24,611 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,611 INFO sqlalchemy.engine.Engine: [cached since 0.06243s ago] {'resource_id_1': 353, 'tag_key_1': 'domain_age_days', 'param_1': 1}
2025-10-28 08:05:24,611 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,611 INFO sqlalchemy.engine.Engine: [cached since 0.06289s ago] {'resource_id_1': 353, 'tag_key_1': 'days_until_expiry', 'param_1': 1}
2025-10-28 08:05:24,612 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,612 INFO sqlalchemy.engine.Engine: [cached since 0.06336s ago] {'resource_id_1': 353, 'tag_key_1': 'monthly_cost', 'param_1': 1}
2025-10-28 08:05:24,612 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,612 INFO sqlalchemy.engine.Engine: [cached since 0.06386s ago] {'resource_id_1': 353, 'tag_key_1': 'renewal_cost', 'param_1': 1}
2025-10-28 08:05:24,612 INFO app.providers.sync_orchestrator.SyncOrchestrator: Successfully created ResourceState for infrazen.ru
2025-10-28 08:05:24,613 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,613 INFO sqlalchemy.engine.Engine: [cached since 0.0644s ago] {'resource_id_1': 354, 'tag_key_1': 'domain_name', 'param_1': 1}
2025-10-28 08:05:24,613 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,613 INFO sqlalchemy.engine.Engine: [cached since 0.06486s ago] {'resource_id_1': 354, 'tag_key_1': 'registrar', 'param_1': 1}
2025-10-28 08:05:24,614 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,614 INFO sqlalchemy.engine.Engine: [cached since 0.06535s ago] {'resource_id_1': 354, 'tag_key_1': 'registration_date', 'param_1': 1}
2025-10-28 08:05:24,614 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,614 INFO sqlalchemy.engine.Engine: [cached since 0.06581s ago] {'resource_id_1': 354, 'tag_key_1': 'expiration_date', 'param_1': 1}
2025-10-28 08:05:24,614 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,614 INFO sqlalchemy.engine.Engine: [cached since 0.06626s ago] {'resource_id_1': 354, 'tag_key_1': 'auto_renewal', 'param_1': 1}
2025-10-28 08:05:24,615 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,615 INFO sqlalchemy.engine.Engine: [cached since 0.06672s ago] {'resource_id_1': 354, 'tag_key_1': 'domain_age_days', 'param_1': 1}
2025-10-28 08:05:24,615 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,615 INFO sqlalchemy.engine.Engine: [cached since 0.06718s ago] {'resource_id_1': 354, 'tag_key_1': 'days_until_expiry', 'param_1': 1}
2025-10-28 08:05:24,616 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,616 INFO sqlalchemy.engine.Engine: [cached since 0.06763s ago] {'resource_id_1': 354, 'tag_key_1': 'monthly_cost', 'param_1': 1}
2025-10-28 08:05:24,616 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:24,616 INFO sqlalchemy.engine.Engine: [cached since 0.06811s ago] {'resource_id_1': 354, 'tag_key_1': 'renewal_cost', 'param_1': 1}
2025-10-28 08:05:24,617 INFO app.providers.sync_orchestrator.SyncOrchestrator: Successfully created ResourceState for infrazen.store
2025-10-28 08:05:24,617 INFO app.providers.sync_orchestrator.SyncOrchestrator: Processed 7 resources for provider 1
2025-10-28 08:05:24,618 INFO sqlalchemy.engine.Engine: UPDATE resources SET daily_cost=%(daily_cost)s, original_cost=%(original_cost)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:05:24,618 INFO sqlalchemy.engine.Engine: [generated in 0.00008s] [{'daily_cost': 0.136986301369863, 'original_cost': 0.136986301369863, 'updated_at': datetime.datetime(2025, 10, 28, 8, 5, 24, 618858), 'resources_id': 3}, {'daily_cost': 0.136986301369863, 'original_cost': 0.136986301369863, 'updated_at': datetime.datetime(2025, 10, 28, 8, 5, 24, 618859), 'resources_id': 353}, {'daily_cost': 0.136986301369863, 'original_cost': 0.136986301369863, 'updated_at': datetime.datetime(2025, 10, 28, 8, 5, 24, 618859), 'resources_id': 354}]
2025-10-28 08:05:24,619 INFO sqlalchemy.engine.Engine: UPDATE sync_snapshots SET total_resources_found=%(total_resources_found)s, resources_created=%(resources_created)s, total_monthly_cost=%(total_monthly_cost)s, updated_at=%(updated_at)s WHERE sync_snapshots.id = %(sync_snapshots_id)s
2025-10-28 08:05:24,619 INFO sqlalchemy.engine.Engine: [generated in 0.00007s] {'total_resources_found': 7, 'resources_created': 7, 'total_monthly_cost': 68.14095890410958, 'updated_at': datetime.datetime(2025, 10, 28, 8, 5, 24, 619871), 'sync_snapshots_id': 8361}
2025-10-28 08:05:24,621 INFO sqlalchemy.engine.Engine: INSERT INTO resource_states (sync_snapshot_id, resource_id, provider_resource_id, resource_type, resource_name, state_action, previous_state, current_state, changes_detected, service_name, region, status, effective_cost, has_cost_change, has_status_change, has_config_change, created_at, updated_at) VALUES (%(sync_snapshot_id)s, %(resource_id)s, %(provider_resource_id)s, %(resource_type)s, %(resource_name)s, %(state_action)s, %(previous_state)s, %(current_state)s, %(changes_detected)s, %(service_name)s, %(region)s, %(status)s, %(effective_cost)s, %(has_cost_change)s, %(has_status_change)s, %(has_config_change)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:05:24,621 INFO sqlalchemy.engine.Engine: [generated in 0.00010s] {'sync_snapshot_id': 8361, 'resource_id': 520, 'provider_resource_id': '2301b82e-57a3-4d98-9663-136762a1c8ab', 'resource_type': 'server', 'resource_name': 'InfraZen Prod', 'state_action': 'updated', 'previous_state': None, 'current_state': None, 'changes_detected': None, 'service_name': 'Compute', 'region': 'ru2', 'status': 'active', 'effective_cost': 7.0, 'has_cost_change': 0, 'has_status_change': 0, 'has_config_change': 0, 'created_at': datetime.datetime(2025, 10, 28, 8, 5, 24, 621294), 'updated_at': datetime.datetime(2025, 10, 28, 8, 5, 24, 621294)}
2025-10-28 08:05:24,621 INFO sqlalchemy.engine.Engine: INSERT INTO resource_states (sync_snapshot_id, resource_id, provider_resource_id, resource_type, resource_name, state_action, previous_state, current_state, changes_detected, service_name, region, status, effective_cost, has_cost_change, has_status_change, has_config_change, created_at, updated_at) VALUES (%(sync_snapshot_id)s, %(resource_id)s, %(provider_resource_id)s, %(resource_type)s, %(resource_name)s, %(state_action)s, %(previous_state)s, %(current_state)s, %(changes_detected)s, %(service_name)s, %(region)s, %(status)s, %(effective_cost)s, %(has_cost_change)s, %(has_status_change)s, %(has_config_change)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:05:24,621 INFO sqlalchemy.engine.Engine: [cached since 0.0007158s ago] {'sync_snapshot_id': 8361, 'resource_id': 1, 'provider_resource_id': '439418ea-1fd8-46e2-859e-a50cbc9f7420', 'resource_type': 'server', 'resource_name': 'Objective Perrin', 'state_action': 'updated', 'previous_state': None, 'current_state': None, 'changes_detected': None, 'service_name': 'Compute', 'region': 'lv1', 'status': 'active', 'effective_cost': 22.0, 'has_cost_change': 0, 'has_status_change': 0, 'has_config_change': 0, 'created_at': datetime.datetime(2025, 10, 28, 8, 5, 24, 621934), 'updated_at': datetime.datetime(2025, 10, 28, 8, 5, 24, 621935)}
2025-10-28 08:05:24,622 INFO sqlalchemy.engine.Engine: INSERT INTO resource_states (sync_snapshot_id, resource_id, provider_resource_id, resource_type, resource_name, state_action, previous_state, current_state, changes_detected, service_name, region, status, effective_cost, has_cost_change, has_status_change, has_config_change, created_at, updated_at) VALUES (%(sync_snapshot_id)s, %(resource_id)s, %(provider_resource_id)s, %(resource_type)s, %(resource_name)s, %(state_action)s, %(previous_state)s, %(current_state)s, %(changes_detected)s, %(service_name)s, %(region)s, %(status)s, %(effective_cost)s, %(has_cost_change)s, %(has_status_change)s, %(has_config_change)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:05:24,622 INFO sqlalchemy.engine.Engine: [cached since 0.00115s ago] {'sync_snapshot_id': 8361, 'resource_id': 2, 'provider_resource_id': '48533ae0-b0f9-477c-9729-5a900dd3cde5', 'resource_type': 'server', 'resource_name': 'runner rus', 'state_action': 'updated', 'previous_state': None, 'current_state': None, 'changes_detected': None, 'service_name': 'Compute', 'region': 'ru1', 'status': 'active', 'effective_cost': 9.73, 'has_cost_change': 0, 'has_status_change': 0, 'has_config_change': 0, 'created_at': datetime.datetime(2025, 10, 28, 8, 5, 24, 622375), 'updated_at': datetime.datetime(2025, 10, 28, 8, 5, 24, 622376)}
2025-10-28 08:05:24,622 INFO sqlalchemy.engine.Engine: INSERT INTO resource_states (sync_snapshot_id, resource_id, provider_resource_id, resource_type, resource_name, state_action, previous_state, current_state, changes_detected, service_name, region, status, effective_cost, has_cost_change, has_status_change, has_config_change, created_at, updated_at) VALUES (%(sync_snapshot_id)s, %(resource_id)s, %(provider_resource_id)s, %(resource_type)s, %(resource_name)s, %(state_action)s, %(previous_state)s, %(current_state)s, %(changes_detected)s, %(service_name)s, %(region)s, %(status)s, %(effective_cost)s, %(has_cost_change)s, %(has_status_change)s, %(has_config_change)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:05:24,622 INFO sqlalchemy.engine.Engine: [cached since 0.001535s ago] {'sync_snapshot_id': 8361, 'resource_id': 352, 'provider_resource_id': '19475bc3-0a35-41f7-b568-5a3711e21778', 'resource_type': 'database-bg', 'resource_name': 'InfraZen DB', 'state_action': 'updated', 'previous_state': None, 'current_state': None, 'changes_detected': None, 'service_name': 'Database', 'region': 'ru2', 'status': 'RUNNING', 'effective_cost': 29.0, 'has_cost_change': 0, 'has_status_change': 0, 'has_config_change': 0, 'created_at': datetime.datetime(2025, 10, 28, 8, 5, 24, 622754), 'updated_at': datetime.datetime(2025, 10, 28, 8, 5, 24, 622754)}
2025-10-28 08:05:24,623 INFO sqlalchemy.engine.Engine: INSERT INTO resource_states (sync_snapshot_id, resource_id, provider_resource_id, resource_type, resource_name, state_action, previous_state, current_state, changes_detected, service_name, region, status, effective_cost, has_cost_change, has_status_change, has_config_change, created_at, updated_at) VALUES (%(sync_snapshot_id)s, %(resource_id)s, %(provider_resource_id)s, %(resource_type)s, %(resource_name)s, %(state_action)s, %(previous_state)s, %(current_state)s, %(changes_detected)s, %(service_name)s, %(region)s, %(status)s, %(effective_cost)s, %(has_cost_change)s, %(has_status_change)s, %(has_config_change)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:05:24,623 INFO sqlalchemy.engine.Engine: [cached since 0.0019s ago] {'sync_snapshot_id': 8361, 'resource_id': 3, 'provider_resource_id': '13314909', 'resource_type': 'domain', 'resource_name': 'neurocola.com', 'state_action': 'updated', 'previous_state': None, 'current_state': None, 'changes_detected': None, 'service_name': 'DNS', 'region': 'global', 'status': 'active', 'effective_cost': 0.136986301369863, 'has_cost_change': 0, 'has_status_change': 0, 'has_config_change': 0, 'created_at': datetime.datetime(2025, 10, 28, 8, 5, 24, 623126), 'updated_at': datetime.datetime(2025, 10, 28, 8, 5, 24, 623126)}
2025-10-28 08:05:24,623 INFO sqlalchemy.engine.Engine: INSERT INTO resource_states (sync_snapshot_id, resource_id, provider_resource_id, resource_type, resource_name, state_action, previous_state, current_state, changes_detected, service_name, region, status, effective_cost, has_cost_change, has_status_change, has_config_change, created_at, updated_at) VALUES (%(sync_snapshot_id)s, %(resource_id)s, %(provider_resource_id)s, %(resource_type)s, %(resource_name)s, %(state_action)s, %(previous_state)s, %(current_state)s, %(changes_detected)s, %(service_name)s, %(region)s, %(status)s, %(effective_cost)s, %(has_cost_change)s, %(has_status_change)s, %(has_config_change)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:05:24,623 INFO sqlalchemy.engine.Engine: [cached since 0.002268s ago] {'sync_snapshot_id': 8361, 'resource_id': 353, 'provider_resource_id': '13490013', 'resource_type': 'domain', 'resource_name': 'infrazen.ru', 'state_action': 'updated', 'previous_state': None, 'current_state': None, 'changes_detected': None, 'service_name': 'DNS', 'region': 'global', 'status': 'active', 'effective_cost': 0.136986301369863, 'has_cost_change': 0, 'has_status_change': 0, 'has_config_change': 0, 'created_at': datetime.datetime(2025, 10, 28, 8, 5, 24, 623493), 'updated_at': datetime.datetime(2025, 10, 28, 8, 5, 24, 623494)}
2025-10-28 08:05:24,624 INFO sqlalchemy.engine.Engine: INSERT INTO resource_states (sync_snapshot_id, resource_id, provider_resource_id, resource_type, resource_name, state_action, previous_state, current_state, changes_detected, service_name, region, status, effective_cost, has_cost_change, has_status_change, has_config_change, created_at, updated_at) VALUES (%(sync_snapshot_id)s, %(resource_id)s, %(provider_resource_id)s, %(resource_type)s, %(resource_name)s, %(state_action)s, %(previous_state)s, %(current_state)s, %(changes_detected)s, %(service_name)s, %(region)s, %(status)s, %(effective_cost)s, %(has_cost_change)s, %(has_status_change)s, %(has_config_change)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:05:24,624 INFO sqlalchemy.engine.Engine: [cached since 0.002785s ago] {'sync_snapshot_id': 8361, 'resource_id': 354, 'provider_resource_id': '13490014', 'resource_type': 'domain', 'resource_name': 'infrazen.store', 'state_action': 'updated', 'previous_state': None, 'current_state': None, 'changes_detected': None, 'service_name': 'DNS', 'region': 'global', 'status': 'active', 'effective_cost': 0.136986301369863, 'has_cost_change': 0, 'has_status_change': 0, 'has_config_change': 0, 'created_at': datetime.datetime(2025, 10, 28, 8, 5, 24, 624010), 'updated_at': datetime.datetime(2025, 10, 28, 8, 5, 24, 624011)}
2025-10-28 08:05:24,624 INFO sqlalchemy.engine.Engine: UPDATE resource_tags SET tag_value=%(tag_value)s, updated_at=%(updated_at)s WHERE resource_tags.id = %(resource_tags_id)s
2025-10-28 08:05:24,624 INFO sqlalchemy.engine.Engine: [generated in 0.00013s] [{'tag_value': '9.6', 'updated_at': datetime.datetime(2025, 10, 28, 8, 5, 24, 624797), 'resource_tags_id': 13}, {'tag_value': '10.4', 'updated_at': datetime.datetime(2025, 10, 28, 8, 5, 24, 624798), 'resource_tags_id': 14}, {'tag_value': '-0.17', 'updated_at': datetime.datetime(2025, 10, 28, 8, 5, 24, 624798), 'resource_tags_id': 16}, {'tag_value': '2025-10-28T00:00:00+00:00', 'updated_at': datetime.datetime(2025, 10, 28, 8, 5, 24, 624803), 'resource_tags_id': 19}, {'tag_value': '1182.32', 'updated_at': datetime.datetime(2025, 10, 28, 8, 5, 24, 624803), 'resource_tags_id': 21}, {'tag_value': '1220.88', 'updated_at': datetime.datetime(2025, 10, 28, 8, 5, 24, 624804), 'resource_tags_id': 22}, {'tag_value': '1108.09', 'updated_at': datetime.datetime(2025, 10, 28, 8, 5, 24, 624804), 'resource_tags_id': 23}, {'tag_value': '57.73', 'updated_at': datetime.datetime(2025, 10, 28, 8, 5, 24, 624805), 'resource_tags_id': 24}  ... displaying 10 of 39 total bound parameter sets ...  {'tag_value': '2025-10-28T00:00:00+00:00', 'updated_at': datetime.datetime(2025, 10, 28, 8, 5, 24, 624815), 'resource_tags_id': 928}, {'tag_value': '{"dates": ["2025-09-28T00:00:00+00:00", "2025-09-29T00:00:00+00:00", "2025-09-30T00:00:00+00:00", "2025-10-01T00:00:00+00:00", "2025-10-02T00:00:00+0 ... (942 characters truncated) ... 391140885658, 545.1902565541715, 552.0367808372914, 511.53637203070684, 501.04258944090384, 504.6353312890987, 528.8982220451912, 546.7686945013661]}', 'updated_at': datetime.datetime(2025, 10, 28, 8, 5, 24, 624816), 'resource_tags_id': 929}]
2025-10-28 08:05:24,635 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:05:24,636 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:05:24,637 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_status AS sync_snapshots_sync_status, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_completed_at AS sync_snapshots_sync_completed_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.total_resources_found AS sync_snapshots_total_resources_found, sync_snapshots.resources_created AS sync_snapshots_resources_created, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:05:24,637 INFO sqlalchemy.engine.Engine: [generated in 0.00007s] {'pk_1': 8361}
2025-10-28 08:05:24,638 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:05:24,638 INFO sqlalchemy.engine.Engine: [generated in 0.00006s] {'pk_1': 1}
2025-10-28 08:05:24,638 INFO sqlalchemy.engine.Engine: UPDATE cloud_providers SET last_sync=%(last_sync)s, sync_status=%(sync_status)s, sync_error=%(sync_error)s, updated_at=%(updated_at)s WHERE cloud_providers.id = %(cloud_providers_id)s
2025-10-28 08:05:24,638 INFO sqlalchemy.engine.Engine: [generated in 0.00007s] {'last_sync': datetime.datetime(2025, 10, 28, 8, 5, 24, 637672), 'sync_status': 'success', 'sync_error': None, 'updated_at': datetime.datetime(2025, 10, 28, 8, 5, 24, 638658), 'cloud_providers_id': 1}
2025-10-28 08:05:24,639 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:05:24,639 INFO app.providers.sync_orchestrator.SyncOrchestrator: Sync completed for provider 1: Successfully synced 7 paid resources from Beget
2025-10-28 08:05:24,639 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:05:24,639 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:05:24,639 INFO sqlalchemy.engine.Engine: [cached since 3.965s ago] {'pk_1': 1}
2025-10-28 08:05:24,640 INFO app.core.services.complete_sync_service.CompleteSyncService: Provider Beget- cola synced successfully: 7 resources, 68.14095890410958 RUB
2025-10-28 08:05:24,640 INFO sqlalchemy.engine.Engine: INSERT INTO provider_sync_references (complete_sync_id, provider_id, sync_snapshot_id, sync_order, sync_status, sync_duration_seconds, resources_synced, provider_cost, error_message, error_details, created_at, updated_at) VALUES (%(complete_sync_id)s, %(provider_id)s, %(sync_snapshot_id)s, %(sync_order)s, %(sync_status)s, %(sync_duration_seconds)s, %(resources_synced)s, %(provider_cost)s, %(error_message)s, %(error_details)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:05:24,640 INFO sqlalchemy.engine.Engine: [generated in 0.00008s] {'complete_sync_id': 2082, 'provider_id': 1, 'sync_snapshot_id': 8361, 'sync_order': 1, 'sync_status': 'success', 'sync_duration_seconds': 0, 'resources_synced': 7, 'provider_cost': 68.14095890410958, 'error_message': None, 'error_details': None, 'created_at': datetime.datetime(2025, 10, 28, 8, 5, 24, 640745), 'updated_at': datetime.datetime(2025, 10, 28, 8, 5, 24, 640746)}
2025-10-28 08:05:24,642 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:05:24,642 INFO sqlalchemy.engine.Engine: [cached since 3.968s ago] {'pk_1': 2}
2025-10-28 08:05:24,643 INFO app.core.services.complete_sync_service.CompleteSyncService: Syncing provider 2 (Selectel-Cola) - 2/4
2025-10-28 08:05:24,643 INFO sqlalchemy.engine.Engine: SELECT complete_syncs.user_id AS complete_syncs_user_id, complete_syncs.sync_type AS complete_syncs_sync_type, complete_syncs.sync_status AS complete_syncs_sync_status, complete_syncs.sync_started_at AS complete_syncs_sync_started_at, complete_syncs.sync_completed_at AS complete_syncs_sync_completed_at, complete_syncs.sync_duration_seconds AS complete_syncs_sync_duration_seconds, complete_syncs.total_providers_synced AS complete_syncs_total_providers_synced, complete_syncs.successful_providers AS complete_syncs_successful_providers, complete_syncs.failed_providers AS complete_syncs_failed_providers, complete_syncs.total_resources_found AS complete_syncs_total_resources_found, complete_syncs.total_monthly_cost AS complete_syncs_total_monthly_cost, complete_syncs.total_daily_cost AS complete_syncs_total_daily_cost, complete_syncs.cost_by_provider AS complete_syncs_cost_by_provider, complete_syncs.resources_by_provider AS complete_syncs_resources_by_provider, complete_syncs.error_message AS complete_syncs_error_message, complete_syncs.error_details AS complete_syncs_error_details, complete_syncs.sync_config AS complete_syncs_sync_config, complete_syncs.id AS complete_syncs_id, complete_syncs.created_at AS complete_syncs_created_at, complete_syncs.updated_at AS complete_syncs_updated_at 
FROM complete_syncs 
WHERE complete_syncs.id = %(pk_1)s
2025-10-28 08:05:24,643 INFO sqlalchemy.engine.Engine: [cached since 3.97s ago] {'pk_1': 2082}
2025-10-28 08:05:24,643 INFO app.providers.sync_orchestrator.SyncOrchestrator: Starting complete_sync sync for provider 2 (selectel)
2025-10-28 08:05:24,643 INFO sqlalchemy.engine.Engine: INSERT INTO sync_snapshots (provider_id, sync_type, sync_status, sync_started_at, sync_completed_at, sync_duration_seconds, total_resources_found, resources_created, resources_updated, resources_deleted, resources_unchanged, total_monthly_cost, total_resources_by_type, total_resources_by_status, error_message, error_details, sync_config, created_at, updated_at) VALUES (%(provider_id)s, %(sync_type)s, %(sync_status)s, %(sync_started_at)s, %(sync_completed_at)s, %(sync_duration_seconds)s, %(total_resources_found)s, %(resources_created)s, %(resources_updated)s, %(resources_deleted)s, %(resources_unchanged)s, %(total_monthly_cost)s, %(total_resources_by_type)s, %(total_resources_by_status)s, %(error_message)s, %(error_details)s, %(sync_config)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:05:24,643 INFO sqlalchemy.engine.Engine: [cached since 3.968s ago] {'provider_id': 2, 'sync_type': 'complete_sync', 'sync_status': 'running', 'sync_started_at': datetime.datetime(2025, 10, 28, 8, 5, 24, 643783), 'sync_completed_at': None, 'sync_duration_seconds': None, 'total_resources_found': 0, 'resources_created': 0, 'resources_updated': 0, 'resources_deleted': 0, 'resources_unchanged': 0, 'total_monthly_cost': 0.0, 'total_resources_by_type': None, 'total_resources_by_status': None, 'error_message': None, 'error_details': None, 'sync_config': '{"sync_type": "complete_sync", "provider_type": "selectel", "connection_name": "Selectel-Cola", "sync_timestamp": "2025-10-28T08:05:24.643796"}', 'created_at': datetime.datetime(2025, 10, 28, 8, 5, 24, 643939), 'updated_at': datetime.datetime(2025, 10, 28, 8, 5, 24, 643940)}
2025-10-28 08:05:24,644 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:05:24,644 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:05:24,645 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:05:24,645 INFO sqlalchemy.engine.Engine: [cached since 3.97s ago] {'pk_1': 2}
2025-10-28 08:05:24,645 INFO app.providers.sync_orchestrator.SyncOrchestrator: Testing connection for provider 2
2025-10-28 08:05:26,305 INFO app.providers.selectel.client: Discovered region: ru-6 -> https://ru-6.cloud.api.selcloud.ru
2025-10-28 08:05:26,305 INFO app.providers.selectel.client: Discovered region: ru-1 -> https://ru-1.cloud.api.selcloud.ru
2025-10-28 08:05:26,305 INFO app.providers.selectel.client: Discovered region: ru-9 -> https://ru-9.cloud.api.selcloud.ru
2025-10-28 08:05:26,306 INFO app.providers.selectel.client: Discovered region: uz-2 -> https://uz-2.cloud.api.servercore.com
2025-10-28 08:05:26,306 INFO app.providers.selectel.client: Discovered region: ke-1 -> https://ke-1.cloud.api.servercore.com
2025-10-28 08:05:26,306 INFO app.providers.selectel.client: Discovered region: ru-8 -> https://ru-8.cloud.api.selcloud.ru
2025-10-28 08:05:26,306 INFO app.providers.selectel.client: Discovered region: gis-2 -> https://gis-2.cloud.api.selcloud.ru
2025-10-28 08:05:26,306 INFO app.providers.selectel.client: Discovered region: kz-1 -> https://kz-1.cloud.api.servercore.com
2025-10-28 08:05:26,306 INFO app.providers.selectel.client: Discovered region: ru-2 -> https://ru-2.cloud.api.selcloud.ru
2025-10-28 08:05:26,306 INFO app.providers.selectel.client: Discovered region: ru-7 -> https://ru-7.cloud.api.selcloud.ru
2025-10-28 08:05:26,306 INFO app.providers.selectel.client: Discovered region: gis-1 -> https://gis-1.cloud.api.selcloud.ru
2025-10-28 08:05:26,306 INFO app.providers.selectel.client: Discovered region: uz-1 -> https://uz-1.cloud.api.servercore.com
2025-10-28 08:05:26,306 INFO app.providers.selectel.client: Discovered region: ru-3 -> https://ru-3.cloud.api.selcloud.ru
2025-10-28 08:05:26,307 INFO app.providers.selectel.client: Discovered region: ru-7 -> https://ru-7.cloud.api.selcloud.ru
2025-10-28 08:05:26,307 INFO app.providers.selectel.client: Discovered region: uz-1 -> https://uz-1.cloud.api.servercore.com
2025-10-28 08:05:26,307 INFO app.providers.selectel.client: Discovered region: kz-1 -> https://kz-1.cloud.api.servercore.com
2025-10-28 08:05:26,307 INFO app.providers.selectel.client: Discovered region: ru-9 -> https://ru-9.cloud.api.selcloud.ru
2025-10-28 08:05:26,307 INFO app.providers.selectel.client: Discovered region: uz-2 -> https://uz-2.cloud.api.servercore.com
2025-10-28 08:05:26,307 INFO app.providers.selectel.client: Discovered region: ke-1 -> https://ke-1.cloud.api.servercore.com
2025-10-28 08:05:26,307 INFO app.providers.selectel.client: Discovered region: gis-1 -> https://gis-1.cloud.api.selcloud.ru
2025-10-28 08:05:26,307 INFO app.providers.selectel.client: Discovered region: ru-2 -> https://ru-2.cloud.api.selcloud.ru
2025-10-28 08:05:26,307 INFO app.providers.selectel.client: Discovered region: ru-8 -> https://ru-8.cloud.api.selcloud.ru
2025-10-28 08:05:26,307 INFO app.providers.selectel.client: Discovered region: ru-6 -> https://ru-6.cloud.api.selcloud.ru
2025-10-28 08:05:26,307 INFO app.providers.selectel.client: Discovered region: ru-1 -> https://ru-1.cloud.api.selcloud.ru
2025-10-28 08:05:26,307 INFO app.providers.selectel.client: Discovered region: ru-3 -> https://ru-3.cloud.api.selcloud.ru
2025-10-28 08:05:26,308 INFO app.providers.selectel.client: Discovered region: gis-2 -> https://gis-2.cloud.api.selcloud.ru
2025-10-28 08:05:26,308 INFO app.providers.selectel.client: Discovered region: uz-1 -> https://uz-1.cloud.api.servercore.com
2025-10-28 08:05:26,308 INFO app.providers.selectel.client: Discovered region: gis-2 -> https://gis-2.cloud.api.selcloud.ru
2025-10-28 08:05:26,308 INFO app.providers.selectel.client: Discovered region: ru-7 -> https://ru-7.cloud.api.selcloud.ru
2025-10-28 08:05:26,308 INFO app.providers.selectel.client: Discovered region: kz-1 -> https://kz-1.cloud.api.servercore.com
2025-10-28 08:05:26,308 INFO app.providers.selectel.client: Discovered region: uz-2 -> https://uz-2.cloud.api.servercore.com
2025-10-28 08:05:26,308 INFO app.providers.selectel.client: Discovered region: ru-6 -> https://ru-6.cloud.api.selcloud.ru
2025-10-28 08:05:26,308 INFO app.providers.selectel.client: Discovered region: ru-9 -> https://ru-9.cloud.api.selcloud.ru
2025-10-28 08:05:26,308 INFO app.providers.selectel.client: Discovered region: ke-1 -> https://ke-1.cloud.api.servercore.com
2025-10-28 08:05:26,308 INFO app.providers.selectel.client: Discovered region: ru-3 -> https://ru-3.cloud.api.selcloud.ru
2025-10-28 08:05:26,308 INFO app.providers.selectel.client: Discovered region: ru-2 -> https://ru-2.cloud.api.selcloud.ru
2025-10-28 08:05:26,309 INFO app.providers.selectel.client: Discovered region: ru-1 -> https://ru-1.cloud.api.selcloud.ru
2025-10-28 08:05:26,309 INFO app.providers.selectel.client: Discovered region: gis-1 -> https://gis-1.cloud.api.selcloud.ru
2025-10-28 08:05:26,309 INFO app.providers.selectel.client: Discovered region: ru-8 -> https://ru-8.cloud.api.selcloud.ru
2025-10-28 08:05:26,309 INFO app.providers.selectel.client: Discovered region: ru-5 -> https://ru-5.cloud.api.selcloud.ru
2025-10-28 08:05:26,309 INFO app.providers.selectel.client: Discovered region: ru-4 -> https://ru-4.cloud.api.selcloud.ru
2025-10-28 08:05:26,309 INFO app.providers.selectel.client: Total regions available: 15
2025-10-28 08:05:26,312 INFO app.providers.sync_orchestrator.SyncOrchestrator: Performing resource sync for provider 2
2025-10-28 08:05:26,312 INFO app.providers.plugin_system.SelectelProviderPlugin: Starting Selectel billing-first sync for provider 2
2025-10-28 08:05:26,314 INFO sqlalchemy.engine.Engine: UPDATE cloud_providers SET provider_metadata=%(provider_metadata)s, updated_at=%(updated_at)s WHERE cloud_providers.id = %(cloud_providers_id)s
2025-10-28 08:05:26,314 INFO sqlalchemy.engine.Engine: [cached since 1.826s ago] {'provider_metadata': '{"last_connection_test": "2025-10-28T08:05:26.311514", "connection_status": "success", "account_info": {"name": "478587", "enabled": true, "locked": false, "onboarding": false}}', 'updated_at': datetime.datetime(2025, 10, 28, 8, 5, 26, 314667), 'cloud_providers_id': 2}
2025-10-28 08:05:26,316 INFO sqlalchemy.engine.Engine: INSERT INTO sync_snapshots (provider_id, sync_type, sync_status, sync_started_at, sync_completed_at, sync_duration_seconds, total_resources_found, resources_created, resources_updated, resources_deleted, resources_unchanged, total_monthly_cost, total_resources_by_type, total_resources_by_status, error_message, error_details, sync_config, created_at, updated_at) VALUES (%(provider_id)s, %(sync_type)s, %(sync_status)s, %(sync_started_at)s, %(sync_completed_at)s, %(sync_duration_seconds)s, %(total_resources_found)s, %(resources_created)s, %(resources_updated)s, %(resources_deleted)s, %(resources_unchanged)s, %(total_monthly_cost)s, %(total_resources_by_type)s, %(total_resources_by_status)s, %(error_message)s, %(error_details)s, %(sync_config)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:05:26,316 INFO sqlalchemy.engine.Engine: [cached since 5.64s ago] {'provider_id': 2, 'sync_type': 'billing_first', 'sync_status': 'running', 'sync_started_at': datetime.datetime(2025, 10, 28, 8, 5, 26, 313273), 'sync_completed_at': None, 'sync_duration_seconds': None, 'total_resources_found': 0, 'resources_created': 0, 'resources_updated': 0, 'resources_deleted': 0, 'resources_unchanged': 0, 'total_monthly_cost': 0.0, 'total_resources_by_type': None, 'total_resources_by_status': None, 'error_message': None, 'error_details': None, 'sync_config': None, 'created_at': datetime.datetime(2025, 10, 28, 8, 5, 26, 316484), 'updated_at': datetime.datetime(2025, 10, 28, 8, 5, 26, 316490)}
2025-10-28 08:05:26,318 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:05:26,319 INFO app.providers.selectel.service: PHASE 0: Validating OpenStack authentication
2025-10-28 08:05:27,282 INFO app.providers.selectel.client: Discovered region: ru-6 -> https://ru-6.cloud.api.selcloud.ru
2025-10-28 08:05:27,283 INFO app.providers.selectel.client: Discovered region: ru-1 -> https://ru-1.cloud.api.selcloud.ru
2025-10-28 08:05:27,283 INFO app.providers.selectel.client: Discovered region: ru-9 -> https://ru-9.cloud.api.selcloud.ru
2025-10-28 08:05:27,283 INFO app.providers.selectel.client: Discovered region: uz-2 -> https://uz-2.cloud.api.servercore.com
2025-10-28 08:05:27,283 INFO app.providers.selectel.client: Discovered region: ke-1 -> https://ke-1.cloud.api.servercore.com
2025-10-28 08:05:27,283 INFO app.providers.selectel.client: Discovered region: ru-8 -> https://ru-8.cloud.api.selcloud.ru
2025-10-28 08:05:27,283 INFO app.providers.selectel.client: Discovered region: gis-2 -> https://gis-2.cloud.api.selcloud.ru
2025-10-28 08:05:27,284 INFO app.providers.selectel.client: Discovered region: kz-1 -> https://kz-1.cloud.api.servercore.com
2025-10-28 08:05:27,284 INFO app.providers.selectel.client: Discovered region: ru-2 -> https://ru-2.cloud.api.selcloud.ru
2025-10-28 08:05:27,284 INFO app.providers.selectel.client: Discovered region: ru-7 -> https://ru-7.cloud.api.selcloud.ru
2025-10-28 08:05:27,284 INFO app.providers.selectel.client: Discovered region: gis-1 -> https://gis-1.cloud.api.selcloud.ru
2025-10-28 08:05:27,284 INFO app.providers.selectel.client: Discovered region: uz-1 -> https://uz-1.cloud.api.servercore.com
2025-10-28 08:05:27,284 INFO app.providers.selectel.client: Discovered region: ru-3 -> https://ru-3.cloud.api.selcloud.ru
2025-10-28 08:05:27,284 INFO app.providers.selectel.client: Discovered region: ru-7 -> https://ru-7.cloud.api.selcloud.ru
2025-10-28 08:05:27,284 INFO app.providers.selectel.client: Discovered region: uz-1 -> https://uz-1.cloud.api.servercore.com
2025-10-28 08:05:27,284 INFO app.providers.selectel.client: Discovered region: kz-1 -> https://kz-1.cloud.api.servercore.com
2025-10-28 08:05:27,284 INFO app.providers.selectel.client: Discovered region: ru-9 -> https://ru-9.cloud.api.selcloud.ru
2025-10-28 08:05:27,285 INFO app.providers.selectel.client: Discovered region: uz-2 -> https://uz-2.cloud.api.servercore.com
2025-10-28 08:05:27,285 INFO app.providers.selectel.client: Discovered region: ke-1 -> https://ke-1.cloud.api.servercore.com
2025-10-28 08:05:27,285 INFO app.providers.selectel.client: Discovered region: gis-1 -> https://gis-1.cloud.api.selcloud.ru
2025-10-28 08:05:27,285 INFO app.providers.selectel.client: Discovered region: ru-2 -> https://ru-2.cloud.api.selcloud.ru
2025-10-28 08:05:27,285 INFO app.providers.selectel.client: Discovered region: ru-8 -> https://ru-8.cloud.api.selcloud.ru
2025-10-28 08:05:27,285 INFO app.providers.selectel.client: Discovered region: ru-6 -> https://ru-6.cloud.api.selcloud.ru
2025-10-28 08:05:27,285 INFO app.providers.selectel.client: Discovered region: ru-1 -> https://ru-1.cloud.api.selcloud.ru
2025-10-28 08:05:27,285 INFO app.providers.selectel.client: Discovered region: ru-3 -> https://ru-3.cloud.api.selcloud.ru
2025-10-28 08:05:27,285 INFO app.providers.selectel.client: Discovered region: gis-2 -> https://gis-2.cloud.api.selcloud.ru
2025-10-28 08:05:27,285 INFO app.providers.selectel.client: Discovered region: uz-1 -> https://uz-1.cloud.api.servercore.com
2025-10-28 08:05:27,285 INFO app.providers.selectel.client: Discovered region: gis-2 -> https://gis-2.cloud.api.selcloud.ru
2025-10-28 08:05:27,285 INFO app.providers.selectel.client: Discovered region: ru-7 -> https://ru-7.cloud.api.selcloud.ru
2025-10-28 08:05:27,286 INFO app.providers.selectel.client: Discovered region: kz-1 -> https://kz-1.cloud.api.servercore.com
2025-10-28 08:05:27,286 INFO app.providers.selectel.client: Discovered region: uz-2 -> https://uz-2.cloud.api.servercore.com
2025-10-28 08:05:27,286 INFO app.providers.selectel.client: Discovered region: ru-6 -> https://ru-6.cloud.api.selcloud.ru
2025-10-28 08:05:27,286 INFO app.providers.selectel.client: Discovered region: ru-9 -> https://ru-9.cloud.api.selcloud.ru
2025-10-28 08:05:27,286 INFO app.providers.selectel.client: Discovered region: ke-1 -> https://ke-1.cloud.api.servercore.com
2025-10-28 08:05:27,286 INFO app.providers.selectel.client: Discovered region: ru-3 -> https://ru-3.cloud.api.selcloud.ru
2025-10-28 08:05:27,286 INFO app.providers.selectel.client: Discovered region: ru-2 -> https://ru-2.cloud.api.selcloud.ru
2025-10-28 08:05:27,286 INFO app.providers.selectel.client: Discovered region: ru-1 -> https://ru-1.cloud.api.selcloud.ru
2025-10-28 08:05:27,286 INFO app.providers.selectel.client: Discovered region: gis-1 -> https://gis-1.cloud.api.selcloud.ru
2025-10-28 08:05:27,286 INFO app.providers.selectel.client: Discovered region: ru-8 -> https://ru-8.cloud.api.selcloud.ru
2025-10-28 08:05:27,286 INFO app.providers.selectel.client: Discovered region: ru-5 -> https://ru-5.cloud.api.selcloud.ru
2025-10-28 08:05:27,286 INFO app.providers.selectel.client: Discovered region: ru-4 -> https://ru-4.cloud.api.selcloud.ru
2025-10-28 08:05:27,286 INFO app.providers.selectel.client: Total regions available: 15
2025-10-28 08:05:27,288 INFO app.providers.selectel.service: ✅ OpenStack authentication successful
2025-10-28 08:05:27,289 INFO app.providers.selectel.service: PHASE 1: Fetching billing data (2h window - current active resources only)
2025-10-28 08:05:29,941 INFO app.providers.selectel.service: Caching provision dates for all resources
2025-10-28 08:05:31,872 INFO app.providers.selectel.service: Cached provision dates for 5 resources
2025-10-28 08:05:31,875 INFO app.providers.selectel.service: Found 4 billed resources
2025-10-28 08:05:31,875 INFO app.providers.selectel.service: PHASE 2: Grouping resources by service type
2025-10-28 08:05:31,876 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:05:31,877 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_status AS sync_snapshots_sync_status, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_completed_at AS sync_snapshots_sync_completed_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.total_resources_found AS sync_snapshots_total_resources_found, sync_snapshots.resources_created AS sync_snapshots_resources_created, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:05:31,877 INFO sqlalchemy.engine.Engine: [cached since 7.241s ago] {'pk_1': 8363}
2025-10-28 08:05:31,879 INFO app.providers.selectel.service: Grouped into 3 service types: ['volume', 'server', 'load_balancer']
2025-10-28 08:05:31,879 INFO app.providers.selectel.service: PHASE 3: Processing servers
2025-10-28 08:05:33,390 INFO app.providers.selectel.client: Found 1 servers in region ru-3 for project 48643015916742d080f0ecdd519bada3
2025-10-28 08:05:33,394 INFO app.providers.selectel.service: ✅ Found server 0264e6f6-b624-4f6f-a605-7db0ca0553d9 using billing-provided location
2025-10-28 08:05:35,139 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:05:35,139 INFO sqlalchemy.engine.Engine: [cached since 14.46s ago] {'pk_1': 2}
2025-10-28 08:05:35,143 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.provider_id = %(provider_id_1)s AND resources.resource_id = %(resource_id_1)s
2025-10-28 08:05:35,143 INFO sqlalchemy.engine.Engine: [generated in 0.00035s] {'provider_id_1': 2, 'resource_id_1': '0264e6f6-b624-4f6f-a605-7db0ca0553d9'}
2025-10-28 08:05:35,147 INFO sqlalchemy.engine.Engine: UPDATE resources SET last_sync=%(last_sync)s, provider_config=%(provider_config)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:05:35,147 INFO sqlalchemy.engine.Engine: [cached since 10.63s ago] {'last_sync': datetime.datetime(2025, 10, 28, 8, 5, 35, 145814), 'provider_config': '{"id": "0264e6f6-b624-4f6f-a605-7db0ca0553d9", "name": "Tess", "status": "ACTIVE", "tenant_id": "48643015916742d080f0ecdd519bada3", "user_id": "d5be2 ... (2557 characters truncated) ... _rubles": 324.0}, "vcpus": 1, "ram_mb": 1024, "total_storage_gb": 0, "ip_addresses": [], "attached_volumes": [], "created_at": "2025-10-27T08:00:00"}', 'updated_at': datetime.datetime(2025, 10, 28, 8, 5, 35, 147170), 'resources_id': 1286}
2025-10-28 08:05:35,149 INFO sqlalchemy.engine.Engine: INSERT INTO resource_states (sync_snapshot_id, resource_id, provider_resource_id, resource_type, resource_name, state_action, previous_state, current_state, changes_detected, service_name, region, status, effective_cost, has_cost_change, has_status_change, has_config_change, created_at, updated_at) VALUES (%(sync_snapshot_id)s, %(resource_id)s, %(provider_resource_id)s, %(resource_type)s, %(resource_name)s, %(state_action)s, %(previous_state)s, %(current_state)s, %(changes_detected)s, %(service_name)s, %(region)s, %(status)s, %(effective_cost)s, %(has_cost_change)s, %(has_status_change)s, %(has_config_change)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:05:35,149 INFO sqlalchemy.engine.Engine: [generated in 0.00030s] {'sync_snapshot_id': 8363, 'resource_id': 1286, 'provider_resource_id': '0264e6f6-b624-4f6f-a605-7db0ca0553d9', 'resource_type': 'server', 'resource_name': 'Tess', 'state_action': 'updated', 'previous_state': '{"id": 1286, "provider_id": 2, "resource_id": "0264e6f6-b624-4f6f-a605-7db0ca0553d9", "resource_name": "Tess", "region": "ru-3", "external_ip": null, ... (3402 characters truncated) ...  253.53, "min_usage_mb": 211.59, "usage_percent": 22.87, "trend": 41.93}}}, "created_at": "2025-10-25T10:05:20", "updated_at": "2025-10-25T13:43:03"}', 'current_state': '{"resource_id": "0264e6f6-b624-4f6f-a605-7db0ca0553d9", "resource_name": "Tess", "resource_type": "server", "service_name": "Compute", "region": "ru- ... (2795 characters truncated) ... us": 1, "ram_mb": 1024, "total_storage_gb": 0, "ip_addresses": [], "attached_volumes": [], "created_at": "2025-10-27T08:00:00"}, "external_ip": null}', 'changes_detected': '{"effective_cost": {"previous": 10.32, "current": 0.0}, "provider_config": {"previous": {"id": "0264e6f6-b624-4f6f-a605-7db0ca0553d9", "name": "Tess" ... (5770 characters truncated) ... ubles": 324.0}, "vcpus": 1, "ram_mb": 1024, "total_storage_gb": 0, "ip_addresses": [], "attached_volumes": [], "created_at": "2025-10-27T08:00:00"}}}', 'service_name': 'Compute', 'region': 'ru-3', 'status': 'RUNNING', 'effective_cost': 0.0, 'has_cost_change': 1, 'has_status_change': 0, 'has_config_change': 1, 'created_at': datetime.datetime(2025, 10, 28, 8, 5, 35, 149322), 'updated_at': datetime.datetime(2025, 10, 28, 8, 5, 35, 149326)}
2025-10-28 08:05:35,152 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:05:35,156 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:05:35,157 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:05:35,158 INFO sqlalchemy.engine.Engine: [generated in 0.00027s] {'pk_1': 1286}
2025-10-28 08:05:35,160 INFO sqlalchemy.engine.Engine: UPDATE resources SET effective_cost=%(effective_cost)s, currency=%(currency)s, daily_cost=%(daily_cost)s, original_cost=%(original_cost)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:05:35,160 INFO sqlalchemy.engine.Engine: [generated in 0.00025s] {'effective_cost': 10.8, 'currency': 'RUB', 'daily_cost': 10.8, 'original_cost': 324.0, 'updated_at': datetime.datetime(2025, 10, 28, 8, 5, 35, 160078), 'resources_id': 1286}
2025-10-28 08:05:35,161 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:05:35,161 INFO sqlalchemy.engine.Engine: [cached since 0.003578s ago] {'pk_1': 1286}
2025-10-28 08:05:35,162 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:35,163 INFO sqlalchemy.engine.Engine: [cached since 10.61s ago] {'resource_id_1': 1286, 'tag_key_1': 'monthly_cost_rubles', 'param_1': 1}
2025-10-28 08:05:35,164 INFO sqlalchemy.engine.Engine: UPDATE resource_tags SET tag_value=%(tag_value)s, updated_at=%(updated_at)s WHERE resource_tags.id = %(resource_tags_id)s
2025-10-28 08:05:35,164 INFO sqlalchemy.engine.Engine: [generated in 0.00022s] {'tag_value': '324.0', 'updated_at': datetime.datetime(2025, 10, 28, 8, 5, 35, 164467), 'resource_tags_id': 2704}
2025-10-28 08:05:35,165 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:35,165 INFO sqlalchemy.engine.Engine: [cached since 10.62s ago] {'resource_id_1': 1286, 'tag_key_1': 'cost_source', 'param_1': 1}
2025-10-28 08:05:35,166 INFO app.providers.selectel.service: Processed 1 VMs (0 zombies)
2025-10-28 08:05:35,166 INFO app.providers.selectel.service: PHASE 3.5: Extracting orphaned volumes from deleted VMs
2025-10-28 08:05:35,166 INFO app.providers.selectel.service: Extracted 0 orphaned volumes from deleted VMs
2025-10-28 08:05:35,166 INFO app.providers.selectel.service: PHASE 4: Processing volumes
2025-10-28 08:05:35,167 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_status AS sync_snapshots_sync_status, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_completed_at AS sync_snapshots_sync_completed_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.total_resources_found AS sync_snapshots_total_resources_found, sync_snapshots.resources_created AS sync_snapshots_resources_created, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:05:35,167 INFO sqlalchemy.engine.Engine: [cached since 10.53s ago] {'pk_1': 8363}
2025-10-28 08:05:35,541 WARNING app.providers.selectel.service: Volume 60d3239e-2736-4c6c-9d2f-facef8b02dc4 not found at billing location: Failed to get OpenStack volumes from ru-3: 400 Client Error: Bad Request for url: https://ru-3.cloud.api.selcloud.ru/volume/v3/ae452e6f559f4aeca2c4412dcbbfb60b/volumes/detail
2025-10-28 08:05:48,248 WARNING app.providers.selectel.service: Volume 60d3239e-2736-4c6c-9d2f-facef8b02dc4 not found in any project/region combination
2025-10-28 08:05:48,249 WARNING app.providers.selectel.service: Volume not enriched from OpenStack: 60d3239e-2736-4c6c-9d2f-facef8b02dc4 (disk-for-Esther-#1)
2025-10-28 08:05:50,385 INFO app.providers.selectel.service: Found volume details for 60d3239e-2736-4c6c-9d2f-facef8b02dc4: 5 GB, created: 2025-10-27T08:00:00
2025-10-28 08:05:50,389 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:05:50,389 INFO sqlalchemy.engine.Engine: [cached since 29.71s ago] {'pk_1': 2}
2025-10-28 08:05:50,391 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.provider_id = %(provider_id_1)s AND resources.resource_id = %(resource_id_1)s
2025-10-28 08:05:50,391 INFO sqlalchemy.engine.Engine: [cached since 15.25s ago] {'provider_id_1': 2, 'resource_id_1': '60d3239e-2736-4c6c-9d2f-facef8b02dc4'}
2025-10-28 08:05:50,394 INFO sqlalchemy.engine.Engine: UPDATE resources SET last_sync=%(last_sync)s, provider_config=%(provider_config)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:05:50,394 INFO sqlalchemy.engine.Engine: [cached since 25.88s ago] {'last_sync': datetime.datetime(2025, 10, 28, 8, 5, 50, 393629), 'provider_config': '{"billing": {"name": "disk-for-Esther-#1", "type": "volume", "service_type": "volume", "metrics": {"volume_gigabytes_universal": 26}, "total_kopecks" ... (251 characters truncated) ... ubles": 93.6}, "size_gb": 5, "created_at": "2025-10-27T08:00:00", "project_id": "ae452e6f559f4aeca2c4412dcbbfb60b", "project_name": "second project"}', 'updated_at': datetime.datetime(2025, 10, 28, 8, 5, 50, 394674), 'resources_id': 6}
2025-10-28 08:05:50,395 INFO sqlalchemy.engine.Engine: INSERT INTO resource_states (sync_snapshot_id, resource_id, provider_resource_id, resource_type, resource_name, state_action, previous_state, current_state, changes_detected, service_name, region, status, effective_cost, has_cost_change, has_status_change, has_config_change, created_at, updated_at) VALUES (%(sync_snapshot_id)s, %(resource_id)s, %(provider_resource_id)s, %(resource_type)s, %(resource_name)s, %(state_action)s, %(previous_state)s, %(current_state)s, %(changes_detected)s, %(service_name)s, %(region)s, %(status)s, %(effective_cost)s, %(has_cost_change)s, %(has_status_change)s, %(has_config_change)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:05:50,396 INFO sqlalchemy.engine.Engine: [cached since 15.25s ago] {'sync_snapshot_id': 8363, 'resource_id': 6, 'provider_resource_id': '60d3239e-2736-4c6c-9d2f-facef8b02dc4', 'resource_type': 'volume', 'resource_name': 'disk-for-Esther-#1', 'state_action': 'updated', 'previous_state': '{"id": 6, "provider_id": 2, "resource_id": "60d3239e-2736-4c6c-9d2f-facef8b02dc4", "resource_name": "disk-for-Esther-#1", "region": "ru-3", "external ... (857 characters truncated) ... id": "ae452e6f559f4aeca2c4412dcbbfb60b", "project_name": "second project"}, "created_at": "2025-10-14T07:35:57", "updated_at": "2025-10-27T13:03:01"}', 'current_state': '{"resource_id": "60d3239e-2736-4c6c-9d2f-facef8b02dc4", "resource_name": "disk-for-Esther-#1", "resource_type": "volume", "service_name": "Block Stor ... (509 characters truncated) ... b": 5, "created_at": "2025-10-27T08:00:00", "project_id": "ae452e6f559f4aeca2c4412dcbbfb60b", "project_name": "second project"}, "external_ip": null}', 'changes_detected': '{"effective_cost": {"previous": 2.88, "current": 0.0}, "provider_config": {"previous": {"billing": {"name": "disk-for-Esther-#1", "type": "volume", " ... (902 characters truncated) ... les": 93.6}, "size_gb": 5, "created_at": "2025-10-27T08:00:00", "project_id": "ae452e6f559f4aeca2c4412dcbbfb60b", "project_name": "second project"}}}', 'service_name': 'Block Storage', 'region': 'ru-3', 'status': 'RUNNING', 'effective_cost': 0.0, 'has_cost_change': 1, 'has_status_change': 0, 'has_config_change': 1, 'created_at': datetime.datetime(2025, 10, 28, 8, 5, 50, 395944), 'updated_at': datetime.datetime(2025, 10, 28, 8, 5, 50, 395948)}
2025-10-28 08:05:50,397 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:05:50,399 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:05:50,401 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:05:50,401 INFO sqlalchemy.engine.Engine: [generated in 0.00022s] {'pk_1': 6}
2025-10-28 08:05:50,403 INFO sqlalchemy.engine.Engine: UPDATE resources SET status=%(status)s, effective_cost=%(effective_cost)s, currency=%(currency)s, daily_cost=%(daily_cost)s, original_cost=%(original_cost)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:05:50,403 INFO sqlalchemy.engine.Engine: [generated in 0.00022s] {'status': 'RUNNING', 'effective_cost': 3.12, 'currency': 'RUB', 'daily_cost': 3.12, 'original_cost': 93.6, 'updated_at': datetime.datetime(2025, 10, 28, 8, 5, 50, 403299), 'resources_id': 6}
2025-10-28 08:05:50,404 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:05:50,404 INFO sqlalchemy.engine.Engine: [cached since 0.003072s ago] {'pk_1': 6}
2025-10-28 08:05:50,405 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:50,405 INFO sqlalchemy.engine.Engine: [cached since 25.86s ago] {'resource_id_1': 6, 'tag_key_1': 'cost_source', 'param_1': 1}
2025-10-28 08:05:50,406 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:05:50,407 INFO sqlalchemy.engine.Engine: [cached since 25.86s ago] {'resource_id_1': 6, 'tag_key_1': 'note', 'param_1': 1}
2025-10-28 08:05:50,408 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_status AS sync_snapshots_sync_status, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_completed_at AS sync_snapshots_sync_completed_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.total_resources_found AS sync_snapshots_total_resources_found, sync_snapshots.resources_created AS sync_snapshots_resources_created, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:05:50,408 INFO sqlalchemy.engine.Engine: [cached since 25.77s ago] {'pk_1': 8363}
2025-10-28 08:05:50,605 WARNING app.providers.selectel.service: Volume d42402b5-7f73-4a85-9b7d-2fb48a599fc6 not found at billing location: Failed to get OpenStack volumes from ru-8: 400 Client Error: Bad Request for url: https://ru-8.cloud.api.selcloud.ru/volume/v3/ae452e6f559f4aeca2c4412dcbbfb60b/volumes/detail
2025-10-28 08:05:59,441 WARNING app.providers.selectel.service: Volume d42402b5-7f73-4a85-9b7d-2fb48a599fc6 not found in any project/region combination
2025-10-28 08:05:59,442 WARNING app.providers.selectel.service: Volume not enriched from OpenStack: d42402b5-7f73-4a85-9b7d-2fb48a599fc6 (disk-for-Rhiannon-#1)
2025-10-28 08:06:01,515 INFO app.providers.selectel.service: Found volume details for d42402b5-7f73-4a85-9b7d-2fb48a599fc6: 5 GB, created: 2025-10-27T08:00:00
2025-10-28 08:06:01,518 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:06:01,519 INFO sqlalchemy.engine.Engine: [cached since 40.84s ago] {'pk_1': 2}
2025-10-28 08:06:01,521 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.provider_id = %(provider_id_1)s AND resources.resource_id = %(resource_id_1)s
2025-10-28 08:06:01,521 INFO sqlalchemy.engine.Engine: [cached since 26.38s ago] {'provider_id_1': 2, 'resource_id_1': 'd42402b5-7f73-4a85-9b7d-2fb48a599fc6'}
2025-10-28 08:06:01,524 INFO sqlalchemy.engine.Engine: UPDATE resources SET last_sync=%(last_sync)s, provider_config=%(provider_config)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:06:01,524 INFO sqlalchemy.engine.Engine: [cached since 37.01s ago] {'last_sync': datetime.datetime(2025, 10, 28, 8, 6, 1, 523446), 'provider_config': '{"billing": {"name": "disk-for-Rhiannon-#1", "type": "volume", "service_type": "volume", "metrics": {"volume_gigabytes_universal": 25}, "total_kopeck ... (253 characters truncated) ... ubles": 86.4}, "size_gb": 5, "created_at": "2025-10-27T08:00:00", "project_id": "ae452e6f559f4aeca2c4412dcbbfb60b", "project_name": "second project"}', 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 1, 524512), 'resources_id': 5}
2025-10-28 08:06:01,525 INFO sqlalchemy.engine.Engine: INSERT INTO resource_states (sync_snapshot_id, resource_id, provider_resource_id, resource_type, resource_name, state_action, previous_state, current_state, changes_detected, service_name, region, status, effective_cost, has_cost_change, has_status_change, has_config_change, created_at, updated_at) VALUES (%(sync_snapshot_id)s, %(resource_id)s, %(provider_resource_id)s, %(resource_type)s, %(resource_name)s, %(state_action)s, %(previous_state)s, %(current_state)s, %(changes_detected)s, %(service_name)s, %(region)s, %(status)s, %(effective_cost)s, %(has_cost_change)s, %(has_status_change)s, %(has_config_change)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:01,526 INFO sqlalchemy.engine.Engine: [cached since 26.38s ago] {'sync_snapshot_id': 8363, 'resource_id': 5, 'provider_resource_id': 'd42402b5-7f73-4a85-9b7d-2fb48a599fc6', 'resource_type': 'volume', 'resource_name': 'disk-for-Rhiannon-#1', 'state_action': 'updated', 'previous_state': '{"id": 5, "provider_id": 2, "resource_id": "d42402b5-7f73-4a85-9b7d-2fb48a599fc6", "resource_name": "disk-for-Rhiannon-#1", "region": "ru-8", "extern ... (861 characters truncated) ... id": "ae452e6f559f4aeca2c4412dcbbfb60b", "project_name": "second project"}, "created_at": "2025-10-14T07:35:48", "updated_at": "2025-10-27T13:03:22"}', 'current_state': '{"resource_id": "d42402b5-7f73-4a85-9b7d-2fb48a599fc6", "resource_name": "disk-for-Rhiannon-#1", "resource_type": "volume", "service_name": "Block St ... (513 characters truncated) ... b": 5, "created_at": "2025-10-27T08:00:00", "project_id": "ae452e6f559f4aeca2c4412dcbbfb60b", "project_name": "second project"}, "external_ip": null}', 'changes_detected': '{"effective_cost": {"previous": 3.12, "current": 0.0}, "provider_config": {"previous": {"billing": {"name": "disk-for-Rhiannon-#1", "type": "volume", ... (906 characters truncated) ... les": 86.4}, "size_gb": 5, "created_at": "2025-10-27T08:00:00", "project_id": "ae452e6f559f4aeca2c4412dcbbfb60b", "project_name": "second project"}}}', 'service_name': 'Block Storage', 'region': 'ru-8', 'status': 'RUNNING', 'effective_cost': 0.0, 'has_cost_change': 1, 'has_status_change': 0, 'has_config_change': 1, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 1, 525831), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 1, 525834)}
2025-10-28 08:06:01,527 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:06:01,530 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:06:01,530 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:01,530 INFO sqlalchemy.engine.Engine: [cached since 11.13s ago] {'pk_1': 5}
2025-10-28 08:06:01,532 INFO sqlalchemy.engine.Engine: UPDATE resources SET status=%(status)s, effective_cost=%(effective_cost)s, currency=%(currency)s, daily_cost=%(daily_cost)s, original_cost=%(original_cost)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:06:01,532 INFO sqlalchemy.engine.Engine: [cached since 11.13s ago] {'status': 'RUNNING', 'effective_cost': 2.88, 'currency': 'RUB', 'daily_cost': 2.88, 'original_cost': 86.4, 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 1, 532036), 'resources_id': 5}
2025-10-28 08:06:01,533 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:01,533 INFO sqlalchemy.engine.Engine: [cached since 11.13s ago] {'pk_1': 5}
2025-10-28 08:06:01,534 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:01,535 INFO sqlalchemy.engine.Engine: [cached since 36.99s ago] {'resource_id_1': 5, 'tag_key_1': 'cost_source', 'param_1': 1}
2025-10-28 08:06:01,536 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:01,536 INFO sqlalchemy.engine.Engine: [cached since 36.99s ago] {'resource_id_1': 5, 'tag_key_1': 'note', 'param_1': 1}
2025-10-28 08:06:01,537 INFO app.providers.selectel.service: Processed volumes: 0 orphans, 2 total
2025-10-28 08:06:01,537 INFO app.providers.selectel.service: PHASE 5: Processing file storage
2025-10-28 08:06:01,537 INFO app.providers.selectel.service: PHASE 6: Processing other services (K8s, DBaaS, S3, etc.)
2025-10-28 08:06:01,537 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_status AS sync_snapshots_sync_status, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_completed_at AS sync_snapshots_sync_completed_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.total_resources_found AS sync_snapshots_total_resources_found, sync_snapshots.resources_created AS sync_snapshots_resources_created, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:06:01,537 INFO sqlalchemy.engine.Engine: [cached since 36.9s ago] {'pk_1': 8363}
2025-10-28 08:06:01,539 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:06:01,539 INFO sqlalchemy.engine.Engine: [cached since 40.86s ago] {'pk_1': 2}
2025-10-28 08:06:01,540 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.provider_id = %(provider_id_1)s AND resources.resource_id = %(resource_id_1)s
2025-10-28 08:06:01,540 INFO sqlalchemy.engine.Engine: [cached since 26.4s ago] {'provider_id_1': 2, 'resource_id_1': '864e528c-7dbe-4723-b414-ca32f50e7876'}
2025-10-28 08:06:01,542 INFO sqlalchemy.engine.Engine: UPDATE resources SET last_sync=%(last_sync)s, provider_config=%(provider_config)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:06:01,542 INFO sqlalchemy.engine.Engine: [cached since 37.02s ago] {'last_sync': datetime.datetime(2025, 10, 28, 8, 6, 1, 541548), 'provider_config': '{"billing": {"name": "Renae-lb", "type": "network_load_balancer", "service_type": "unknown", "metrics": {"load_balancers_single_2_1024": 341}, "total ... (210 characters truncated) ... ": 1.7, "daily_cost_rubles": 40.8, "monthly_cost_rubles": 1224.0}, "metrics": {"load_balancers_single_2_1024": 341}, "service_type": "load_balancer"}', 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 1, 542256), 'resources_id': 7}
2025-10-28 08:06:01,543 INFO sqlalchemy.engine.Engine: INSERT INTO resource_states (sync_snapshot_id, resource_id, provider_resource_id, resource_type, resource_name, state_action, previous_state, current_state, changes_detected, service_name, region, status, effective_cost, has_cost_change, has_status_change, has_config_change, created_at, updated_at) VALUES (%(sync_snapshot_id)s, %(resource_id)s, %(provider_resource_id)s, %(resource_type)s, %(resource_name)s, %(state_action)s, %(previous_state)s, %(current_state)s, %(changes_detected)s, %(service_name)s, %(region)s, %(status)s, %(effective_cost)s, %(has_cost_change)s, %(has_status_change)s, %(has_config_change)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:01,543 INFO sqlalchemy.engine.Engine: [cached since 26.39s ago] {'sync_snapshot_id': 8363, 'resource_id': 7, 'provider_resource_id': '864e528c-7dbe-4723-b414-ca32f50e7876', 'resource_type': 'load_balancer', 'resource_name': 'Renae-lb', 'state_action': 'updated', 'previous_state': '{"id": 7, "provider_id": 2, "resource_id": "864e528c-7dbe-4723-b414-ca32f50e7876", "resource_name": "Renae-lb", "region": "unknown", "external_ip": n ... (819 characters truncated) ... ": {"load_balancers_single_2_1024": 342}, "service_type": "load_balancer"}, "created_at": "2025-10-14T07:35:57", "updated_at": "2025-10-27T13:03:22"}', 'current_state': '{"resource_id": "864e528c-7dbe-4723-b414-ca32f50e7876", "resource_name": "Renae-lb", "resource_type": "load_balancer", "service_name": "Load Balancer ... (468 characters truncated) ... bles": 40.8, "monthly_cost_rubles": 1224.0}, "metrics": {"load_balancers_single_2_1024": 341}, "service_type": "load_balancer"}, "external_ip": null}', 'changes_detected': '{"effective_cost": {"previous": 41.04, "current": 0.0}, "provider_config": {"previous": {"billing": {"name": "Renae-lb", "type": "network_load_balanc ... (823 characters truncated) ...  1.7, "daily_cost_rubles": 40.8, "monthly_cost_rubles": 1224.0}, "metrics": {"load_balancers_single_2_1024": 341}, "service_type": "load_balancer"}}}', 'service_name': 'Load Balancer', 'region': 'unknown', 'status': 'RUNNING', 'effective_cost': 0.0, 'has_cost_change': 1, 'has_status_change': 0, 'has_config_change': 1, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 1, 543314), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 1, 543316)}
2025-10-28 08:06:01,544 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:06:01,545 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:06:01,546 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:01,546 INFO sqlalchemy.engine.Engine: [cached since 26.39s ago] {'pk_1': 7}
2025-10-28 08:06:01,547 INFO sqlalchemy.engine.Engine: UPDATE resources SET effective_cost=%(effective_cost)s, currency=%(currency)s, daily_cost=%(daily_cost)s, original_cost=%(original_cost)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:06:01,547 INFO sqlalchemy.engine.Engine: [cached since 26.39s ago] {'effective_cost': 40.8, 'currency': 'RUB', 'daily_cost': 40.8, 'original_cost': 1224.0, 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 1, 547293), 'resources_id': 7}
2025-10-28 08:06:01,548 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:01,548 INFO sqlalchemy.engine.Engine: [cached since 26.39s ago] {'pk_1': 7}
2025-10-28 08:06:01,549 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:01,549 INFO sqlalchemy.engine.Engine: [cached since 37s ago] {'resource_id_1': 7, 'tag_key_1': 'cost_source', 'param_1': 1}
2025-10-28 08:06:01,550 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:01,551 INFO sqlalchemy.engine.Engine: [cached since 37s ago] {'resource_id_1': 7, 'tag_key_1': 'service_type', 'param_1': 1}
2025-10-28 08:06:01,552 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:01,552 INFO sqlalchemy.engine.Engine: [cached since 37s ago] {'resource_id_1': 7, 'tag_key_1': 'metric_load_balancers_single_2_1024', 'param_1': 1}
2025-10-28 08:06:01,553 INFO sqlalchemy.engine.Engine: UPDATE resource_tags SET tag_value=%(tag_value)s, updated_at=%(updated_at)s WHERE resource_tags.id = %(resource_tags_id)s
2025-10-28 08:06:01,553 INFO sqlalchemy.engine.Engine: [cached since 26.39s ago] {'tag_value': '341', 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 1, 553679), 'resource_tags_id': 76}
2025-10-28 08:06:01,554 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:06:01,554 INFO sqlalchemy.engine.Engine: [cached since 40.88s ago] {'pk_1': 2}
2025-10-28 08:06:01,555 INFO app.providers.selectel.service: PHASE 7: Performance statistics DISABLED (set in provider settings)
2025-10-28 08:06:01,556 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:01,556 INFO sqlalchemy.engine.Engine: [generated in 0.00014s] {'pk_1': 1286}
2025-10-28 08:06:01,557 INFO app.providers.selectel.service: PHASE 8: Finalizing sync
2025-10-28 08:06:01,558 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:01,558 INFO sqlalchemy.engine.Engine: [cached since 0.001485s ago] {'pk_1': 6}
2025-10-28 08:06:01,559 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:01,559 INFO sqlalchemy.engine.Engine: [cached since 0.00271s ago] {'pk_1': 5}
2025-10-28 08:06:01,561 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:06:01,561 INFO sqlalchemy.engine.Engine: [generated in 0.00012s] {'pk_1': 8363}
2025-10-28 08:06:01,562 INFO sqlalchemy.engine.Engine: UPDATE sync_snapshots SET sync_status=%(sync_status)s, sync_completed_at=%(sync_completed_at)s, total_resources_found=%(total_resources_found)s, resources_created=%(resources_created)s, updated_at=%(updated_at)s WHERE sync_snapshots.id = %(sync_snapshots_id)s
2025-10-28 08:06:01,562 INFO sqlalchemy.engine.Engine: [generated in 0.00012s] {'sync_status': 'success', 'sync_completed_at': datetime.datetime(2025, 10, 28, 8, 6, 1, 560317), 'total_resources_found': 4, 'resources_created': 4, 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 1, 562436), 'sync_snapshots_id': 8363}
2025-10-28 08:06:01,563 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:06:01,563 INFO sqlalchemy.engine.Engine: [cached since 0.002074s ago] {'pk_1': 8363}
2025-10-28 08:06:01,564 INFO sqlalchemy.engine.Engine: UPDATE cloud_providers SET last_sync=%(last_sync)s, updated_at=%(updated_at)s WHERE cloud_providers.id = %(cloud_providers_id)s
2025-10-28 08:06:01,564 INFO sqlalchemy.engine.Engine: [generated in 0.00011s] {'last_sync': datetime.datetime(2025, 10, 28, 8, 6, 1, 563858), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 1, 564273), 'cloud_providers_id': 2}
2025-10-28 08:06:01,564 INFO sqlalchemy.engine.Engine: UPDATE sync_snapshots SET sync_duration_seconds=%(sync_duration_seconds)s, sync_config=%(sync_config)s, updated_at=%(updated_at)s WHERE sync_snapshots.id = %(sync_snapshots_id)s
2025-10-28 08:06:01,564 INFO sqlalchemy.engine.Engine: [cached since 37.07s ago] {'sync_duration_seconds': 35, 'sync_config': '{"sync_method": "billing_first", "openstack_auth_ok": true, "orphan_volumes": 0, "zombie_resources": 0, "unified_vms": 1, "total_daily_cost": 57.6, "zombie_daily_cost": 0, "orphan_daily_cost": 0, "service_types": ["volume", "server", "load_balancer"], "billed_resource_count": 4}', 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 1, 564894), 'sync_snapshots_id': 8363}
2025-10-28 08:06:01,565 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:06:01,566 INFO app.providers.selectel.service: Sync completed: 4 resources, 57.60 ₽/day
2025-10-28 08:06:01,566 INFO app.providers.selectel.service:   - Active: 4
2025-10-28 08:06:01,566 INFO app.providers.selectel.service:   - Zombies: 0 (0.00 ₽/day)
2025-10-28 08:06:01,566 INFO app.providers.selectel.service:   - Orphan volumes: 0 (0.00 ₽/day)
2025-10-28 08:06:01,567 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:06:01,567 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_status AS sync_snapshots_sync_status, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_completed_at AS sync_snapshots_sync_completed_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.total_resources_found AS sync_snapshots_total_resources_found, sync_snapshots.resources_created AS sync_snapshots_resources_created, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:06:01,567 INFO sqlalchemy.engine.Engine: [cached since 36.93s ago] {'pk_1': 8363}
2025-10-28 08:06:01,567 INFO app.providers.plugin_system.SelectelProviderPlugin: Selectel sync completed: 4 resources, 57.60 RUB/day
2025-10-28 08:06:01,569 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.total_resources_found AS sync_snapshots_total_resources_found, sync_snapshots.resources_created AS sync_snapshots_resources_created, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:06:01,569 INFO sqlalchemy.engine.Engine: [cached since 37.08s ago] {'pk_1': 8362}
2025-10-28 08:06:01,570 INFO sqlalchemy.engine.Engine: UPDATE sync_snapshots SET sync_status=%(sync_status)s, sync_completed_at=%(sync_completed_at)s, updated_at=%(updated_at)s WHERE sync_snapshots.id = %(sync_snapshots_id)s
2025-10-28 08:06:01,570 INFO sqlalchemy.engine.Engine: [cached since 37.07s ago] {'sync_status': 'success', 'sync_completed_at': datetime.datetime(2025, 10, 28, 8, 6, 1, 569087), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 1, 570161), 'sync_snapshots_id': 8362}
2025-10-28 08:06:01,570 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.total_resources_found AS sync_snapshots_total_resources_found, sync_snapshots.resources_created AS sync_snapshots_resources_created, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:06:01,570 INFO sqlalchemy.engine.Engine: [cached since 37.08s ago] {'pk_1': 8362}
2025-10-28 08:06:01,571 INFO sqlalchemy.engine.Engine: UPDATE sync_snapshots SET sync_duration_seconds=%(sync_duration_seconds)s, total_resources_found=%(total_resources_found)s, total_monthly_cost=%(total_monthly_cost)s, sync_config=%(sync_config)s, updated_at=%(updated_at)s WHERE sync_snapshots.id = %(sync_snapshots_id)s
2025-10-28 08:06:01,571 INFO sqlalchemy.engine.Engine: [generated in 0.00011s] {'sync_duration_seconds': 36, 'total_resources_found': 4, 'total_monthly_cost': 57.6, 'sync_config': '{"sync_type": "complete_sync", "provider_type": "selectel", "connection_name": "Selectel-Cola", "sync_timestamp": "2025-10-28T08:05:24.643796", "sync ... (466 characters truncated) ...  "orphan_volumes": 0, "zombie_resources": 0, "service_types": ["volume", "server", "load_balancer"], "sync_timestamp": "2025-10-28T08:06:01.567945"}}', 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 1, 571855), 'sync_snapshots_id': 8362}
2025-10-28 08:06:01,572 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:06:01,573 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:06:01,573 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_status AS sync_snapshots_sync_status, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_completed_at AS sync_snapshots_sync_completed_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.total_resources_found AS sync_snapshots_total_resources_found, sync_snapshots.resources_created AS sync_snapshots_resources_created, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:06:01,573 INFO sqlalchemy.engine.Engine: [cached since 36.94s ago] {'pk_1': 8362}
2025-10-28 08:06:01,574 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:06:01,574 INFO sqlalchemy.engine.Engine: [cached since 36.94s ago] {'pk_1': 2}
2025-10-28 08:06:01,575 INFO sqlalchemy.engine.Engine: UPDATE cloud_providers SET last_sync=%(last_sync)s, sync_status=%(sync_status)s, sync_error=%(sync_error)s, updated_at=%(updated_at)s WHERE cloud_providers.id = %(cloud_providers_id)s
2025-10-28 08:06:01,575 INFO sqlalchemy.engine.Engine: [cached since 36.94s ago] {'last_sync': datetime.datetime(2025, 10, 28, 8, 6, 1, 574240), 'sync_status': 'success', 'sync_error': None, 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 1, 575258), 'cloud_providers_id': 2}
2025-10-28 08:06:01,575 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:06:01,576 INFO app.providers.sync_orchestrator.SyncOrchestrator: Sync completed for provider 2: Successfully synced 4 resources (57.60 ₽/day)
2025-10-28 08:06:01,577 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:06:01,577 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:06:01,577 INFO sqlalchemy.engine.Engine: [cached since 40.9s ago] {'pk_1': 2}
2025-10-28 08:06:01,578 INFO app.core.services.complete_sync_service.CompleteSyncService: Provider Selectel-Cola synced successfully: 4 resources, 57.6 RUB
2025-10-28 08:06:01,578 INFO sqlalchemy.engine.Engine: INSERT INTO provider_sync_references (complete_sync_id, provider_id, sync_snapshot_id, sync_order, sync_status, sync_duration_seconds, resources_synced, provider_cost, error_message, error_details, created_at, updated_at) VALUES (%(complete_sync_id)s, %(provider_id)s, %(sync_snapshot_id)s, %(sync_order)s, %(sync_status)s, %(sync_duration_seconds)s, %(resources_synced)s, %(provider_cost)s, %(error_message)s, %(error_details)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:01,578 INFO sqlalchemy.engine.Engine: [cached since 36.94s ago] {'complete_sync_id': 2082, 'provider_id': 2, 'sync_snapshot_id': 8362, 'sync_order': 2, 'sync_status': 'success', 'sync_duration_seconds': 0, 'resources_synced': 4, 'provider_cost': 57.6, 'error_message': None, 'error_details': None, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 1, 578730), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 1, 578732)}
2025-10-28 08:06:01,579 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:06:01,579 INFO sqlalchemy.engine.Engine: [cached since 40.9s ago] {'pk_1': 117}
2025-10-28 08:06:01,580 INFO app.core.services.complete_sync_service.CompleteSyncService: Syncing provider 117 (yc) - 3/4
2025-10-28 08:06:01,580 INFO sqlalchemy.engine.Engine: SELECT complete_syncs.user_id AS complete_syncs_user_id, complete_syncs.sync_type AS complete_syncs_sync_type, complete_syncs.sync_status AS complete_syncs_sync_status, complete_syncs.sync_started_at AS complete_syncs_sync_started_at, complete_syncs.sync_completed_at AS complete_syncs_sync_completed_at, complete_syncs.sync_duration_seconds AS complete_syncs_sync_duration_seconds, complete_syncs.total_providers_synced AS complete_syncs_total_providers_synced, complete_syncs.successful_providers AS complete_syncs_successful_providers, complete_syncs.failed_providers AS complete_syncs_failed_providers, complete_syncs.total_resources_found AS complete_syncs_total_resources_found, complete_syncs.total_monthly_cost AS complete_syncs_total_monthly_cost, complete_syncs.total_daily_cost AS complete_syncs_total_daily_cost, complete_syncs.cost_by_provider AS complete_syncs_cost_by_provider, complete_syncs.resources_by_provider AS complete_syncs_resources_by_provider, complete_syncs.error_message AS complete_syncs_error_message, complete_syncs.error_details AS complete_syncs_error_details, complete_syncs.sync_config AS complete_syncs_sync_config, complete_syncs.id AS complete_syncs_id, complete_syncs.created_at AS complete_syncs_created_at, complete_syncs.updated_at AS complete_syncs_updated_at 
FROM complete_syncs 
WHERE complete_syncs.id = %(pk_1)s
2025-10-28 08:06:01,580 INFO sqlalchemy.engine.Engine: [cached since 40.91s ago] {'pk_1': 2082}
2025-10-28 08:06:01,581 INFO app.providers.sync_orchestrator.SyncOrchestrator: Starting complete_sync sync for provider 117 (yandex)
2025-10-28 08:06:01,581 INFO sqlalchemy.engine.Engine: INSERT INTO sync_snapshots (provider_id, sync_type, sync_status, sync_started_at, sync_completed_at, sync_duration_seconds, total_resources_found, resources_created, resources_updated, resources_deleted, resources_unchanged, total_monthly_cost, total_resources_by_type, total_resources_by_status, error_message, error_details, sync_config, created_at, updated_at) VALUES (%(provider_id)s, %(sync_type)s, %(sync_status)s, %(sync_started_at)s, %(sync_completed_at)s, %(sync_duration_seconds)s, %(total_resources_found)s, %(resources_created)s, %(resources_updated)s, %(resources_deleted)s, %(resources_unchanged)s, %(total_monthly_cost)s, %(total_resources_by_type)s, %(total_resources_by_status)s, %(error_message)s, %(error_details)s, %(sync_config)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:01,581 INFO sqlalchemy.engine.Engine: [cached since 40.91s ago] {'provider_id': 117, 'sync_type': 'complete_sync', 'sync_status': 'running', 'sync_started_at': datetime.datetime(2025, 10, 28, 8, 6, 1, 581152), 'sync_completed_at': None, 'sync_duration_seconds': None, 'total_resources_found': 0, 'resources_created': 0, 'resources_updated': 0, 'resources_deleted': 0, 'resources_unchanged': 0, 'total_monthly_cost': 0.0, 'total_resources_by_type': None, 'total_resources_by_status': None, 'error_message': None, 'error_details': None, 'sync_config': '{"sync_type": "complete_sync", "provider_type": "yandex", "connection_name": "yc", "sync_timestamp": "2025-10-28T08:06:01.581170"}', 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 1, 581373), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 1, 581374)}
2025-10-28 08:06:01,581 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:06:01,582 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:06:01,582 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:06:01,583 INFO sqlalchemy.engine.Engine: [cached since 40.91s ago] {'pk_1': 117}
2025-10-28 08:06:01,583 INFO app.providers.sync_orchestrator.SyncOrchestrator: Testing connection for provider 117
2025-10-28 08:06:01,695 INFO app.providers.yandex.client: ✅ IAM token generated successfully using service account
2025-10-28 08:06:01,755 INFO app.providers.yandex.client: Found 0 clouds
2025-10-28 08:06:01,756 INFO app.providers.sync_orchestrator.SyncOrchestrator: Performing resource sync for provider 117
2025-10-28 08:06:01,757 INFO app.providers.plugin_system.YandexProviderPlugin: Starting Yandex Cloud resource sync for provider 117
2025-10-28 08:06:01,757 INFO sqlalchemy.engine.Engine: UPDATE cloud_providers SET provider_metadata=%(provider_metadata)s, updated_at=%(updated_at)s WHERE cloud_providers.id = %(cloud_providers_id)s
2025-10-28 08:06:01,757 INFO sqlalchemy.engine.Engine: [cached since 37.27s ago] {'provider_metadata': '{"last_connection_test": "2025-10-28T08:06:01.756864", "connection_status": "success", "account_info": {}}', 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 1, 757546), 'cloud_providers_id': 117}
2025-10-28 08:06:01,758 INFO sqlalchemy.engine.Engine: INSERT INTO sync_snapshots (provider_id, sync_type, sync_status, sync_started_at, sync_completed_at, sync_duration_seconds, total_resources_found, resources_created, resources_updated, resources_deleted, resources_unchanged, total_monthly_cost, total_resources_by_type, total_resources_by_status, error_message, error_details, sync_config, created_at, updated_at) VALUES (%(provider_id)s, %(sync_type)s, %(sync_status)s, %(sync_started_at)s, %(sync_completed_at)s, %(sync_duration_seconds)s, %(total_resources_found)s, %(resources_created)s, %(resources_updated)s, %(resources_deleted)s, %(resources_unchanged)s, %(total_monthly_cost)s, %(total_resources_by_type)s, %(total_resources_by_status)s, %(error_message)s, %(error_details)s, %(sync_config)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:01,758 INFO sqlalchemy.engine.Engine: [cached since 41.08s ago] {'provider_id': 117, 'sync_type': 'managed_services', 'sync_status': 'running', 'sync_started_at': datetime.datetime(2025, 10, 28, 8, 6, 1, 757233), 'sync_completed_at': None, 'sync_duration_seconds': None, 'total_resources_found': 0, 'resources_created': 0, 'resources_updated': 0, 'resources_deleted': 0, 'resources_unchanged': 0, 'total_monthly_cost': 0.0, 'total_resources_by_type': None, 'total_resources_by_status': None, 'error_message': None, 'error_details': None, 'sync_config': None, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 1, 758648), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 1, 758649)}
2025-10-28 08:06:01,759 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:06:01,760 INFO app.providers.yandex.service: PHASE 1: Discovering clouds and folders
2025-10-28 08:06:01,856 INFO app.providers.yandex.client: ✅ IAM token generated successfully using service account
2025-10-28 08:06:01,965 INFO app.providers.yandex.client: Found 0 clouds
2025-10-28 08:06:01,966 WARNING app.providers.yandex.client: No clouds accessible - attempting to discover folder from service account
2025-10-28 08:06:02,053 INFO app.providers.yandex.client: Service account belongs to folder: b1gjjjsvn78f7bm7gdss
2025-10-28 08:06:02,056 INFO app.providers.yandex.client: Using service account folder: b1gjjjsvn78f7bm7gdss
2025-10-28 08:06:02,228 INFO app.providers.yandex.client: Found 1 instances in folder b1gjjjsvn78f7bm7gdss
2025-10-28 08:06:02,333 INFO app.providers.yandex.client: Found 2 disks in folder b1gjjjsvn78f7bm7gdss
2025-10-28 08:06:02,418 INFO app.providers.yandex.client: Found 1 networks in folder b1gjjjsvn78f7bm7gdss
2025-10-28 08:06:02,501 INFO app.providers.yandex.client: Found 3 subnets in folder b1gjjjsvn78f7bm7gdss
2025-10-28 08:06:02,503 INFO app.providers.yandex.client: Found 1 instances from folder b1gjjjsvn78f7bm7gdss
2025-10-28 08:06:02,504 INFO app.providers.yandex.service: PHASE 2: Processing 1 folders
2025-10-28 08:06:02,504 INFO app.providers.yandex.service: Processing folder: default (b1gjjjsvn78f7bm7gdss)
2025-10-28 08:06:02,504 INFO app.providers.yandex.service:   Querying managed services...
2025-10-28 08:06:02,567 INFO app.providers.yandex.client: Found 0 Kubernetes clusters in folder b1gjjjsvn78f7bm7gdss
2025-10-28 08:06:02,642 INFO app.providers.yandex.client: Found 0 PostgreSQL clusters in folder b1gjjjsvn78f7bm7gdss
2025-10-28 08:06:02,719 INFO app.providers.yandex.client: Found 0 MySQL clusters in folder b1gjjjsvn78f7bm7gdss
2025-10-28 08:06:02,797 INFO app.providers.yandex.client: Found 0 MongoDB clusters in folder b1gjjjsvn78f7bm7gdss
2025-10-28 08:06:02,897 INFO app.providers.yandex.client: Found 0 ClickHouse clusters in folder b1gjjjsvn78f7bm7gdss
2025-10-28 08:06:03,055 INFO app.providers.yandex.client: Found 0 Redis clusters in folder b1gjjjsvn78f7bm7gdss
2025-10-28 08:06:03,058 INFO app.providers.yandex.client: Found 0 managed service clusters in folder b1gjjjsvn78f7bm7gdss
2025-10-28 08:06:03,058 INFO app.providers.yandex.service:   Processing compute resources (filtering managed service nodes)...
2025-10-28 08:06:03,060 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:06:03,060 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_status AS sync_snapshots_sync_status, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_completed_at AS sync_snapshots_sync_completed_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.total_resources_found AS sync_snapshots_total_resources_found, sync_snapshots.resources_created AS sync_snapshots_resources_created, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:06:03,060 INFO sqlalchemy.engine.Engine: [cached since 38.42s ago] {'pk_1': 8365}
2025-10-28 08:06:03,063 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:06:03,063 INFO sqlalchemy.engine.Engine: [cached since 42.39s ago] {'pk_1': 117}
2025-10-28 08:06:03,066 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.provider_id = %(provider_id_1)s AND resources.resource_id = %(resource_id_1)s AND resources.resource_type = %(resource_type_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:03,066 INFO sqlalchemy.engine.Engine: [generated in 0.00035s] {'provider_id_1': 117, 'resource_id_1': 'fv4q6scfocfakj434b3t', 'resource_type_1': 'server', 'param_1': 1}
2025-10-28 08:06:03,070 INFO sqlalchemy.engine.Engine: UPDATE resources SET last_sync=%(last_sync)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:06:03,070 INFO sqlalchemy.engine.Engine: [generated in 0.00027s] {'last_sync': datetime.datetime(2025, 10, 28, 8, 6, 3, 69197), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 3, 70760), 'resources_id': 1288}
2025-10-28 08:06:03,072 INFO sqlalchemy.engine.Engine: INSERT INTO resource_states (sync_snapshot_id, resource_id, provider_resource_id, resource_type, resource_name, state_action, previous_state, current_state, changes_detected, service_name, region, status, effective_cost, has_cost_change, has_status_change, has_config_change, created_at, updated_at) VALUES (%(sync_snapshot_id)s, %(resource_id)s, %(provider_resource_id)s, %(resource_type)s, %(resource_name)s, %(state_action)s, %(previous_state)s, %(current_state)s, %(changes_detected)s, %(service_name)s, %(region)s, %(status)s, %(effective_cost)s, %(has_cost_change)s, %(has_status_change)s, %(has_config_change)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:03,072 INFO sqlalchemy.engine.Engine: [cached since 27.92s ago] {'sync_snapshot_id': 8365, 'resource_id': 1288, 'provider_resource_id': 'fv4q6scfocfakj434b3t', 'resource_type': 'server', 'resource_name': 'goodvm', 'state_action': 'updated', 'previous_state': '{"id": 1288, "provider_id": 117, "resource_id": "fv4q6scfocfakj434b3t", "resource_name": "goodvm", "region": "ru-central1-d", "external_ip": "158.160 ... (2157 characters truncated) ... 25-10-25T15:15:57Z", "platform_id": "standard-v3", "estimated_cost": true}, "created_at": "2025-10-25T19:53:51", "updated_at": "2025-10-28T08:04:32"}', 'current_state': '{"resource_id": "fv4q6scfocfakj434b3t", "resource_name": "goodvm", "resource_type": "server", "service_name": "Compute Cloud", "region": "ru-central1 ... (1803 characters truncated) ... l8b569sf74reuumftkp"}], "created_at": "2025-10-25T15:15:57Z", "platform_id": "standard-v3", "estimated_cost": true}, "external_ip": "158.160.178.82"}', 'changes_detected': '{"effective_cost": {"previous": 74.15, "current": 0.0}}', 'service_name': 'Compute Cloud', 'region': 'ru-central1-d', 'status': 'RUNNING', 'effective_cost': 0.0, 'has_cost_change': 1, 'has_status_change': 0, 'has_config_change': 0, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 3, 72062), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 3, 72065)}
2025-10-28 08:06:03,073 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:06:03,076 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:06:03,077 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:03,078 INFO sqlalchemy.engine.Engine: [generated in 0.00019s] {'pk_1': 1288}
2025-10-28 08:06:03,079 INFO sqlalchemy.engine.Engine: UPDATE resources SET external_ip=%(external_ip)s, effective_cost=%(effective_cost)s, currency=%(currency)s, daily_cost=%(daily_cost)s, original_cost=%(original_cost)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:06:03,080 INFO sqlalchemy.engine.Engine: [generated in 0.00023s] {'external_ip': '158.160.178.82', 'effective_cost': 74.15, 'currency': 'RUB', 'daily_cost': 74.15, 'original_cost': 2224.5, 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 3, 79797), 'resources_id': 1288}
2025-10-28 08:06:03,080 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:03,080 INFO sqlalchemy.engine.Engine: [cached since 0.003005s ago] {'pk_1': 1288}
2025-10-28 08:06:03,082 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:03,082 INFO sqlalchemy.engine.Engine: [cached since 38.53s ago] {'resource_id_1': 1288, 'tag_key_1': 'folder_id', 'param_1': 1}
2025-10-28 08:06:03,084 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:03,084 INFO sqlalchemy.engine.Engine: [cached since 38.54s ago] {'resource_id_1': 1288, 'tag_key_1': 'folder_name', 'param_1': 1}
2025-10-28 08:06:03,085 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:03,085 INFO sqlalchemy.engine.Engine: [cached since 38.54s ago] {'resource_id_1': 1288, 'tag_key_1': 'cloud_id', 'param_1': 1}
2025-10-28 08:06:03,086 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:03,086 INFO sqlalchemy.engine.Engine: [cached since 38.54s ago] {'resource_id_1': 1288, 'tag_key_1': 'cost_source', 'param_1': 1}
2025-10-28 08:06:03,087 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:03,087 INFO sqlalchemy.engine.Engine: [cached since 38.54s ago] {'resource_id_1': 1288, 'tag_key_1': 'platform_id', 'param_1': 1}
2025-10-28 08:06:03,088 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_status AS sync_snapshots_sync_status, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_completed_at AS sync_snapshots_sync_completed_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.total_resources_found AS sync_snapshots_total_resources_found, sync_snapshots.resources_created AS sync_snapshots_resources_created, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:06:03,088 INFO sqlalchemy.engine.Engine: [cached since 38.45s ago] {'pk_1': 8365}
2025-10-28 08:06:03,090 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:06:03,090 INFO sqlalchemy.engine.Engine: [cached since 42.42s ago] {'pk_1': 117}
2025-10-28 08:06:03,091 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.provider_id = %(provider_id_1)s AND resources.resource_id = %(resource_id_1)s AND resources.resource_type = %(resource_type_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:03,091 INFO sqlalchemy.engine.Engine: [cached since 0.02491s ago] {'provider_id_1': 117, 'resource_id_1': 'fv44kusm1jl8uqif22iv', 'resource_type_1': 'volume', 'param_1': 1}
2025-10-28 08:06:03,093 INFO sqlalchemy.engine.Engine: UPDATE resources SET last_sync=%(last_sync)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:06:03,093 INFO sqlalchemy.engine.Engine: [cached since 0.02313s ago] {'last_sync': datetime.datetime(2025, 10, 28, 8, 6, 3, 92820), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 3, 93634), 'resources_id': 1289}
2025-10-28 08:06:03,094 INFO sqlalchemy.engine.Engine: INSERT INTO resource_states (sync_snapshot_id, resource_id, provider_resource_id, resource_type, resource_name, state_action, previous_state, current_state, changes_detected, service_name, region, status, effective_cost, has_cost_change, has_status_change, has_config_change, created_at, updated_at) VALUES (%(sync_snapshot_id)s, %(resource_id)s, %(provider_resource_id)s, %(resource_type)s, %(resource_name)s, %(state_action)s, %(previous_state)s, %(current_state)s, %(changes_detected)s, %(service_name)s, %(region)s, %(status)s, %(effective_cost)s, %(has_cost_change)s, %(has_status_change)s, %(has_config_change)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:03,094 INFO sqlalchemy.engine.Engine: [cached since 27.95s ago] {'sync_snapshot_id': 8365, 'resource_id': 1289, 'provider_resource_id': 'fv44kusm1jl8uqif22iv', 'resource_type': 'volume', 'resource_name': 'justdisk', 'state_action': 'updated', 'previous_state': '{"id": 1289, "provider_id": 117, "resource_id": "fv44kusm1jl8uqif22iv", "resource_name": "justdisk", "region": "ru-central1-d", "external_ip": null,  ... (906 characters truncated) ... t": "2025-10-25T15:54:47Z", "is_standalone": true, "estimated_cost": true}, "created_at": "2025-10-25T19:53:51", "updated_at": "2025-10-28T08:04:32"}', 'current_state': '{"resource_id": "fv44kusm1jl8uqif22iv", "resource_name": "justdisk", "resource_type": "volume", "service_name": "Block Storage", "region": "ru-centra ... (553 characters truncated) ... ize_gb": 20.0, "disk_type": "network-ssd", "created_at": "2025-10-25T15:54:47Z", "is_standalone": true, "estimated_cost": true}, "external_ip": null}', 'changes_detected': '{"effective_cost": {"previous": 5.99, "current": 0.0}}', 'service_name': 'Block Storage', 'region': 'ru-central1-d', 'status': 'RUNNING', 'effective_cost': 0.0, 'has_cost_change': 1, 'has_status_change': 0, 'has_config_change': 0, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 3, 94736), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 3, 94739)}
2025-10-28 08:06:03,095 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:06:03,097 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:06:03,098 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:03,098 INFO sqlalchemy.engine.Engine: [cached since 12.7s ago] {'pk_1': 1289}
2025-10-28 08:06:03,100 INFO sqlalchemy.engine.Engine: UPDATE resources SET status=%(status)s, effective_cost=%(effective_cost)s, currency=%(currency)s, daily_cost=%(daily_cost)s, original_cost=%(original_cost)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:06:03,100 INFO sqlalchemy.engine.Engine: [cached since 12.7s ago] {'status': 'RUNNING', 'effective_cost': 5.99, 'currency': 'RUB', 'daily_cost': 5.99, 'original_cost': 179.70000000000002, 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 3, 100691), 'resources_id': 1289}
2025-10-28 08:06:03,101 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:03,101 INFO sqlalchemy.engine.Engine: [cached since 12.7s ago] {'pk_1': 1289}
2025-10-28 08:06:03,103 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:03,103 INFO sqlalchemy.engine.Engine: [cached since 38.56s ago] {'resource_id_1': 1289, 'tag_key_1': 'folder_id', 'param_1': 1}
2025-10-28 08:06:03,104 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:03,104 INFO sqlalchemy.engine.Engine: [cached since 38.56s ago] {'resource_id_1': 1289, 'tag_key_1': 'folder_name', 'param_1': 1}
2025-10-28 08:06:03,105 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:03,105 INFO sqlalchemy.engine.Engine: [cached since 38.56s ago] {'resource_id_1': 1289, 'tag_key_1': 'cloud_id', 'param_1': 1}
2025-10-28 08:06:03,106 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:03,106 INFO sqlalchemy.engine.Engine: [cached since 38.56s ago] {'resource_id_1': 1289, 'tag_key_1': 'cost_source', 'param_1': 1}
2025-10-28 08:06:03,108 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:03,108 INFO sqlalchemy.engine.Engine: [cached since 38.56s ago] {'resource_id_1': 1289, 'tag_key_1': 'disk_type', 'param_1': 1}
2025-10-28 08:06:03,109 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:03,109 INFO sqlalchemy.engine.Engine: [cached since 38.56s ago] {'resource_id_1': 1289, 'tag_key_1': 'is_orphan', 'param_1': 1}
2025-10-28 08:06:03,110 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:06:03,110 INFO sqlalchemy.engine.Engine: [cached since 1.55s ago] {'pk_1': 8365}
2025-10-28 08:06:03,111 INFO sqlalchemy.engine.Engine: UPDATE sync_snapshots SET sync_status=%(sync_status)s, sync_completed_at=%(sync_completed_at)s, total_resources_found=%(total_resources_found)s, resources_created=%(resources_created)s, updated_at=%(updated_at)s WHERE sync_snapshots.id = %(sync_snapshots_id)s
2025-10-28 08:06:03,111 INFO sqlalchemy.engine.Engine: [cached since 1.55s ago] {'sync_status': 'success', 'sync_completed_at': datetime.datetime(2025, 10, 28, 8, 6, 3, 110300), 'total_resources_found': 2, 'resources_created': 2, 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 3, 111788), 'sync_snapshots_id': 8365}
2025-10-28 08:06:03,112 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:06:03,113 INFO sqlalchemy.engine.Engine: [cached since 1.552s ago] {'pk_1': 8365}
2025-10-28 08:06:03,114 INFO sqlalchemy.engine.Engine: UPDATE sync_snapshots SET sync_duration_seconds=%(sync_duration_seconds)s, sync_config=%(sync_config)s, updated_at=%(updated_at)s WHERE sync_snapshots.id = %(sync_snapshots_id)s
2025-10-28 08:06:03,114 INFO sqlalchemy.engine.Engine: [cached since 38.61s ago] {'sync_duration_seconds': 1, 'sync_config': '{"sync_method": "managed_services", "clouds_discovered": 0, "folders_discovered": 1, "total_instances": 1, "total_disks": 1, "total_managed_clusters": 0, "total_estimated_daily_cost": 80.14}', 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 3, 114057), 'sync_snapshots_id': 8365}
2025-10-28 08:06:03,114 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:06:03,114 INFO sqlalchemy.engine.Engine: [cached since 42.44s ago] {'pk_1': 117}
2025-10-28 08:06:03,115 INFO app.providers.yandex.service: PHASE 3: Performance statistics ENABLED
2025-10-28 08:06:03,116 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:03,116 INFO sqlalchemy.engine.Engine: [cached since 1.559s ago] {'pk_1': 1288}
2025-10-28 08:06:03,117 INFO app.providers.yandex.service: Collecting CPU statistics for 1 standalone VMs...
2025-10-28 08:06:03,599 INFO app.providers.yandex.client: ✅ CPU statistics for fv4q6scfocfakj434b3t: avg=0.12%, max=0.94%, 63 points
2025-10-28 08:06:03,603 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:03,604 INFO sqlalchemy.engine.Engine: [cached since 39.06s ago] {'resource_id_1': 1288, 'tag_key_1': 'cpu_avg_usage', 'param_1': 1}
2025-10-28 08:06:03,606 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:03,606 INFO sqlalchemy.engine.Engine: [cached since 39.06s ago] {'resource_id_1': 1288, 'tag_key_1': 'cpu_max_usage', 'param_1': 1}
2025-10-28 08:06:03,608 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:03,609 INFO sqlalchemy.engine.Engine: [cached since 39.06s ago] {'resource_id_1': 1288, 'tag_key_1': 'cpu_min_usage', 'param_1': 1}
2025-10-28 08:06:03,610 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:03,610 INFO sqlalchemy.engine.Engine: [cached since 39.06s ago] {'resource_id_1': 1288, 'tag_key_1': 'cpu_performance_tier', 'param_1': 1}
2025-10-28 08:06:03,611 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:03,612 INFO sqlalchemy.engine.Engine: [cached since 39.06s ago] {'resource_id_1': 1288, 'tag_key_1': 'cpu_raw_data', 'param_1': 1}
2025-10-28 08:06:03,612 INFO app.providers.yandex.service:    ✅ goodvm: CPU avg=0.12%
2025-10-28 08:06:03,613 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:06:03,615 INFO app.providers.yandex.service: Performance statistics collection completed
2025-10-28 08:06:03,615 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:06:03,616 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:06:03,616 INFO sqlalchemy.engine.Engine: [cached since 38.98s ago] {'pk_1': 117}
2025-10-28 08:06:03,618 INFO sqlalchemy.engine.Engine: UPDATE cloud_providers SET last_sync=%(last_sync)s, sync_status=%(sync_status)s, sync_error=%(sync_error)s, updated_at=%(updated_at)s WHERE cloud_providers.id = %(cloud_providers_id)s
2025-10-28 08:06:03,618 INFO sqlalchemy.engine.Engine: [cached since 38.98s ago] {'last_sync': datetime.datetime(2025, 10, 28, 8, 6, 3, 615372), 'sync_status': 'success', 'sync_error': None, 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 3, 617981), 'cloud_providers_id': 117}
2025-10-28 08:06:03,619 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:06:03,620 INFO app.providers.yandex.service: Sync completed: 2 resources (0 clusters, 1 VMs, 1 disks), estimated 80.14 ₽/day
2025-10-28 08:06:03,620 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:06:03,620 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_status AS sync_snapshots_sync_status, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_completed_at AS sync_snapshots_sync_completed_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.total_resources_found AS sync_snapshots_total_resources_found, sync_snapshots.resources_created AS sync_snapshots_resources_created, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:06:03,620 INFO sqlalchemy.engine.Engine: [cached since 38.98s ago] {'pk_1': 8365}
2025-10-28 08:06:03,621 INFO app.providers.plugin_system.YandexProviderPlugin: Yandex Cloud sync completed: 2 resources, 80.14 RUB/day
2025-10-28 08:06:03,622 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.total_resources_found AS sync_snapshots_total_resources_found, sync_snapshots.resources_created AS sync_snapshots_resources_created, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:06:03,622 INFO sqlalchemy.engine.Engine: [cached since 39.13s ago] {'pk_1': 8364}
2025-10-28 08:06:03,623 INFO sqlalchemy.engine.Engine: UPDATE sync_snapshots SET sync_status=%(sync_status)s, sync_completed_at=%(sync_completed_at)s, updated_at=%(updated_at)s WHERE sync_snapshots.id = %(sync_snapshots_id)s
2025-10-28 08:06:03,623 INFO sqlalchemy.engine.Engine: [cached since 39.13s ago] {'sync_status': 'success', 'sync_completed_at': datetime.datetime(2025, 10, 28, 8, 6, 3, 622157), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 3, 623780), 'sync_snapshots_id': 8364}
2025-10-28 08:06:03,624 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.total_resources_found AS sync_snapshots_total_resources_found, sync_snapshots.resources_created AS sync_snapshots_resources_created, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:06:03,625 INFO sqlalchemy.engine.Engine: [cached since 39.13s ago] {'pk_1': 8364}
2025-10-28 08:06:03,626 INFO sqlalchemy.engine.Engine: UPDATE sync_snapshots SET sync_duration_seconds=%(sync_duration_seconds)s, total_resources_found=%(total_resources_found)s, total_monthly_cost=%(total_monthly_cost)s, sync_config=%(sync_config)s, updated_at=%(updated_at)s WHERE sync_snapshots.id = %(sync_snapshots_id)s
2025-10-28 08:06:03,626 INFO sqlalchemy.engine.Engine: [cached since 2.055s ago] {'sync_duration_seconds': 1, 'total_resources_found': 2, 'total_monthly_cost': 80.14, 'sync_config': '{"sync_type": "complete_sync", "provider_type": "yandex", "connection_name": "yc", "sync_timestamp": "2025-10-28T08:06:01.581170", "sync_success": tr ... (396 characters truncated) ... ay"}, "sync_snapshot_id": 8365, "total_instances": 1, "total_disks": 1, "cpu_stats_collected": true, "sync_timestamp": "2025-10-28T08:06:03.621919"}}', 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 3, 626596), 'sync_snapshots_id': 8364}
2025-10-28 08:06:03,627 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:06:03,629 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:06:03,629 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_status AS sync_snapshots_sync_status, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_completed_at AS sync_snapshots_sync_completed_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.total_resources_found AS sync_snapshots_total_resources_found, sync_snapshots.resources_created AS sync_snapshots_resources_created, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:06:03,629 INFO sqlalchemy.engine.Engine: [cached since 38.99s ago] {'pk_1': 8364}
2025-10-28 08:06:03,631 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:06:03,631 INFO sqlalchemy.engine.Engine: [cached since 38.99s ago] {'pk_1': 117}
2025-10-28 08:06:03,632 INFO sqlalchemy.engine.Engine: UPDATE cloud_providers SET last_sync=%(last_sync)s, sync_status=%(sync_status)s, sync_error=%(sync_error)s, updated_at=%(updated_at)s WHERE cloud_providers.id = %(cloud_providers_id)s
2025-10-28 08:06:03,632 INFO sqlalchemy.engine.Engine: [cached since 38.99s ago] {'last_sync': datetime.datetime(2025, 10, 28, 8, 6, 3, 630746), 'sync_status': 'success', 'sync_error': None, 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 3, 632321), 'cloud_providers_id': 117}
2025-10-28 08:06:03,633 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:06:03,633 INFO app.providers.sync_orchestrator.SyncOrchestrator: Sync completed for provider 117: Successfully synced 2 resources (0 clusters, 1 VMs, 1 disks) - estimated cost: 80.14 ₽/day
2025-10-28 08:06:03,634 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:06:03,634 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:06:03,634 INFO sqlalchemy.engine.Engine: [cached since 42.96s ago] {'pk_1': 117}
2025-10-28 08:06:03,635 INFO app.core.services.complete_sync_service.CompleteSyncService: Provider yc synced successfully: 2 resources, 80.14 RUB
2025-10-28 08:06:03,636 INFO sqlalchemy.engine.Engine: INSERT INTO provider_sync_references (complete_sync_id, provider_id, sync_snapshot_id, sync_order, sync_status, sync_duration_seconds, resources_synced, provider_cost, error_message, error_details, created_at, updated_at) VALUES (%(complete_sync_id)s, %(provider_id)s, %(sync_snapshot_id)s, %(sync_order)s, %(sync_status)s, %(sync_duration_seconds)s, %(resources_synced)s, %(provider_cost)s, %(error_message)s, %(error_details)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:03,636 INFO sqlalchemy.engine.Engine: [cached since 39s ago] {'complete_sync_id': 2082, 'provider_id': 117, 'sync_snapshot_id': 8364, 'sync_order': 3, 'sync_status': 'success', 'sync_duration_seconds': 0, 'resources_synced': 2, 'provider_cost': 80.14, 'error_message': None, 'error_details': None, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 3, 636468), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 3, 636471)}
2025-10-28 08:06:03,637 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:06:03,637 INFO sqlalchemy.engine.Engine: [cached since 42.96s ago] {'pk_1': 150}
2025-10-28 08:06:03,638 INFO app.core.services.complete_sync_service.CompleteSyncService: Syncing provider 150 (yc-it) - 4/4
2025-10-28 08:06:03,638 INFO sqlalchemy.engine.Engine: SELECT complete_syncs.user_id AS complete_syncs_user_id, complete_syncs.sync_type AS complete_syncs_sync_type, complete_syncs.sync_status AS complete_syncs_sync_status, complete_syncs.sync_started_at AS complete_syncs_sync_started_at, complete_syncs.sync_completed_at AS complete_syncs_sync_completed_at, complete_syncs.sync_duration_seconds AS complete_syncs_sync_duration_seconds, complete_syncs.total_providers_synced AS complete_syncs_total_providers_synced, complete_syncs.successful_providers AS complete_syncs_successful_providers, complete_syncs.failed_providers AS complete_syncs_failed_providers, complete_syncs.total_resources_found AS complete_syncs_total_resources_found, complete_syncs.total_monthly_cost AS complete_syncs_total_monthly_cost, complete_syncs.total_daily_cost AS complete_syncs_total_daily_cost, complete_syncs.cost_by_provider AS complete_syncs_cost_by_provider, complete_syncs.resources_by_provider AS complete_syncs_resources_by_provider, complete_syncs.error_message AS complete_syncs_error_message, complete_syncs.error_details AS complete_syncs_error_details, complete_syncs.sync_config AS complete_syncs_sync_config, complete_syncs.id AS complete_syncs_id, complete_syncs.created_at AS complete_syncs_created_at, complete_syncs.updated_at AS complete_syncs_updated_at 
FROM complete_syncs 
WHERE complete_syncs.id = %(pk_1)s
2025-10-28 08:06:03,638 INFO sqlalchemy.engine.Engine: [cached since 42.97s ago] {'pk_1': 2082}
2025-10-28 08:06:03,639 INFO app.providers.sync_orchestrator.SyncOrchestrator: Starting complete_sync sync for provider 150 (yandex)
2025-10-28 08:06:03,640 INFO sqlalchemy.engine.Engine: INSERT INTO sync_snapshots (provider_id, sync_type, sync_status, sync_started_at, sync_completed_at, sync_duration_seconds, total_resources_found, resources_created, resources_updated, resources_deleted, resources_unchanged, total_monthly_cost, total_resources_by_type, total_resources_by_status, error_message, error_details, sync_config, created_at, updated_at) VALUES (%(provider_id)s, %(sync_type)s, %(sync_status)s, %(sync_started_at)s, %(sync_completed_at)s, %(sync_duration_seconds)s, %(total_resources_found)s, %(resources_created)s, %(resources_updated)s, %(resources_deleted)s, %(resources_unchanged)s, %(total_monthly_cost)s, %(total_resources_by_type)s, %(total_resources_by_status)s, %(error_message)s, %(error_details)s, %(sync_config)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:03,640 INFO sqlalchemy.engine.Engine: [cached since 42.96s ago] {'provider_id': 150, 'sync_type': 'complete_sync', 'sync_status': 'running', 'sync_started_at': datetime.datetime(2025, 10, 28, 8, 6, 3, 640040), 'sync_completed_at': None, 'sync_duration_seconds': None, 'total_resources_found': 0, 'resources_created': 0, 'resources_updated': 0, 'resources_deleted': 0, 'resources_unchanged': 0, 'total_monthly_cost': 0.0, 'total_resources_by_type': None, 'total_resources_by_status': None, 'error_message': None, 'error_details': None, 'sync_config': '{"sync_type": "complete_sync", "provider_type": "yandex", "connection_name": "yc-it", "sync_timestamp": "2025-10-28T08:06:03.640069"}', 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 3, 640398), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 3, 640400)}
2025-10-28 08:06:03,641 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:06:03,642 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:06:03,643 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:06:03,643 INFO sqlalchemy.engine.Engine: [cached since 42.97s ago] {'pk_1': 150}
2025-10-28 08:06:03,643 INFO app.providers.sync_orchestrator.SyncOrchestrator: Testing connection for provider 150
2025-10-28 08:06:03,750 INFO app.providers.yandex.client: ✅ IAM token generated successfully using service account
2025-10-28 08:06:03,831 INFO app.providers.yandex.client: Found 0 clouds
2025-10-28 08:06:03,832 INFO app.providers.sync_orchestrator.SyncOrchestrator: Performing resource sync for provider 150
2025-10-28 08:06:03,832 INFO app.providers.plugin_system.YandexProviderPlugin: Starting Yandex Cloud resource sync for provider 150
2025-10-28 08:06:03,833 INFO sqlalchemy.engine.Engine: UPDATE cloud_providers SET provider_metadata=%(provider_metadata)s, updated_at=%(updated_at)s WHERE cloud_providers.id = %(cloud_providers_id)s
2025-10-28 08:06:03,833 INFO sqlalchemy.engine.Engine: [cached since 39.35s ago] {'provider_metadata': '{"last_connection_test": "2025-10-28T08:06:03.832624", "connection_status": "success", "account_info": {}}', 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 3, 833674), 'cloud_providers_id': 150}
2025-10-28 08:06:03,835 INFO sqlalchemy.engine.Engine: INSERT INTO sync_snapshots (provider_id, sync_type, sync_status, sync_started_at, sync_completed_at, sync_duration_seconds, total_resources_found, resources_created, resources_updated, resources_deleted, resources_unchanged, total_monthly_cost, total_resources_by_type, total_resources_by_status, error_message, error_details, sync_config, created_at, updated_at) VALUES (%(provider_id)s, %(sync_type)s, %(sync_status)s, %(sync_started_at)s, %(sync_completed_at)s, %(sync_duration_seconds)s, %(total_resources_found)s, %(resources_created)s, %(resources_updated)s, %(resources_deleted)s, %(resources_unchanged)s, %(total_monthly_cost)s, %(total_resources_by_type)s, %(total_resources_by_status)s, %(error_message)s, %(error_details)s, %(sync_config)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:03,835 INFO sqlalchemy.engine.Engine: [cached since 43.16s ago] {'provider_id': 150, 'sync_type': 'managed_services', 'sync_status': 'running', 'sync_started_at': datetime.datetime(2025, 10, 28, 8, 6, 3, 833146), 'sync_completed_at': None, 'sync_duration_seconds': None, 'total_resources_found': 0, 'resources_created': 0, 'resources_updated': 0, 'resources_deleted': 0, 'resources_unchanged': 0, 'total_monthly_cost': 0.0, 'total_resources_by_type': None, 'total_resources_by_status': None, 'error_message': None, 'error_details': None, 'sync_config': None, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 3, 835179), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 3, 835180)}
2025-10-28 08:06:03,836 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:06:03,838 INFO app.providers.yandex.service: PHASE 1: Discovering clouds and folders
2025-10-28 08:06:03,948 INFO app.providers.yandex.client: ✅ IAM token generated successfully using service account
2025-10-28 08:06:04,004 INFO app.providers.yandex.client: Found 0 clouds
2025-10-28 08:06:04,005 WARNING app.providers.yandex.client: No clouds accessible - attempting to discover folder from service account
2025-10-28 08:06:04,179 INFO app.providers.yandex.client: Service account belongs to folder: b1gkosunk7kknbq1tubv
2025-10-28 08:06:04,182 INFO app.providers.yandex.client: Using service account folder: b1gkosunk7kknbq1tubv
2025-10-28 08:06:04,462 INFO app.providers.yandex.client: Found 17 instances in folder b1gkosunk7kknbq1tubv
2025-10-28 08:06:04,598 INFO app.providers.yandex.client: Found 29 disks in folder b1gkosunk7kknbq1tubv
2025-10-28 08:06:04,703 INFO app.providers.yandex.client: Found 3 networks in folder b1gkosunk7kknbq1tubv
2025-10-28 08:06:04,836 INFO app.providers.yandex.client: Found 7 subnets in folder b1gkosunk7kknbq1tubv
2025-10-28 08:06:04,839 INFO app.providers.yandex.client: Found 17 instances from folder b1gkosunk7kknbq1tubv
2025-10-28 08:06:04,839 INFO app.providers.yandex.service: PHASE 2: Processing 1 folders
2025-10-28 08:06:04,839 INFO app.providers.yandex.service: Processing folder: itlteam (b1gkosunk7kknbq1tubv)
2025-10-28 08:06:04,839 INFO app.providers.yandex.service:   Querying managed services...
2025-10-28 08:06:04,905 INFO app.providers.yandex.client: Found 1 Kubernetes clusters in folder b1gkosunk7kknbq1tubv
2025-10-28 08:06:05,084 INFO app.providers.yandex.client: Found 2 PostgreSQL clusters in folder b1gkosunk7kknbq1tubv
2025-10-28 08:06:05,525 INFO app.providers.yandex.client: Found 0 MySQL clusters in folder b1gkosunk7kknbq1tubv
2025-10-28 08:06:05,638 INFO app.providers.yandex.client: Found 0 MongoDB clusters in folder b1gkosunk7kknbq1tubv
2025-10-28 08:06:05,751 INFO app.providers.yandex.client: Found 0 ClickHouse clusters in folder b1gkosunk7kknbq1tubv
2025-10-28 08:06:05,860 INFO app.providers.yandex.client: Found 0 Redis clusters in folder b1gkosunk7kknbq1tubv
2025-10-28 08:06:05,863 INFO app.providers.yandex.client: Found 3 managed service clusters in folder b1gkosunk7kknbq1tubv
2025-10-28 08:06:05,865 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:06:05,865 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_status AS sync_snapshots_sync_status, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_completed_at AS sync_snapshots_sync_completed_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.total_resources_found AS sync_snapshots_total_resources_found, sync_snapshots.resources_created AS sync_snapshots_resources_created, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:06:05,865 INFO sqlalchemy.engine.Engine: [cached since 41.23s ago] {'pk_1': 8367}
2025-10-28 08:06:05,970 INFO app.providers.yandex.client: Found 3 node groups for cluster cat295ugd7fmpp93v071
2025-10-28 08:06:05,972 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:06:05,972 INFO sqlalchemy.engine.Engine: [cached since 45.3s ago] {'pk_1': 150}
2025-10-28 08:06:05,974 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.provider_id = %(provider_id_1)s AND resources.resource_id = %(resource_id_1)s AND resources.resource_type = %(resource_type_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:05,974 INFO sqlalchemy.engine.Engine: [cached since 2.908s ago] {'provider_id_1': 150, 'resource_id_1': 'cat295ugd7fmpp93v071', 'resource_type_1': 'kubernetes-cluster', 'param_1': 1}
2025-10-28 08:06:05,977 INFO sqlalchemy.engine.Engine: UPDATE resources SET last_sync=%(last_sync)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:06:05,977 INFO sqlalchemy.engine.Engine: [cached since 2.907s ago] {'last_sync': datetime.datetime(2025, 10, 28, 8, 6, 5, 976188), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 5, 977324), 'resources_id': 1674}
2025-10-28 08:06:05,978 INFO sqlalchemy.engine.Engine: INSERT INTO resource_states (sync_snapshot_id, resource_id, provider_resource_id, resource_type, resource_name, state_action, previous_state, current_state, changes_detected, service_name, region, status, effective_cost, has_cost_change, has_status_change, has_config_change, created_at, updated_at) VALUES (%(sync_snapshot_id)s, %(resource_id)s, %(provider_resource_id)s, %(resource_type)s, %(resource_name)s, %(state_action)s, %(previous_state)s, %(current_state)s, %(changes_detected)s, %(service_name)s, %(region)s, %(status)s, %(effective_cost)s, %(has_cost_change)s, %(has_status_change)s, %(has_config_change)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:05,978 INFO sqlalchemy.engine.Engine: [cached since 30.83s ago] {'sync_snapshot_id': 8367, 'resource_id': 1674, 'provider_resource_id': 'cat295ugd7fmpp93v071', 'resource_type': 'kubernetes-cluster', 'resource_name': 'itlkube', 'state_action': 'updated', 'previous_state': '{"id": 1674, "provider_id": 150, "resource_id": "cat295ugd7fmpp93v071", "resource_name": "itlkube", "region": "ru-central1-b", "external_ip": null, " ... (9189 characters truncated) ... ": "1.30"}], "created_at": "2022-03-16T15:46:08Z", "estimated_cost": true}, "created_at": "2025-10-27T21:58:14", "updated_at": "2025-10-27T22:43:36"}', 'current_state': '{"resource_id": "cat295ugd7fmpp93v071", "resource_name": "itlkube", "resource_type": "kubernetes-cluster", "service_name": "Managed Kubernetes", "reg ... (8833 characters truncated) ... nstanceGroupId": "cl192dme7q4gg4ne73d7", "nodeVersion": "1.30"}], "created_at": "2022-03-16T15:46:08Z", "estimated_cost": true}, "external_ip": null}', 'changes_detected': '{"effective_cost": {"previous": 2882.88, "current": 0.0}}', 'service_name': 'Managed Kubernetes', 'region': 'ru-central1-b', 'status': 'ACTIVE', 'effective_cost': 0.0, 'has_cost_change': 1, 'has_status_change': 0, 'has_config_change': 0, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 5, 978433), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 5, 978435)}
2025-10-28 08:06:05,981 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:06:05,984 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:06:05,984 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:05,984 INFO sqlalchemy.engine.Engine: [cached since 30.83s ago] {'pk_1': 1674}
2025-10-28 08:06:05,985 INFO sqlalchemy.engine.Engine: UPDATE resources SET effective_cost=%(effective_cost)s, currency=%(currency)s, daily_cost=%(daily_cost)s, original_cost=%(original_cost)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:06:05,985 INFO sqlalchemy.engine.Engine: [cached since 30.83s ago] {'effective_cost': 1569.95, 'currency': 'RUB', 'daily_cost': 1569.95, 'original_cost': 47098.5, 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 5, 985815), 'resources_id': 1674}
2025-10-28 08:06:05,986 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:05,986 INFO sqlalchemy.engine.Engine: [cached since 30.83s ago] {'pk_1': 1674}
2025-10-28 08:06:05,987 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:05,988 INFO sqlalchemy.engine.Engine: [cached since 41.44s ago] {'resource_id_1': 1674, 'tag_key_1': 'folder_id', 'param_1': 1}
2025-10-28 08:06:05,989 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:05,989 INFO sqlalchemy.engine.Engine: [cached since 41.44s ago] {'resource_id_1': 1674, 'tag_key_1': 'folder_name', 'param_1': 1}
2025-10-28 08:06:05,989 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:05,990 INFO sqlalchemy.engine.Engine: [cached since 41.44s ago] {'resource_id_1': 1674, 'tag_key_1': 'cloud_id', 'param_1': 1}
2025-10-28 08:06:05,990 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:05,990 INFO sqlalchemy.engine.Engine: [cached since 41.44s ago] {'resource_id_1': 1674, 'tag_key_1': 'cost_source', 'param_1': 1}
2025-10-28 08:06:05,991 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:05,991 INFO sqlalchemy.engine.Engine: [cached since 41.44s ago] {'resource_id_1': 1674, 'tag_key_1': 'master_version', 'param_1': 1}
2025-10-28 08:06:05,992 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:05,992 INFO sqlalchemy.engine.Engine: [cached since 41.44s ago] {'resource_id_1': 1674, 'tag_key_1': 'total_nodes', 'param_1': 1}
2025-10-28 08:06:05,993 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:05,993 INFO sqlalchemy.engine.Engine: [cached since 41.45s ago] {'resource_id_1': 1674, 'tag_key_1': 'total_vcpus', 'param_1': 1}
2025-10-28 08:06:05,994 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:05,994 INFO sqlalchemy.engine.Engine: [cached since 41.45s ago] {'resource_id_1': 1674, 'tag_key_1': 'total_ram_gb', 'param_1': 1}
2025-10-28 08:06:05,995 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_status AS sync_snapshots_sync_status, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_completed_at AS sync_snapshots_sync_completed_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.total_resources_found AS sync_snapshots_total_resources_found, sync_snapshots.resources_created AS sync_snapshots_resources_created, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:06:05,995 INFO sqlalchemy.engine.Engine: [cached since 41.36s ago] {'pk_1': 8367}
2025-10-28 08:06:05,996 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:06:05,996 INFO sqlalchemy.engine.Engine: [cached since 45.32s ago] {'pk_1': 150}
2025-10-28 08:06:05,996 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.provider_id = %(provider_id_1)s AND resources.resource_id = %(resource_id_1)s AND resources.resource_type = %(resource_type_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:05,997 INFO sqlalchemy.engine.Engine: [cached since 2.931s ago] {'provider_id_1': 150, 'resource_id_1': 'c9q9uptar7sdndevvn4q', 'resource_type_1': 'postgresql-cluster', 'param_1': 1}
2025-10-28 08:06:05,998 INFO sqlalchemy.engine.Engine: UPDATE resources SET last_sync=%(last_sync)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:06:05,998 INFO sqlalchemy.engine.Engine: [cached since 2.928s ago] {'last_sync': datetime.datetime(2025, 10, 28, 8, 6, 5, 998119), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 5, 998873), 'resources_id': 1672}
2025-10-28 08:06:05,999 INFO sqlalchemy.engine.Engine: INSERT INTO resource_states (sync_snapshot_id, resource_id, provider_resource_id, resource_type, resource_name, state_action, previous_state, current_state, changes_detected, service_name, region, status, effective_cost, has_cost_change, has_status_change, has_config_change, created_at, updated_at) VALUES (%(sync_snapshot_id)s, %(resource_id)s, %(provider_resource_id)s, %(resource_type)s, %(resource_name)s, %(state_action)s, %(previous_state)s, %(current_state)s, %(changes_detected)s, %(service_name)s, %(region)s, %(status)s, %(effective_cost)s, %(has_cost_change)s, %(has_status_change)s, %(has_config_change)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:06,000 INFO sqlalchemy.engine.Engine: [cached since 30.85s ago] {'sync_snapshot_id': 8367, 'resource_id': 1672, 'provider_resource_id': 'c9q9uptar7sdndevvn4q', 'resource_type': 'postgresql-cluster', 'resource_name': 'pg-itl', 'state_action': 'updated', 'previous_state': '{"id": 1672, "provider_id": 150, "resource_id": "c9q9uptar7sdndevvn4q", "resource_name": "pg-itl", "region": "ru-central1-b", "external_ip": null, "s ... (10338 characters truncated) ... 00.0, "created_at": "2022-10-14T09:49:06.251254Z", "estimated_cost": true}, "created_at": "2025-10-27T21:46:16", "updated_at": "2025-10-27T22:43:36"}', 'current_state': '{"resource_id": "c9q9uptar7sdndevvn4q", "resource_name": "pg-itl", "resource_type": "postgresql-cluster", "service_name": "Managed PostgreSQL", "regi ... (9983 characters truncated) ... l_vcpus": 2, "total_ram_gb": 4, "total_storage_gb": 300.0, "created_at": "2022-10-14T09:49:06.251254Z", "estimated_cost": true}, "external_ip": null}', 'changes_detected': '{"effective_cost": {"previous": 154.08, "current": 0.0}}', 'service_name': 'Managed PostgreSQL', 'region': 'ru-central1-b', 'status': 'ACTIVE', 'effective_cost': 0.0, 'has_cost_change': 1, 'has_status_change': 0, 'has_config_change': 0, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 5, 999906), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 5, 999908)}
2025-10-28 08:06:06,002 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:06:06,004 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:06:06,004 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:06,004 INFO sqlalchemy.engine.Engine: [cached since 30.85s ago] {'pk_1': 1672}
2025-10-28 08:06:06,005 INFO sqlalchemy.engine.Engine: UPDATE resources SET effective_cost=%(effective_cost)s, currency=%(currency)s, daily_cost=%(daily_cost)s, original_cost=%(original_cost)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:06:06,005 INFO sqlalchemy.engine.Engine: [cached since 30.85s ago] {'effective_cost': 172.42, 'currency': 'RUB', 'daily_cost': 172.42, 'original_cost': 5172.599999999999, 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 5511), 'resources_id': 1672}
2025-10-28 08:06:06,006 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:06,006 INFO sqlalchemy.engine.Engine: [cached since 30.85s ago] {'pk_1': 1672}
2025-10-28 08:06:06,007 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,007 INFO sqlalchemy.engine.Engine: [cached since 41.46s ago] {'resource_id_1': 1672, 'tag_key_1': 'folder_id', 'param_1': 1}
2025-10-28 08:06:06,008 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,008 INFO sqlalchemy.engine.Engine: [cached since 41.46s ago] {'resource_id_1': 1672, 'tag_key_1': 'folder_name', 'param_1': 1}
2025-10-28 08:06:06,009 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,009 INFO sqlalchemy.engine.Engine: [cached since 41.46s ago] {'resource_id_1': 1672, 'tag_key_1': 'cloud_id', 'param_1': 1}
2025-10-28 08:06:06,010 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,010 INFO sqlalchemy.engine.Engine: [cached since 41.46s ago] {'resource_id_1': 1672, 'tag_key_1': 'cost_source', 'param_1': 1}
2025-10-28 08:06:06,010 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,010 INFO sqlalchemy.engine.Engine: [cached since 41.46s ago] {'resource_id_1': 1672, 'tag_key_1': 'version', 'param_1': 1}
2025-10-28 08:06:06,011 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,011 INFO sqlalchemy.engine.Engine: [cached since 41.46s ago] {'resource_id_1': 1672, 'tag_key_1': 'total_hosts', 'param_1': 1}
2025-10-28 08:06:06,012 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,012 INFO sqlalchemy.engine.Engine: [cached since 41.46s ago] {'resource_id_1': 1672, 'tag_key_1': 'total_vcpus', 'param_1': 1}
2025-10-28 08:06:06,013 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,013 INFO sqlalchemy.engine.Engine: [cached since 41.47s ago] {'resource_id_1': 1672, 'tag_key_1': 'total_ram_gb', 'param_1': 1}
2025-10-28 08:06:06,014 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_status AS sync_snapshots_sync_status, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_completed_at AS sync_snapshots_sync_completed_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.total_resources_found AS sync_snapshots_total_resources_found, sync_snapshots.resources_created AS sync_snapshots_resources_created, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:06:06,014 INFO sqlalchemy.engine.Engine: [cached since 41.38s ago] {'pk_1': 8367}
2025-10-28 08:06:06,015 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:06:06,015 INFO sqlalchemy.engine.Engine: [cached since 45.34s ago] {'pk_1': 150}
2025-10-28 08:06:06,015 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.provider_id = %(provider_id_1)s AND resources.resource_id = %(resource_id_1)s AND resources.resource_type = %(resource_type_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,015 INFO sqlalchemy.engine.Engine: [cached since 2.949s ago] {'provider_id_1': 150, 'resource_id_1': 'c9q86okrr7hismabtpsq', 'resource_type_1': 'postgresql-cluster', 'param_1': 1}
2025-10-28 08:06:06,017 INFO sqlalchemy.engine.Engine: UPDATE resources SET last_sync=%(last_sync)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:06:06,017 INFO sqlalchemy.engine.Engine: [cached since 2.947s ago] {'last_sync': datetime.datetime(2025, 10, 28, 8, 6, 6, 17006), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 17702), 'resources_id': 1673}
2025-10-28 08:06:06,018 INFO sqlalchemy.engine.Engine: INSERT INTO resource_states (sync_snapshot_id, resource_id, provider_resource_id, resource_type, resource_name, state_action, previous_state, current_state, changes_detected, service_name, region, status, effective_cost, has_cost_change, has_status_change, has_config_change, created_at, updated_at) VALUES (%(sync_snapshot_id)s, %(resource_id)s, %(provider_resource_id)s, %(resource_type)s, %(resource_name)s, %(state_action)s, %(previous_state)s, %(current_state)s, %(changes_detected)s, %(service_name)s, %(region)s, %(status)s, %(effective_cost)s, %(has_cost_change)s, %(has_status_change)s, %(has_config_change)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:06,018 INFO sqlalchemy.engine.Engine: [cached since 30.87s ago] {'sync_snapshot_id': 8367, 'resource_id': 1673, 'provider_resource_id': 'c9q86okrr7hismabtpsq', 'resource_type': 'postgresql-cluster', 'resource_name': 'pg-itl-prod', 'state_action': 'updated', 'previous_state': '{"id": 1673, "provider_id": 150, "resource_id": "c9q86okrr7hismabtpsq", "resource_name": "pg-itl-prod", "region": "ru-central1-b", "external_ip": nul ... (10348 characters truncated) ... 00.0, "created_at": "2023-05-10T07:07:54.613871Z", "estimated_cost": true}, "created_at": "2025-10-27T21:46:16", "updated_at": "2025-10-27T22:43:36"}', 'current_state': '{"resource_id": "c9q86okrr7hismabtpsq", "resource_name": "pg-itl-prod", "resource_type": "postgresql-cluster", "service_name": "Managed PostgreSQL",  ... (9993 characters truncated) ... l_vcpus": 2, "total_ram_gb": 4, "total_storage_gb": 300.0, "created_at": "2023-05-10T07:07:54.613871Z", "estimated_cost": true}, "external_ip": null}', 'changes_detected': '{"effective_cost": {"previous": 154.08, "current": 0.0}}', 'service_name': 'Managed PostgreSQL', 'region': 'ru-central1-b', 'status': 'ACTIVE', 'effective_cost': 0.0, 'has_cost_change': 1, 'has_status_change': 0, 'has_config_change': 0, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 18535), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 18536)}
2025-10-28 08:06:06,020 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:06:06,022 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:06:06,022 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:06,023 INFO sqlalchemy.engine.Engine: [cached since 30.87s ago] {'pk_1': 1673}
2025-10-28 08:06:06,023 INFO sqlalchemy.engine.Engine: UPDATE resources SET effective_cost=%(effective_cost)s, currency=%(currency)s, daily_cost=%(daily_cost)s, original_cost=%(original_cost)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:06:06,023 INFO sqlalchemy.engine.Engine: [cached since 30.86s ago] {'effective_cost': 172.42, 'currency': 'RUB', 'daily_cost': 172.42, 'original_cost': 5172.599999999999, 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 23793), 'resources_id': 1673}
2025-10-28 08:06:06,024 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:06,024 INFO sqlalchemy.engine.Engine: [cached since 30.87s ago] {'pk_1': 1673}
2025-10-28 08:06:06,025 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,025 INFO sqlalchemy.engine.Engine: [cached since 41.48s ago] {'resource_id_1': 1673, 'tag_key_1': 'folder_id', 'param_1': 1}
2025-10-28 08:06:06,026 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,026 INFO sqlalchemy.engine.Engine: [cached since 41.48s ago] {'resource_id_1': 1673, 'tag_key_1': 'folder_name', 'param_1': 1}
2025-10-28 08:06:06,026 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,027 INFO sqlalchemy.engine.Engine: [cached since 41.48s ago] {'resource_id_1': 1673, 'tag_key_1': 'cloud_id', 'param_1': 1}
2025-10-28 08:06:06,027 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,027 INFO sqlalchemy.engine.Engine: [cached since 41.48s ago] {'resource_id_1': 1673, 'tag_key_1': 'cost_source', 'param_1': 1}
2025-10-28 08:06:06,028 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,028 INFO sqlalchemy.engine.Engine: [cached since 41.48s ago] {'resource_id_1': 1673, 'tag_key_1': 'version', 'param_1': 1}
2025-10-28 08:06:06,029 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,029 INFO sqlalchemy.engine.Engine: [cached since 41.48s ago] {'resource_id_1': 1673, 'tag_key_1': 'total_hosts', 'param_1': 1}
2025-10-28 08:06:06,029 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,029 INFO sqlalchemy.engine.Engine: [cached since 41.48s ago] {'resource_id_1': 1673, 'tag_key_1': 'total_vcpus', 'param_1': 1}
2025-10-28 08:06:06,030 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,030 INFO sqlalchemy.engine.Engine: [cached since 41.48s ago] {'resource_id_1': 1673, 'tag_key_1': 'total_ram_gb', 'param_1': 1}
2025-10-28 08:06:06,031 INFO app.providers.yandex.service:   Processing compute resources (filtering managed service nodes)...
2025-10-28 08:06:06,031 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_status AS sync_snapshots_sync_status, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_completed_at AS sync_snapshots_sync_completed_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.total_resources_found AS sync_snapshots_total_resources_found, sync_snapshots.resources_created AS sync_snapshots_resources_created, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:06:06,031 INFO sqlalchemy.engine.Engine: [cached since 41.4s ago] {'pk_1': 8367}
2025-10-28 08:06:06,032 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:06:06,032 INFO sqlalchemy.engine.Engine: [cached since 45.36s ago] {'pk_1': 150}
2025-10-28 08:06:06,032 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.provider_id = %(provider_id_1)s AND resources.resource_id = %(resource_id_1)s AND resources.resource_type = %(resource_type_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,032 INFO sqlalchemy.engine.Engine: [cached since 2.966s ago] {'provider_id_1': 150, 'resource_id_1': 'epd3fpgd132f9861ol32', 'resource_type_1': 'server', 'param_1': 1}
2025-10-28 08:06:06,034 INFO sqlalchemy.engine.Engine: UPDATE resources SET last_sync=%(last_sync)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:06:06,034 INFO sqlalchemy.engine.Engine: [cached since 2.964s ago] {'last_sync': datetime.datetime(2025, 10, 28, 8, 6, 6, 33777), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 34162), 'resources_id': 1651}
2025-10-28 08:06:06,034 INFO sqlalchemy.engine.Engine: INSERT INTO resource_states (sync_snapshot_id, resource_id, provider_resource_id, resource_type, resource_name, state_action, previous_state, current_state, changes_detected, service_name, region, status, effective_cost, has_cost_change, has_status_change, has_config_change, created_at, updated_at) VALUES (%(sync_snapshot_id)s, %(resource_id)s, %(provider_resource_id)s, %(resource_type)s, %(resource_name)s, %(state_action)s, %(previous_state)s, %(current_state)s, %(changes_detected)s, %(service_name)s, %(region)s, %(status)s, %(effective_cost)s, %(has_cost_change)s, %(has_status_change)s, %(has_config_change)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:06,034 INFO sqlalchemy.engine.Engine: [cached since 30.89s ago] {'sync_snapshot_id': 8367, 'resource_id': 1651, 'provider_resource_id': 'epd3fpgd132f9861ol32', 'resource_type': 'server', 'resource_name': 'voluxprod', 'state_action': 'updated', 'previous_state': '{"id": 1651, "provider_id": 150, "resource_id": "epd3fpgd132f9861ol32", "resource_name": "voluxprod", "region": "ru-central1-b", "external_ip": null, ... (2118 characters truncated) ... 25-04-17T13:28:52Z", "platform_id": "standard-v3", "estimated_cost": true}, "created_at": "2025-10-27T20:07:34", "updated_at": "2025-10-27T22:43:36"}', 'current_state': '{"resource_id": "epd3fpgd132f9861ol32", "resource_name": "voluxprod", "resource_type": "server", "service_name": "Compute Cloud", "region": "ru-centr ... (1765 characters truncated) ... ubnetId": "e2l79kdq43nqhds27v1j"}], "created_at": "2025-04-17T13:28:52Z", "platform_id": "standard-v3", "estimated_cost": true}, "external_ip": null}', 'changes_detected': '{"effective_cost": {"previous": 94.2, "current": 0.0}}', 'service_name': 'Compute Cloud', 'region': 'ru-central1-b', 'status': 'RUNNING', 'effective_cost': 0.0, 'has_cost_change': 1, 'has_status_change': 0, 'has_config_change': 0, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 34812), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 34814)}
2025-10-28 08:06:06,035 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:06:06,036 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:06:06,037 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:06,037 INFO sqlalchemy.engine.Engine: [cached since 2.959s ago] {'pk_1': 1651}
2025-10-28 08:06:06,037 INFO sqlalchemy.engine.Engine: UPDATE resources SET external_ip=%(external_ip)s, effective_cost=%(effective_cost)s, currency=%(currency)s, daily_cost=%(daily_cost)s, original_cost=%(original_cost)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:06:06,037 INFO sqlalchemy.engine.Engine: [cached since 2.958s ago] {'external_ip': None, 'effective_cost': 44.96, 'currency': 'RUB', 'daily_cost': 44.96, 'original_cost': 1348.8, 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 37765), 'resources_id': 1651}
2025-10-28 08:06:06,038 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:06,038 INFO sqlalchemy.engine.Engine: [cached since 2.961s ago] {'pk_1': 1651}
2025-10-28 08:06:06,039 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,039 INFO sqlalchemy.engine.Engine: [cached since 41.49s ago] {'resource_id_1': 1651, 'tag_key_1': 'folder_id', 'param_1': 1}
2025-10-28 08:06:06,039 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,040 INFO sqlalchemy.engine.Engine: [cached since 41.49s ago] {'resource_id_1': 1651, 'tag_key_1': 'folder_name', 'param_1': 1}
2025-10-28 08:06:06,040 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,040 INFO sqlalchemy.engine.Engine: [cached since 41.49s ago] {'resource_id_1': 1651, 'tag_key_1': 'cloud_id', 'param_1': 1}
2025-10-28 08:06:06,041 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,041 INFO sqlalchemy.engine.Engine: [cached since 41.49s ago] {'resource_id_1': 1651, 'tag_key_1': 'cost_source', 'param_1': 1}
2025-10-28 08:06:06,042 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,042 INFO sqlalchemy.engine.Engine: [cached since 41.49s ago] {'resource_id_1': 1651, 'tag_key_1': 'platform_id', 'param_1': 1}
2025-10-28 08:06:06,042 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_status AS sync_snapshots_sync_status, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_completed_at AS sync_snapshots_sync_completed_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.total_resources_found AS sync_snapshots_total_resources_found, sync_snapshots.resources_created AS sync_snapshots_resources_created, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:06:06,042 INFO sqlalchemy.engine.Engine: [cached since 41.41s ago] {'pk_1': 8367}
2025-10-28 08:06:06,043 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:06:06,043 INFO sqlalchemy.engine.Engine: [cached since 45.37s ago] {'pk_1': 150}
2025-10-28 08:06:06,044 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.provider_id = %(provider_id_1)s AND resources.resource_id = %(resource_id_1)s AND resources.resource_type = %(resource_type_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,044 INFO sqlalchemy.engine.Engine: [cached since 2.978s ago] {'provider_id_1': 150, 'resource_id_1': 'epd3j8cejsojkbtbqp0p', 'resource_type_1': 'server', 'param_1': 1}
2025-10-28 08:06:06,045 INFO sqlalchemy.engine.Engine: UPDATE resources SET last_sync=%(last_sync)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:06:06,045 INFO sqlalchemy.engine.Engine: [cached since 2.975s ago] {'last_sync': datetime.datetime(2025, 10, 28, 8, 6, 6, 44853), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 45208), 'resources_id': 1652}
2025-10-28 08:06:06,045 INFO sqlalchemy.engine.Engine: INSERT INTO resource_states (sync_snapshot_id, resource_id, provider_resource_id, resource_type, resource_name, state_action, previous_state, current_state, changes_detected, service_name, region, status, effective_cost, has_cost_change, has_status_change, has_config_change, created_at, updated_at) VALUES (%(sync_snapshot_id)s, %(resource_id)s, %(provider_resource_id)s, %(resource_type)s, %(resource_name)s, %(state_action)s, %(previous_state)s, %(current_state)s, %(changes_detected)s, %(service_name)s, %(region)s, %(status)s, %(effective_cost)s, %(has_cost_change)s, %(has_status_change)s, %(has_config_change)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:06,045 INFO sqlalchemy.engine.Engine: [cached since 30.9s ago] {'sync_snapshot_id': 8367, 'resource_id': 1652, 'provider_resource_id': 'epd3j8cejsojkbtbqp0p', 'resource_type': 'server', 'resource_name': 'volux', 'state_action': 'updated', 'previous_state': '{"id": 1652, "provider_id": 150, "resource_id": "epd3j8cejsojkbtbqp0p", "resource_name": "volux", "region": "ru-central1-b", "external_ip": null, "se ... (2106 characters truncated) ... 25-03-31T11:23:14Z", "platform_id": "standard-v3", "estimated_cost": true}, "created_at": "2025-10-27T20:07:34", "updated_at": "2025-10-27T22:43:36"}', 'current_state': '{"resource_id": "epd3j8cejsojkbtbqp0p", "resource_name": "volux", "resource_type": "server", "service_name": "Compute Cloud", "region": "ru-central1- ... (1753 characters truncated) ... ubnetId": "e2l79kdq43nqhds27v1j"}], "created_at": "2025-03-31T11:23:14Z", "platform_id": "standard-v3", "estimated_cost": true}, "external_ip": null}', 'changes_detected': '{"effective_cost": {"previous": 94.2, "current": 0.0}}', 'service_name': 'Compute Cloud', 'region': 'ru-central1-b', 'status': 'STOPPED', 'effective_cost': 0.0, 'has_cost_change': 1, 'has_status_change': 0, 'has_config_change': 0, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 45723), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 45724)}
2025-10-28 08:06:06,046 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:06:06,047 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:06:06,047 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:06,047 INFO sqlalchemy.engine.Engine: [cached since 2.97s ago] {'pk_1': 1652}
2025-10-28 08:06:06,048 INFO sqlalchemy.engine.Engine: UPDATE resources SET external_ip=%(external_ip)s, effective_cost=%(effective_cost)s, currency=%(currency)s, daily_cost=%(daily_cost)s, original_cost=%(original_cost)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:06:06,048 INFO sqlalchemy.engine.Engine: [cached since 2.969s ago] {'external_ip': None, 'effective_cost': 44.96, 'currency': 'RUB', 'daily_cost': 44.96, 'original_cost': 1348.8, 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 48524), 'resources_id': 1652}
2025-10-28 08:06:06,049 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:06,049 INFO sqlalchemy.engine.Engine: [cached since 2.971s ago] {'pk_1': 1652}
2025-10-28 08:06:06,050 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,050 INFO sqlalchemy.engine.Engine: [cached since 41.5s ago] {'resource_id_1': 1652, 'tag_key_1': 'folder_id', 'param_1': 1}
2025-10-28 08:06:06,050 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,050 INFO sqlalchemy.engine.Engine: [cached since 41.5s ago] {'resource_id_1': 1652, 'tag_key_1': 'folder_name', 'param_1': 1}
2025-10-28 08:06:06,051 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,051 INFO sqlalchemy.engine.Engine: [cached since 41.5s ago] {'resource_id_1': 1652, 'tag_key_1': 'cloud_id', 'param_1': 1}
2025-10-28 08:06:06,052 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,052 INFO sqlalchemy.engine.Engine: [cached since 41.5s ago] {'resource_id_1': 1652, 'tag_key_1': 'cost_source', 'param_1': 1}
2025-10-28 08:06:06,052 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,052 INFO sqlalchemy.engine.Engine: [cached since 41.5s ago] {'resource_id_1': 1652, 'tag_key_1': 'platform_id', 'param_1': 1}
2025-10-28 08:06:06,053 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_status AS sync_snapshots_sync_status, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_completed_at AS sync_snapshots_sync_completed_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.total_resources_found AS sync_snapshots_total_resources_found, sync_snapshots.resources_created AS sync_snapshots_resources_created, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:06:06,053 INFO sqlalchemy.engine.Engine: [cached since 41.42s ago] {'pk_1': 8367}
2025-10-28 08:06:06,054 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:06:06,054 INFO sqlalchemy.engine.Engine: [cached since 45.38s ago] {'pk_1': 150}
2025-10-28 08:06:06,055 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.provider_id = %(provider_id_1)s AND resources.resource_id = %(resource_id_1)s AND resources.resource_type = %(resource_type_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,055 INFO sqlalchemy.engine.Engine: [cached since 2.989s ago] {'provider_id_1': 150, 'resource_id_1': 'epd4eioiv8oqqsp6a7n7', 'resource_type_1': 'server', 'param_1': 1}
2025-10-28 08:06:06,056 INFO sqlalchemy.engine.Engine: UPDATE resources SET last_sync=%(last_sync)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:06:06,056 INFO sqlalchemy.engine.Engine: [cached since 2.986s ago] {'last_sync': datetime.datetime(2025, 10, 28, 8, 6, 6, 56026), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 56377), 'resources_id': 1653}
2025-10-28 08:06:06,056 INFO sqlalchemy.engine.Engine: INSERT INTO resource_states (sync_snapshot_id, resource_id, provider_resource_id, resource_type, resource_name, state_action, previous_state, current_state, changes_detected, service_name, region, status, effective_cost, has_cost_change, has_status_change, has_config_change, created_at, updated_at) VALUES (%(sync_snapshot_id)s, %(resource_id)s, %(provider_resource_id)s, %(resource_type)s, %(resource_name)s, %(state_action)s, %(previous_state)s, %(current_state)s, %(changes_detected)s, %(service_name)s, %(region)s, %(status)s, %(effective_cost)s, %(has_cost_change)s, %(has_status_change)s, %(has_config_change)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:06,057 INFO sqlalchemy.engine.Engine: [cached since 30.91s ago] {'sync_snapshot_id': 8367, 'resource_id': 1653, 'provider_resource_id': 'epd4eioiv8oqqsp6a7n7', 'resource_type': 'server', 'resource_name': 'office', 'state_action': 'updated', 'previous_state': '{"id": 1653, "provider_id": 150, "resource_id": "epd4eioiv8oqqsp6a7n7", "resource_name": "office", "region": "ru-central1-b", "external_ip": null, "s ... (2343 characters truncated) ... 25-09-22T14:42:13Z", "platform_id": "standard-v3", "estimated_cost": true}, "created_at": "2025-10-27T20:07:34", "updated_at": "2025-10-27T22:43:36"}', 'current_state': '{"resource_id": "epd4eioiv8oqqsp6a7n7", "resource_name": "office", "resource_type": "server", "service_name": "Compute Cloud", "region": "ru-central1 ... (1988 characters truncated) ... ubnetId": "e2l79kdq43nqhds27v1j"}], "created_at": "2025-09-22T14:42:13Z", "platform_id": "standard-v3", "estimated_cost": true}, "external_ip": null}', 'changes_detected': '{"effective_cost": {"previous": 226.32, "current": 0.0}}', 'service_name': 'Compute Cloud', 'region': 'ru-central1-b', 'status': 'RUNNING', 'effective_cost': 0.0, 'has_cost_change': 1, 'has_status_change': 0, 'has_config_change': 0, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 56980), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 56981)}
2025-10-28 08:06:06,057 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:06:06,059 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:06:06,059 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:06,059 INFO sqlalchemy.engine.Engine: [cached since 2.982s ago] {'pk_1': 1653}
2025-10-28 08:06:06,060 INFO sqlalchemy.engine.Engine: UPDATE resources SET external_ip=%(external_ip)s, effective_cost=%(effective_cost)s, currency=%(currency)s, daily_cost=%(daily_cost)s, original_cost=%(original_cost)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:06:06,060 INFO sqlalchemy.engine.Engine: [cached since 2.981s ago] {'external_ip': None, 'effective_cost': 192.68, 'currency': 'RUB', 'daily_cost': 192.68, 'original_cost': 5780.400000000001, 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 60170), 'resources_id': 1653}
2025-10-28 08:06:06,060 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:06,060 INFO sqlalchemy.engine.Engine: [cached since 2.983s ago] {'pk_1': 1653}
2025-10-28 08:06:06,061 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,061 INFO sqlalchemy.engine.Engine: [cached since 41.51s ago] {'resource_id_1': 1653, 'tag_key_1': 'folder_id', 'param_1': 1}
2025-10-28 08:06:06,062 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,062 INFO sqlalchemy.engine.Engine: [cached since 41.51s ago] {'resource_id_1': 1653, 'tag_key_1': 'folder_name', 'param_1': 1}
2025-10-28 08:06:06,063 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,063 INFO sqlalchemy.engine.Engine: [cached since 41.52s ago] {'resource_id_1': 1653, 'tag_key_1': 'cloud_id', 'param_1': 1}
2025-10-28 08:06:06,064 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,064 INFO sqlalchemy.engine.Engine: [cached since 41.52s ago] {'resource_id_1': 1653, 'tag_key_1': 'cost_source', 'param_1': 1}
2025-10-28 08:06:06,064 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,064 INFO sqlalchemy.engine.Engine: [cached since 41.52s ago] {'resource_id_1': 1653, 'tag_key_1': 'platform_id', 'param_1': 1}
2025-10-28 08:06:06,065 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_status AS sync_snapshots_sync_status, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_completed_at AS sync_snapshots_sync_completed_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.total_resources_found AS sync_snapshots_total_resources_found, sync_snapshots.resources_created AS sync_snapshots_resources_created, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:06:06,065 INFO sqlalchemy.engine.Engine: [cached since 41.43s ago] {'pk_1': 8367}
2025-10-28 08:06:06,066 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:06:06,066 INFO sqlalchemy.engine.Engine: [cached since 45.39s ago] {'pk_1': 150}
2025-10-28 08:06:06,067 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.provider_id = %(provider_id_1)s AND resources.resource_id = %(resource_id_1)s AND resources.resource_type = %(resource_type_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,067 INFO sqlalchemy.engine.Engine: [cached since 3.001s ago] {'provider_id_1': 150, 'resource_id_1': 'epdbv1dd3d6jv2ahtn88', 'resource_type_1': 'server', 'param_1': 1}
2025-10-28 08:06:06,068 INFO sqlalchemy.engine.Engine: UPDATE resources SET last_sync=%(last_sync)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:06:06,068 INFO sqlalchemy.engine.Engine: [cached since 2.998s ago] {'last_sync': datetime.datetime(2025, 10, 28, 8, 6, 6, 68102), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 68511), 'resources_id': 1655}
2025-10-28 08:06:06,069 INFO sqlalchemy.engine.Engine: INSERT INTO resource_states (sync_snapshot_id, resource_id, provider_resource_id, resource_type, resource_name, state_action, previous_state, current_state, changes_detected, service_name, region, status, effective_cost, has_cost_change, has_status_change, has_config_change, created_at, updated_at) VALUES (%(sync_snapshot_id)s, %(resource_id)s, %(provider_resource_id)s, %(resource_type)s, %(resource_name)s, %(state_action)s, %(previous_state)s, %(current_state)s, %(changes_detected)s, %(service_name)s, %(region)s, %(status)s, %(effective_cost)s, %(has_cost_change)s, %(has_status_change)s, %(has_config_change)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:06,069 INFO sqlalchemy.engine.Engine: [cached since 30.92s ago] {'sync_snapshot_id': 8367, 'resource_id': 1655, 'provider_resource_id': 'epdbv1dd3d6jv2ahtn88', 'resource_type': 'server', 'resource_name': 'gitlab', 'state_action': 'updated', 'previous_state': '{"id": 1655, "provider_id": 150, "resource_id": "epdbv1dd3d6jv2ahtn88", "resource_name": "gitlab", "region": "ru-central1-b", "external_ip": "62.84.1 ... (2278 characters truncated) ... 24-08-30T01:00:10Z", "platform_id": "standard-v3", "estimated_cost": true}, "created_at": "2025-10-27T20:07:34", "updated_at": "2025-10-27T22:43:36"}', 'current_state': '{"resource_id": "epdbv1dd3d6jv2ahtn88", "resource_name": "gitlab", "resource_type": "server", "service_name": "Compute Cloud", "region": "ru-central1 ... (1923 characters truncated) ...  "e2ldgki3ojkgcj6uh03j"}], "created_at": "2024-08-30T01:00:10Z", "platform_id": "standard-v3", "estimated_cost": true}, "external_ip": "62.84.123.9"}', 'changes_detected': '{"effective_cost": {"previous": 289.92, "current": 0.0}}', 'service_name': 'Compute Cloud', 'region': 'ru-central1-b', 'status': 'RUNNING', 'effective_cost': 0.0, 'has_cost_change': 1, 'has_status_change': 0, 'has_config_change': 0, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 69111), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 69113)}
2025-10-28 08:06:06,069 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:06:06,071 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:06:06,071 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:06,071 INFO sqlalchemy.engine.Engine: [cached since 2.993s ago] {'pk_1': 1655}
2025-10-28 08:06:06,072 INFO sqlalchemy.engine.Engine: UPDATE resources SET external_ip=%(external_ip)s, effective_cost=%(effective_cost)s, currency=%(currency)s, daily_cost=%(daily_cost)s, original_cost=%(original_cost)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:06:06,072 INFO sqlalchemy.engine.Engine: [cached since 2.992s ago] {'external_ip': '62.84.123.9', 'effective_cost': 347.27, 'currency': 'RUB', 'daily_cost': 347.27, 'original_cost': 10418.099999999999, 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 72018), 'resources_id': 1655}
2025-10-28 08:06:06,072 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:06,072 INFO sqlalchemy.engine.Engine: [cached since 2.995s ago] {'pk_1': 1655}
2025-10-28 08:06:06,073 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,073 INFO sqlalchemy.engine.Engine: [cached since 41.53s ago] {'resource_id_1': 1655, 'tag_key_1': 'folder_id', 'param_1': 1}
2025-10-28 08:06:06,074 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,074 INFO sqlalchemy.engine.Engine: [cached since 41.53s ago] {'resource_id_1': 1655, 'tag_key_1': 'folder_name', 'param_1': 1}
2025-10-28 08:06:06,075 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,075 INFO sqlalchemy.engine.Engine: [cached since 41.53s ago] {'resource_id_1': 1655, 'tag_key_1': 'cloud_id', 'param_1': 1}
2025-10-28 08:06:06,075 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,075 INFO sqlalchemy.engine.Engine: [cached since 41.53s ago] {'resource_id_1': 1655, 'tag_key_1': 'cost_source', 'param_1': 1}
2025-10-28 08:06:06,076 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,076 INFO sqlalchemy.engine.Engine: [cached since 41.53s ago] {'resource_id_1': 1655, 'tag_key_1': 'platform_id', 'param_1': 1}
2025-10-28 08:06:06,076 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_status AS sync_snapshots_sync_status, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_completed_at AS sync_snapshots_sync_completed_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.total_resources_found AS sync_snapshots_total_resources_found, sync_snapshots.resources_created AS sync_snapshots_resources_created, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:06:06,077 INFO sqlalchemy.engine.Engine: [cached since 41.44s ago] {'pk_1': 8367}
2025-10-28 08:06:06,077 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:06:06,077 INFO sqlalchemy.engine.Engine: [cached since 45.4s ago] {'pk_1': 150}
2025-10-28 08:06:06,078 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.provider_id = %(provider_id_1)s AND resources.resource_id = %(resource_id_1)s AND resources.resource_type = %(resource_type_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,078 INFO sqlalchemy.engine.Engine: [cached since 3.012s ago] {'provider_id_1': 150, 'resource_id_1': 'epdfl7h2qhog2naflqd2', 'resource_type_1': 'server', 'param_1': 1}
2025-10-28 08:06:06,079 INFO sqlalchemy.engine.Engine: UPDATE resources SET last_sync=%(last_sync)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:06:06,079 INFO sqlalchemy.engine.Engine: [cached since 3.009s ago] {'last_sync': datetime.datetime(2025, 10, 28, 8, 6, 6, 79126), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 79462), 'resources_id': 1656}
2025-10-28 08:06:06,079 INFO sqlalchemy.engine.Engine: INSERT INTO resource_states (sync_snapshot_id, resource_id, provider_resource_id, resource_type, resource_name, state_action, previous_state, current_state, changes_detected, service_name, region, status, effective_cost, has_cost_change, has_status_change, has_config_change, created_at, updated_at) VALUES (%(sync_snapshot_id)s, %(resource_id)s, %(provider_resource_id)s, %(resource_type)s, %(resource_name)s, %(state_action)s, %(previous_state)s, %(current_state)s, %(changes_detected)s, %(service_name)s, %(region)s, %(status)s, %(effective_cost)s, %(has_cost_change)s, %(has_status_change)s, %(has_config_change)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:06,080 INFO sqlalchemy.engine.Engine: [cached since 30.93s ago] {'sync_snapshot_id': 8367, 'resource_id': 1656, 'provider_resource_id': 'epdfl7h2qhog2naflqd2', 'resource_type': 'server', 'resource_name': 'sphinx', 'state_action': 'updated', 'previous_state': '{"id": 1656, "provider_id": 150, "resource_id": "epdfl7h2qhog2naflqd2", "resource_name": "sphinx", "region": "ru-central1-b", "external_ip": null, "s ... (2121 characters truncated) ... 24-04-15T16:27:12Z", "platform_id": "standard-v3", "estimated_cost": true}, "created_at": "2025-10-27T20:07:34", "updated_at": "2025-10-27T22:43:36"}', 'current_state': '{"resource_id": "epdfl7h2qhog2naflqd2", "resource_name": "sphinx", "resource_type": "server", "service_name": "Compute Cloud", "region": "ru-central1 ... (1767 characters truncated) ... ubnetId": "e2l79kdq43nqhds27v1j"}], "created_at": "2024-04-15T16:27:12Z", "platform_id": "standard-v3", "estimated_cost": true}, "external_ip": null}', 'changes_detected': '{"effective_cost": {"previous": 119.4, "current": 0.0}}', 'service_name': 'Compute Cloud', 'region': 'ru-central1-b', 'status': 'RUNNING', 'effective_cost': 0.0, 'has_cost_change': 1, 'has_status_change': 0, 'has_config_change': 0, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 79953), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 79954)}
2025-10-28 08:06:06,080 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:06:06,081 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:06:06,082 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:06,082 INFO sqlalchemy.engine.Engine: [cached since 3.004s ago] {'pk_1': 1656}
2025-10-28 08:06:06,082 INFO sqlalchemy.engine.Engine: UPDATE resources SET external_ip=%(external_ip)s, effective_cost=%(effective_cost)s, currency=%(currency)s, daily_cost=%(daily_cost)s, original_cost=%(original_cost)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:06:06,082 INFO sqlalchemy.engine.Engine: [cached since 3.003s ago] {'external_ip': None, 'effective_cost': 55.97, 'currency': 'RUB', 'daily_cost': 55.97, 'original_cost': 1679.1, 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 82807), 'resources_id': 1656}
2025-10-28 08:06:06,083 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:06,083 INFO sqlalchemy.engine.Engine: [cached since 3.006s ago] {'pk_1': 1656}
2025-10-28 08:06:06,084 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,084 INFO sqlalchemy.engine.Engine: [cached since 41.54s ago] {'resource_id_1': 1656, 'tag_key_1': 'folder_id', 'param_1': 1}
2025-10-28 08:06:06,084 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,084 INFO sqlalchemy.engine.Engine: [cached since 41.54s ago] {'resource_id_1': 1656, 'tag_key_1': 'folder_name', 'param_1': 1}
2025-10-28 08:06:06,085 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,085 INFO sqlalchemy.engine.Engine: [cached since 41.54s ago] {'resource_id_1': 1656, 'tag_key_1': 'cloud_id', 'param_1': 1}
2025-10-28 08:06:06,086 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,086 INFO sqlalchemy.engine.Engine: [cached since 41.54s ago] {'resource_id_1': 1656, 'tag_key_1': 'cost_source', 'param_1': 1}
2025-10-28 08:06:06,086 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,086 INFO sqlalchemy.engine.Engine: [cached since 41.54s ago] {'resource_id_1': 1656, 'tag_key_1': 'platform_id', 'param_1': 1}
2025-10-28 08:06:06,087 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_status AS sync_snapshots_sync_status, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_completed_at AS sync_snapshots_sync_completed_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.total_resources_found AS sync_snapshots_total_resources_found, sync_snapshots.resources_created AS sync_snapshots_resources_created, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:06:06,087 INFO sqlalchemy.engine.Engine: [cached since 41.45s ago] {'pk_1': 8367}
2025-10-28 08:06:06,088 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:06:06,088 INFO sqlalchemy.engine.Engine: [cached since 45.41s ago] {'pk_1': 150}
2025-10-28 08:06:06,088 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.provider_id = %(provider_id_1)s AND resources.resource_id = %(resource_id_1)s AND resources.resource_type = %(resource_type_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,088 INFO sqlalchemy.engine.Engine: [cached since 3.022s ago] {'provider_id_1': 150, 'resource_id_1': 'epdgngr8lht816tvjrm3', 'resource_type_1': 'server', 'param_1': 1}
2025-10-28 08:06:06,089 INFO sqlalchemy.engine.Engine: UPDATE resources SET last_sync=%(last_sync)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:06:06,089 INFO sqlalchemy.engine.Engine: [cached since 3.019s ago] {'last_sync': datetime.datetime(2025, 10, 28, 8, 6, 6, 89574), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 89887), 'resources_id': 1657}
2025-10-28 08:06:06,090 INFO sqlalchemy.engine.Engine: INSERT INTO resource_states (sync_snapshot_id, resource_id, provider_resource_id, resource_type, resource_name, state_action, previous_state, current_state, changes_detected, service_name, region, status, effective_cost, has_cost_change, has_status_change, has_config_change, created_at, updated_at) VALUES (%(sync_snapshot_id)s, %(resource_id)s, %(provider_resource_id)s, %(resource_type)s, %(resource_name)s, %(state_action)s, %(previous_state)s, %(current_state)s, %(changes_detected)s, %(service_name)s, %(region)s, %(status)s, %(effective_cost)s, %(has_cost_change)s, %(has_status_change)s, %(has_config_change)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:06,090 INFO sqlalchemy.engine.Engine: [cached since 30.94s ago] {'sync_snapshot_id': 8367, 'resource_id': 1657, 'provider_resource_id': 'epdgngr8lht816tvjrm3', 'resource_type': 'server', 'resource_name': 'r7', 'state_action': 'updated', 'previous_state': '{"id": 1657, "provider_id": 150, "resource_id": "epdgngr8lht816tvjrm3", "resource_name": "r7", "region": "ru-central1-b", "external_ip": null, "servi ... (2099 characters truncated) ... 25-04-02T09:24:06Z", "platform_id": "standard-v3", "estimated_cost": true}, "created_at": "2025-10-27T20:07:34", "updated_at": "2025-10-27T22:43:36"}', 'current_state': '{"resource_id": "epdgngr8lht816tvjrm3", "resource_name": "r7", "resource_type": "server", "service_name": "Compute Cloud", "region": "ru-central1-b", ... (1745 characters truncated) ... ubnetId": "e2l79kdq43nqhds27v1j"}], "created_at": "2025-04-02T09:24:06Z", "platform_id": "standard-v3", "estimated_cost": true}, "external_ip": null}', 'changes_detected': '{"effective_cost": {"previous": 113.4, "current": 0.0}}', 'service_name': 'Compute Cloud', 'region': 'ru-central1-b', 'status': 'STOPPED', 'effective_cost': 0.0, 'has_cost_change': 1, 'has_status_change': 0, 'has_config_change': 0, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 90384), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 90385)}
2025-10-28 08:06:06,092 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:06:06,093 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:06:06,093 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:06,093 INFO sqlalchemy.engine.Engine: [cached since 3.016s ago] {'pk_1': 1657}
2025-10-28 08:06:06,094 INFO sqlalchemy.engine.Engine: UPDATE resources SET external_ip=%(external_ip)s, effective_cost=%(effective_cost)s, currency=%(currency)s, daily_cost=%(daily_cost)s, original_cost=%(original_cost)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:06:06,094 INFO sqlalchemy.engine.Engine: [cached since 3.015s ago] {'external_ip': None, 'effective_cost': 86.24, 'currency': 'RUB', 'daily_cost': 86.24, 'original_cost': 2587.2, 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 94168), 'resources_id': 1657}
2025-10-28 08:06:06,094 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:06,094 INFO sqlalchemy.engine.Engine: [cached since 3.017s ago] {'pk_1': 1657}
2025-10-28 08:06:06,095 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,095 INFO sqlalchemy.engine.Engine: [cached since 41.55s ago] {'resource_id_1': 1657, 'tag_key_1': 'folder_id', 'param_1': 1}
2025-10-28 08:06:06,096 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,096 INFO sqlalchemy.engine.Engine: [cached since 41.55s ago] {'resource_id_1': 1657, 'tag_key_1': 'folder_name', 'param_1': 1}
2025-10-28 08:06:06,096 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,096 INFO sqlalchemy.engine.Engine: [cached since 41.55s ago] {'resource_id_1': 1657, 'tag_key_1': 'cloud_id', 'param_1': 1}
2025-10-28 08:06:06,097 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,097 INFO sqlalchemy.engine.Engine: [cached since 41.55s ago] {'resource_id_1': 1657, 'tag_key_1': 'cost_source', 'param_1': 1}
2025-10-28 08:06:06,098 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,098 INFO sqlalchemy.engine.Engine: [cached since 41.55s ago] {'resource_id_1': 1657, 'tag_key_1': 'platform_id', 'param_1': 1}
2025-10-28 08:06:06,098 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_status AS sync_snapshots_sync_status, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_completed_at AS sync_snapshots_sync_completed_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.total_resources_found AS sync_snapshots_total_resources_found, sync_snapshots.resources_created AS sync_snapshots_resources_created, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:06:06,098 INFO sqlalchemy.engine.Engine: [cached since 41.46s ago] {'pk_1': 8367}
2025-10-28 08:06:06,099 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:06:06,099 INFO sqlalchemy.engine.Engine: [cached since 45.42s ago] {'pk_1': 150}
2025-10-28 08:06:06,100 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.provider_id = %(provider_id_1)s AND resources.resource_id = %(resource_id_1)s AND resources.resource_type = %(resource_type_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,100 INFO sqlalchemy.engine.Engine: [cached since 3.034s ago] {'provider_id_1': 150, 'resource_id_1': 'epdico47n8b1knml7deb', 'resource_type_1': 'server', 'param_1': 1}
2025-10-28 08:06:06,101 INFO sqlalchemy.engine.Engine: UPDATE resources SET last_sync=%(last_sync)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:06:06,101 INFO sqlalchemy.engine.Engine: [cached since 3.031s ago] {'last_sync': datetime.datetime(2025, 10, 28, 8, 6, 6, 100862), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 101179), 'resources_id': 1658}
2025-10-28 08:06:06,101 INFO sqlalchemy.engine.Engine: INSERT INTO resource_states (sync_snapshot_id, resource_id, provider_resource_id, resource_type, resource_name, state_action, previous_state, current_state, changes_detected, service_name, region, status, effective_cost, has_cost_change, has_status_change, has_config_change, created_at, updated_at) VALUES (%(sync_snapshot_id)s, %(resource_id)s, %(provider_resource_id)s, %(resource_type)s, %(resource_name)s, %(state_action)s, %(previous_state)s, %(current_state)s, %(changes_detected)s, %(service_name)s, %(region)s, %(status)s, %(effective_cost)s, %(has_cost_change)s, %(has_status_change)s, %(has_config_change)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:06,101 INFO sqlalchemy.engine.Engine: [cached since 30.95s ago] {'sync_snapshot_id': 8367, 'resource_id': 1658, 'provider_resource_id': 'epdico47n8b1knml7deb', 'resource_type': 'server', 'resource_name': 'gateway', 'state_action': 'updated', 'previous_state': '{"id": 1658, "provider_id": 150, "resource_id": "epdico47n8b1knml7deb", "resource_name": "gateway", "region": "ru-central1-b", "external_ip": "84.252 ... (2252 characters truncated) ... 22-03-11T20:57:30Z", "platform_id": "standard-v3", "estimated_cost": true}, "created_at": "2025-10-27T20:07:34", "updated_at": "2025-10-27T22:43:36"}', 'current_state': '{"resource_id": "epdico47n8b1knml7deb", "resource_name": "gateway", "resource_type": "server", "service_name": "Compute Cloud", "region": "ru-central ... (1899 characters truncated) ... 2ldgki3ojkgcj6uh03j"}], "created_at": "2022-03-11T20:57:30Z", "platform_id": "standard-v3", "estimated_cost": true}, "external_ip": "84.252.138.234"}', 'changes_detected': '{"effective_cost": {"previous": 91.8, "current": 0.0}}', 'service_name': 'Compute Cloud', 'region': 'ru-central1-b', 'status': 'RUNNING', 'effective_cost': 0.0, 'has_cost_change': 1, 'has_status_change': 0, 'has_config_change': 0, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 101708), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 101709)}
2025-10-28 08:06:06,102 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:06:06,103 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:06:06,103 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:06,103 INFO sqlalchemy.engine.Engine: [cached since 3.026s ago] {'pk_1': 1658}
2025-10-28 08:06:06,104 INFO sqlalchemy.engine.Engine: UPDATE resources SET external_ip=%(external_ip)s, effective_cost=%(effective_cost)s, currency=%(currency)s, daily_cost=%(daily_cost)s, original_cost=%(original_cost)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:06:06,104 INFO sqlalchemy.engine.Engine: [cached since 3.024s ago] {'external_ip': '84.252.138.234', 'effective_cost': 68.9, 'currency': 'RUB', 'daily_cost': 68.9, 'original_cost': 2067.0, 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 103998), 'resources_id': 1658}
2025-10-28 08:06:06,104 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:06,104 INFO sqlalchemy.engine.Engine: [cached since 3.027s ago] {'pk_1': 1658}
2025-10-28 08:06:06,105 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,105 INFO sqlalchemy.engine.Engine: [cached since 41.56s ago] {'resource_id_1': 1658, 'tag_key_1': 'folder_id', 'param_1': 1}
2025-10-28 08:06:06,105 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,105 INFO sqlalchemy.engine.Engine: [cached since 41.56s ago] {'resource_id_1': 1658, 'tag_key_1': 'folder_name', 'param_1': 1}
2025-10-28 08:06:06,106 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,106 INFO sqlalchemy.engine.Engine: [cached since 41.56s ago] {'resource_id_1': 1658, 'tag_key_1': 'cloud_id', 'param_1': 1}
2025-10-28 08:06:06,106 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,107 INFO sqlalchemy.engine.Engine: [cached since 41.56s ago] {'resource_id_1': 1658, 'tag_key_1': 'cost_source', 'param_1': 1}
2025-10-28 08:06:06,107 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,107 INFO sqlalchemy.engine.Engine: [cached since 41.56s ago] {'resource_id_1': 1658, 'tag_key_1': 'platform_id', 'param_1': 1}
2025-10-28 08:06:06,108 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_status AS sync_snapshots_sync_status, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_completed_at AS sync_snapshots_sync_completed_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.total_resources_found AS sync_snapshots_total_resources_found, sync_snapshots.resources_created AS sync_snapshots_resources_created, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:06:06,108 INFO sqlalchemy.engine.Engine: [cached since 41.47s ago] {'pk_1': 8367}
2025-10-28 08:06:06,108 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:06:06,108 INFO sqlalchemy.engine.Engine: [cached since 45.43s ago] {'pk_1': 150}
2025-10-28 08:06:06,109 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.provider_id = %(provider_id_1)s AND resources.resource_id = %(resource_id_1)s AND resources.resource_type = %(resource_type_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,109 INFO sqlalchemy.engine.Engine: [cached since 3.043s ago] {'provider_id_1': 150, 'resource_id_1': 'epdm6n7nmqdcfr6l2h3j', 'resource_type_1': 'server', 'param_1': 1}
2025-10-28 08:06:06,110 INFO sqlalchemy.engine.Engine: UPDATE resources SET last_sync=%(last_sync)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:06:06,110 INFO sqlalchemy.engine.Engine: [cached since 3.04s ago] {'last_sync': datetime.datetime(2025, 10, 28, 8, 6, 6, 110206), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 110492), 'resources_id': 1659}
2025-10-28 08:06:06,110 INFO sqlalchemy.engine.Engine: INSERT INTO resource_states (sync_snapshot_id, resource_id, provider_resource_id, resource_type, resource_name, state_action, previous_state, current_state, changes_detected, service_name, region, status, effective_cost, has_cost_change, has_status_change, has_config_change, created_at, updated_at) VALUES (%(sync_snapshot_id)s, %(resource_id)s, %(provider_resource_id)s, %(resource_type)s, %(resource_name)s, %(state_action)s, %(previous_state)s, %(current_state)s, %(changes_detected)s, %(service_name)s, %(region)s, %(status)s, %(effective_cost)s, %(has_cost_change)s, %(has_status_change)s, %(has_config_change)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:06,111 INFO sqlalchemy.engine.Engine: [cached since 30.96s ago] {'sync_snapshot_id': 8367, 'resource_id': 1659, 'provider_resource_id': 'epdm6n7nmqdcfr6l2h3j', 'resource_type': 'server', 'resource_name': 'database', 'state_action': 'updated', 'previous_state': '{"id": 1659, "provider_id": 150, "resource_id": "epdm6n7nmqdcfr6l2h3j", "resource_name": "database", "region": "ru-central1-b", "external_ip": null,  ... (2087 characters truncated) ... 22-03-11T20:57:30Z", "platform_id": "standard-v3", "estimated_cost": true}, "created_at": "2025-10-27T20:07:34", "updated_at": "2025-10-27T22:43:36"}', 'current_state': '{"resource_id": "epdm6n7nmqdcfr6l2h3j", "resource_name": "database", "resource_type": "server", "service_name": "Compute Cloud", "region": "ru-centra ... (1733 characters truncated) ... ubnetId": "e2l79kdq43nqhds27v1j"}], "created_at": "2022-03-11T20:57:30Z", "platform_id": "standard-v3", "estimated_cost": true}, "external_ip": null}', 'changes_detected': '{"effective_cost": {"previous": 141.6, "current": 0.0}}', 'service_name': 'Compute Cloud', 'region': 'ru-central1-b', 'status': 'RUNNING', 'effective_cost': 0.0, 'has_cost_change': 1, 'has_status_change': 0, 'has_config_change': 0, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 110973), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 110974)}
2025-10-28 08:06:06,111 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:06:06,113 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:06:06,113 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:06,113 INFO sqlalchemy.engine.Engine: [cached since 3.035s ago] {'pk_1': 1659}
2025-10-28 08:06:06,113 INFO sqlalchemy.engine.Engine: UPDATE resources SET external_ip=%(external_ip)s, effective_cost=%(effective_cost)s, currency=%(currency)s, daily_cost=%(daily_cost)s, original_cost=%(original_cost)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:06:06,113 INFO sqlalchemy.engine.Engine: [cached since 3.034s ago] {'external_ip': None, 'effective_cost': 74.06, 'currency': 'RUB', 'daily_cost': 74.06, 'original_cost': 2221.8, 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 113818), 'resources_id': 1659}
2025-10-28 08:06:06,114 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:06,114 INFO sqlalchemy.engine.Engine: [cached since 3.036s ago] {'pk_1': 1659}
2025-10-28 08:06:06,115 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,115 INFO sqlalchemy.engine.Engine: [cached since 41.57s ago] {'resource_id_1': 1659, 'tag_key_1': 'folder_id', 'param_1': 1}
2025-10-28 08:06:06,115 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,115 INFO sqlalchemy.engine.Engine: [cached since 41.57s ago] {'resource_id_1': 1659, 'tag_key_1': 'folder_name', 'param_1': 1}
2025-10-28 08:06:06,116 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,116 INFO sqlalchemy.engine.Engine: [cached since 41.57s ago] {'resource_id_1': 1659, 'tag_key_1': 'cloud_id', 'param_1': 1}
2025-10-28 08:06:06,116 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,116 INFO sqlalchemy.engine.Engine: [cached since 41.57s ago] {'resource_id_1': 1659, 'tag_key_1': 'cost_source', 'param_1': 1}
2025-10-28 08:06:06,117 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,117 INFO sqlalchemy.engine.Engine: [cached since 41.57s ago] {'resource_id_1': 1659, 'tag_key_1': 'platform_id', 'param_1': 1}
2025-10-28 08:06:06,118 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_status AS sync_snapshots_sync_status, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_completed_at AS sync_snapshots_sync_completed_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.total_resources_found AS sync_snapshots_total_resources_found, sync_snapshots.resources_created AS sync_snapshots_resources_created, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:06:06,118 INFO sqlalchemy.engine.Engine: [cached since 41.48s ago] {'pk_1': 8367}
2025-10-28 08:06:06,118 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:06:06,118 INFO sqlalchemy.engine.Engine: [cached since 45.44s ago] {'pk_1': 150}
2025-10-28 08:06:06,119 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.provider_id = %(provider_id_1)s AND resources.resource_id = %(resource_id_1)s AND resources.resource_type = %(resource_type_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,119 INFO sqlalchemy.engine.Engine: [cached since 3.053s ago] {'provider_id_1': 150, 'resource_id_1': 'epdrpo30qthvvdoi88id', 'resource_type_1': 'server', 'param_1': 1}
2025-10-28 08:06:06,120 INFO sqlalchemy.engine.Engine: UPDATE resources SET last_sync=%(last_sync)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:06:06,120 INFO sqlalchemy.engine.Engine: [cached since 3.05s ago] {'last_sync': datetime.datetime(2025, 10, 28, 8, 6, 6, 120006), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 120281), 'resources_id': 1663}
2025-10-28 08:06:06,120 INFO sqlalchemy.engine.Engine: INSERT INTO resource_states (sync_snapshot_id, resource_id, provider_resource_id, resource_type, resource_name, state_action, previous_state, current_state, changes_detected, service_name, region, status, effective_cost, has_cost_change, has_status_change, has_config_change, created_at, updated_at) VALUES (%(sync_snapshot_id)s, %(resource_id)s, %(provider_resource_id)s, %(resource_type)s, %(resource_name)s, %(state_action)s, %(previous_state)s, %(current_state)s, %(changes_detected)s, %(service_name)s, %(region)s, %(status)s, %(effective_cost)s, %(has_cost_change)s, %(has_status_change)s, %(has_config_change)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:06,120 INFO sqlalchemy.engine.Engine: [cached since 30.97s ago] {'sync_snapshot_id': 8367, 'resource_id': 1663, 'provider_resource_id': 'epdrpo30qthvvdoi88id', 'resource_type': 'server', 'resource_name': 'bookstack', 'state_action': 'updated', 'previous_state': '{"id": 1663, "provider_id": 150, "resource_id": "epdrpo30qthvvdoi88id", "resource_name": "bookstack", "region": "ru-central1-b", "external_ip": null, ... (2120 characters truncated) ... 24-12-03T08:24:32Z", "platform_id": "standard-v3", "estimated_cost": true}, "created_at": "2025-10-27T20:07:34", "updated_at": "2025-10-27T22:43:36"}', 'current_state': '{"resource_id": "epdrpo30qthvvdoi88id", "resource_name": "bookstack", "resource_type": "server", "service_name": "Compute Cloud", "region": "ru-centr ... (1766 characters truncated) ... ubnetId": "e2l79kdq43nqhds27v1j"}], "created_at": "2024-12-03T08:24:32Z", "platform_id": "standard-v3", "estimated_cost": true}, "external_ip": null}', 'changes_detected': '{"effective_cost": {"previous": 113.4, "current": 0.0}}', 'service_name': 'Compute Cloud', 'region': 'ru-central1-b', 'status': 'RUNNING', 'effective_cost': 0.0, 'has_cost_change': 1, 'has_status_change': 0, 'has_config_change': 0, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 120832), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 120833)}
2025-10-28 08:06:06,121 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:06:06,122 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:06:06,122 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:06,123 INFO sqlalchemy.engine.Engine: [cached since 3.045s ago] {'pk_1': 1663}
2025-10-28 08:06:06,123 INFO sqlalchemy.engine.Engine: UPDATE resources SET external_ip=%(external_ip)s, effective_cost=%(effective_cost)s, currency=%(currency)s, daily_cost=%(daily_cost)s, original_cost=%(original_cost)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:06:06,123 INFO sqlalchemy.engine.Engine: [cached since 3.044s ago] {'external_ip': None, 'effective_cost': 86.24, 'currency': 'RUB', 'daily_cost': 86.24, 'original_cost': 2587.2, 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 123560), 'resources_id': 1663}
2025-10-28 08:06:06,124 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:06,124 INFO sqlalchemy.engine.Engine: [cached since 3.046s ago] {'pk_1': 1663}
2025-10-28 08:06:06,124 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,124 INFO sqlalchemy.engine.Engine: [cached since 41.58s ago] {'resource_id_1': 1663, 'tag_key_1': 'folder_id', 'param_1': 1}
2025-10-28 08:06:06,125 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,125 INFO sqlalchemy.engine.Engine: [cached since 41.58s ago] {'resource_id_1': 1663, 'tag_key_1': 'folder_name', 'param_1': 1}
2025-10-28 08:06:06,126 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,126 INFO sqlalchemy.engine.Engine: [cached since 41.58s ago] {'resource_id_1': 1663, 'tag_key_1': 'cloud_id', 'param_1': 1}
2025-10-28 08:06:06,126 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,126 INFO sqlalchemy.engine.Engine: [cached since 41.58s ago] {'resource_id_1': 1663, 'tag_key_1': 'cost_source', 'param_1': 1}
2025-10-28 08:06:06,127 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,127 INFO sqlalchemy.engine.Engine: [cached since 41.58s ago] {'resource_id_1': 1663, 'tag_key_1': 'platform_id', 'param_1': 1}
2025-10-28 08:06:06,127 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_status AS sync_snapshots_sync_status, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_completed_at AS sync_snapshots_sync_completed_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.total_resources_found AS sync_snapshots_total_resources_found, sync_snapshots.resources_created AS sync_snapshots_resources_created, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:06:06,127 INFO sqlalchemy.engine.Engine: [cached since 41.49s ago] {'pk_1': 8367}
2025-10-28 08:06:06,128 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:06:06,128 INFO sqlalchemy.engine.Engine: [cached since 45.45s ago] {'pk_1': 150}
2025-10-28 08:06:06,129 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.provider_id = %(provider_id_1)s AND resources.resource_id = %(resource_id_1)s AND resources.resource_type = %(resource_type_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,129 INFO sqlalchemy.engine.Engine: [cached since 3.063s ago] {'provider_id_1': 150, 'resource_id_1': 'epdthnrqjkb3s3q5osqn', 'resource_type_1': 'server', 'param_1': 1}
2025-10-28 08:06:06,130 INFO sqlalchemy.engine.Engine: UPDATE resources SET last_sync=%(last_sync)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:06:06,130 INFO sqlalchemy.engine.Engine: [cached since 3.059s ago] {'last_sync': datetime.datetime(2025, 10, 28, 8, 6, 6, 129815), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 130106), 'resources_id': 1664}
2025-10-28 08:06:06,130 INFO sqlalchemy.engine.Engine: INSERT INTO resource_states (sync_snapshot_id, resource_id, provider_resource_id, resource_type, resource_name, state_action, previous_state, current_state, changes_detected, service_name, region, status, effective_cost, has_cost_change, has_status_change, has_config_change, created_at, updated_at) VALUES (%(sync_snapshot_id)s, %(resource_id)s, %(provider_resource_id)s, %(resource_type)s, %(resource_name)s, %(state_action)s, %(previous_state)s, %(current_state)s, %(changes_detected)s, %(service_name)s, %(region)s, %(status)s, %(effective_cost)s, %(has_cost_change)s, %(has_status_change)s, %(has_config_change)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:06,130 INFO sqlalchemy.engine.Engine: [cached since 30.98s ago] {'sync_snapshot_id': 8367, 'resource_id': 1664, 'provider_resource_id': 'epdthnrqjkb3s3q5osqn', 'resource_type': 'server', 'resource_name': 'chartsstorage', 'state_action': 'updated', 'previous_state': '{"id": 1664, "provider_id": 150, "resource_id": "epdthnrqjkb3s3q5osqn", "resource_name": "chartsstorage", "region": "ru-central1-b", "external_ip": n ... (2368 characters truncated) ... 25-03-11T10:36:45Z", "platform_id": "standard-v3", "estimated_cost": true}, "created_at": "2025-10-27T20:07:34", "updated_at": "2025-10-27T22:43:36"}', 'current_state': '{"resource_id": "epdthnrqjkb3s3q5osqn", "resource_name": "chartsstorage", "resource_type": "server", "service_name": "Compute Cloud", "region": "ru-c ... (2014 characters truncated) ... ubnetId": "e2l79kdq43nqhds27v1j"}], "created_at": "2025-03-11T10:36:45Z", "platform_id": "standard-v3", "estimated_cost": true}, "external_ip": null}', 'changes_detected': '{"effective_cost": {"previous": 286.8, "current": 0.0}}', 'service_name': 'Compute Cloud', 'region': 'ru-central1-b', 'status': 'RUNNING', 'effective_cost': 0.0, 'has_cost_change': 1, 'has_status_change': 0, 'has_config_change': 0, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 130590), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 130591)}
2025-10-28 08:06:06,131 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:06:06,132 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:06:06,132 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:06,132 INFO sqlalchemy.engine.Engine: [cached since 3.055s ago] {'pk_1': 1664}
2025-10-28 08:06:06,133 INFO sqlalchemy.engine.Engine: UPDATE resources SET external_ip=%(external_ip)s, effective_cost=%(effective_cost)s, currency=%(currency)s, daily_cost=%(daily_cost)s, original_cost=%(original_cost)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:06:06,133 INFO sqlalchemy.engine.Engine: [cached since 3.054s ago] {'external_ip': None, 'effective_cost': 494.59, 'currency': 'RUB', 'daily_cost': 494.59, 'original_cost': 14837.699999999999, 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 133337), 'resources_id': 1664}
2025-10-28 08:06:06,133 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:06,133 INFO sqlalchemy.engine.Engine: [cached since 3.056s ago] {'pk_1': 1664}
2025-10-28 08:06:06,134 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,134 INFO sqlalchemy.engine.Engine: [cached since 41.59s ago] {'resource_id_1': 1664, 'tag_key_1': 'folder_id', 'param_1': 1}
2025-10-28 08:06:06,135 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,135 INFO sqlalchemy.engine.Engine: [cached since 41.59s ago] {'resource_id_1': 1664, 'tag_key_1': 'folder_name', 'param_1': 1}
2025-10-28 08:06:06,135 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,135 INFO sqlalchemy.engine.Engine: [cached since 41.59s ago] {'resource_id_1': 1664, 'tag_key_1': 'cloud_id', 'param_1': 1}
2025-10-28 08:06:06,136 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,136 INFO sqlalchemy.engine.Engine: [cached since 41.59s ago] {'resource_id_1': 1664, 'tag_key_1': 'cost_source', 'param_1': 1}
2025-10-28 08:06:06,136 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,137 INFO sqlalchemy.engine.Engine: [cached since 41.59s ago] {'resource_id_1': 1664, 'tag_key_1': 'platform_id', 'param_1': 1}
2025-10-28 08:06:06,137 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_status AS sync_snapshots_sync_status, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_completed_at AS sync_snapshots_sync_completed_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.total_resources_found AS sync_snapshots_total_resources_found, sync_snapshots.resources_created AS sync_snapshots_resources_created, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:06:06,137 INFO sqlalchemy.engine.Engine: [cached since 41.5s ago] {'pk_1': 8367}
2025-10-28 08:06:06,138 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:06:06,138 INFO sqlalchemy.engine.Engine: [cached since 45.46s ago] {'pk_1': 150}
2025-10-28 08:06:06,138 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.provider_id = %(provider_id_1)s AND resources.resource_id = %(resource_id_1)s AND resources.resource_type = %(resource_type_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,138 INFO sqlalchemy.engine.Engine: [cached since 3.072s ago] {'provider_id_1': 150, 'resource_id_1': 'fv4hlo833lgm0oomhsi4', 'resource_type_1': 'server', 'param_1': 1}
2025-10-28 08:06:06,139 INFO sqlalchemy.engine.Engine: UPDATE resources SET last_sync=%(last_sync)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:06:06,139 INFO sqlalchemy.engine.Engine: [cached since 3.069s ago] {'last_sync': datetime.datetime(2025, 10, 28, 8, 6, 6, 139485), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 139766), 'resources_id': 1666}
2025-10-28 08:06:06,140 INFO sqlalchemy.engine.Engine: INSERT INTO resource_states (sync_snapshot_id, resource_id, provider_resource_id, resource_type, resource_name, state_action, previous_state, current_state, changes_detected, service_name, region, status, effective_cost, has_cost_change, has_status_change, has_config_change, created_at, updated_at) VALUES (%(sync_snapshot_id)s, %(resource_id)s, %(provider_resource_id)s, %(resource_type)s, %(resource_name)s, %(state_action)s, %(previous_state)s, %(current_state)s, %(changes_detected)s, %(service_name)s, %(region)s, %(status)s, %(effective_cost)s, %(has_cost_change)s, %(has_status_change)s, %(has_config_change)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:06,140 INFO sqlalchemy.engine.Engine: [cached since 30.99s ago] {'sync_snapshot_id': 8367, 'resource_id': 1666, 'provider_resource_id': 'fv4hlo833lgm0oomhsi4', 'resource_type': 'server', 'resource_name': 'duktusdemo', 'state_action': 'updated', 'previous_state': '{"id": 1666, "provider_id": 150, "resource_id": "fv4hlo833lgm0oomhsi4", "resource_name": "duktusdemo", "region": "ru-central1-d", "external_ip": "51. ... (2302 characters truncated) ... 24-09-03T12:42:46Z", "platform_id": "standard-v3", "estimated_cost": true}, "created_at": "2025-10-27T20:07:34", "updated_at": "2025-10-27T22:43:36"}', 'current_state': '{"resource_id": "fv4hlo833lgm0oomhsi4", "resource_name": "duktusdemo", "resource_type": "server", "service_name": "Compute Cloud", "region": "ru-cent ... (1948 characters truncated) ... fl81ujmm84pm0su8u4n9"}], "created_at": "2024-09-03T12:42:46Z", "platform_id": "standard-v3", "estimated_cost": true}, "external_ip": "51.250.45.122"}', 'changes_detected': '{"effective_cost": {"previous": 453.6, "current": 0.0}}', 'service_name': 'Compute Cloud', 'region': 'ru-central1-d', 'status': 'STOPPED', 'effective_cost': 0.0, 'has_cost_change': 1, 'has_status_change': 0, 'has_config_change': 0, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 140214), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 140215)}
2025-10-28 08:06:06,140 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:06:06,142 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:06:06,142 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:06,142 INFO sqlalchemy.engine.Engine: [cached since 3.065s ago] {'pk_1': 1666}
2025-10-28 08:06:06,143 INFO sqlalchemy.engine.Engine: UPDATE resources SET external_ip=%(external_ip)s, effective_cost=%(effective_cost)s, currency=%(currency)s, daily_cost=%(daily_cost)s, original_cost=%(original_cost)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:06:06,143 INFO sqlalchemy.engine.Engine: [cached since 3.063s ago] {'external_ip': '51.250.45.122', 'effective_cost': 344.97, 'currency': 'RUB', 'daily_cost': 344.97, 'original_cost': 10349.1, 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 143063), 'resources_id': 1666}
2025-10-28 08:06:06,143 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:06,143 INFO sqlalchemy.engine.Engine: [cached since 3.066s ago] {'pk_1': 1666}
2025-10-28 08:06:06,144 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,144 INFO sqlalchemy.engine.Engine: [cached since 41.6s ago] {'resource_id_1': 1666, 'tag_key_1': 'folder_id', 'param_1': 1}
2025-10-28 08:06:06,145 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,145 INFO sqlalchemy.engine.Engine: [cached since 41.6s ago] {'resource_id_1': 1666, 'tag_key_1': 'folder_name', 'param_1': 1}
2025-10-28 08:06:06,145 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,145 INFO sqlalchemy.engine.Engine: [cached since 41.6s ago] {'resource_id_1': 1666, 'tag_key_1': 'cloud_id', 'param_1': 1}
2025-10-28 08:06:06,146 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,146 INFO sqlalchemy.engine.Engine: [cached since 41.6s ago] {'resource_id_1': 1666, 'tag_key_1': 'cost_source', 'param_1': 1}
2025-10-28 08:06:06,146 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,147 INFO sqlalchemy.engine.Engine: [cached since 41.6s ago] {'resource_id_1': 1666, 'tag_key_1': 'platform_id', 'param_1': 1}
2025-10-28 08:06:06,147 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_status AS sync_snapshots_sync_status, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_completed_at AS sync_snapshots_sync_completed_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.total_resources_found AS sync_snapshots_total_resources_found, sync_snapshots.resources_created AS sync_snapshots_resources_created, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:06:06,147 INFO sqlalchemy.engine.Engine: [cached since 41.51s ago] {'pk_1': 8367}
2025-10-28 08:06:06,148 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:06:06,148 INFO sqlalchemy.engine.Engine: [cached since 45.47s ago] {'pk_1': 150}
2025-10-28 08:06:06,148 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.provider_id = %(provider_id_1)s AND resources.resource_id = %(resource_id_1)s AND resources.resource_type = %(resource_type_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,148 INFO sqlalchemy.engine.Engine: [cached since 3.082s ago] {'provider_id_1': 150, 'resource_id_1': 'epdkg8v4dtq4jjpojvdp', 'resource_type_1': 'volume', 'param_1': 1}
2025-10-28 08:06:06,149 INFO sqlalchemy.engine.Engine: UPDATE resources SET last_sync=%(last_sync)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:06:06,150 INFO sqlalchemy.engine.Engine: [cached since 3.079s ago] {'last_sync': datetime.datetime(2025, 10, 28, 8, 6, 6, 149676), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 149958), 'resources_id': 1669}
2025-10-28 08:06:06,150 INFO sqlalchemy.engine.Engine: INSERT INTO resource_states (sync_snapshot_id, resource_id, provider_resource_id, resource_type, resource_name, state_action, previous_state, current_state, changes_detected, service_name, region, status, effective_cost, has_cost_change, has_status_change, has_config_change, created_at, updated_at) VALUES (%(sync_snapshot_id)s, %(resource_id)s, %(provider_resource_id)s, %(resource_type)s, %(resource_name)s, %(state_action)s, %(previous_state)s, %(current_state)s, %(changes_detected)s, %(service_name)s, %(region)s, %(status)s, %(effective_cost)s, %(has_cost_change)s, %(has_status_change)s, %(has_config_change)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:06,150 INFO sqlalchemy.engine.Engine: [cached since 31s ago] {'sync_snapshot_id': 8367, 'resource_id': 1669, 'provider_resource_id': 'epdkg8v4dtq4jjpojvdp', 'resource_type': 'volume', 'resource_name': 'newgitdisk', 'state_action': 'updated', 'previous_state': '{"id": 1669, "provider_id": 150, "resource_id": "epdkg8v4dtq4jjpojvdp", "resource_name": "newgitdisk", "region": "ru-central1-b", "external_ip": null ... (997 characters truncated) ... t": "2024-09-04T13:07:15Z", "is_standalone": true, "estimated_cost": true}, "created_at": "2025-10-27T20:07:34", "updated_at": "2025-10-27T22:43:36"}', 'current_state': '{"resource_id": "epdkg8v4dtq4jjpojvdp", "resource_name": "newgitdisk", "resource_type": "volume", "service_name": "Block Storage", "region": "ru-cent ... (643 characters truncated) ... ze_gb": 512.0, "disk_type": "network-ssd", "created_at": "2024-09-04T13:07:15Z", "is_standalone": true, "estimated_cost": true}, "external_ip": null}', 'changes_detected': '{"effective_cost": {"previous": 61.44, "current": 0.0}}', 'service_name': 'Block Storage', 'region': 'ru-central1-b', 'status': 'RUNNING', 'effective_cost': 0.0, 'has_cost_change': 1, 'has_status_change': 0, 'has_config_change': 0, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 150495), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 150496)}
2025-10-28 08:06:06,151 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:06:06,152 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:06:06,152 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:06,152 INFO sqlalchemy.engine.Engine: [cached since 15.75s ago] {'pk_1': 1669}
2025-10-28 08:06:06,153 INFO sqlalchemy.engine.Engine: UPDATE resources SET status=%(status)s, effective_cost=%(effective_cost)s, currency=%(currency)s, daily_cost=%(daily_cost)s, original_cost=%(original_cost)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:06:06,153 INFO sqlalchemy.engine.Engine: [cached since 15.75s ago] {'status': 'RUNNING', 'effective_cost': 153.35, 'currency': 'RUB', 'daily_cost': 153.35, 'original_cost': 4600.5, 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 153084), 'resources_id': 1669}
2025-10-28 08:06:06,153 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:06,153 INFO sqlalchemy.engine.Engine: [cached since 15.75s ago] {'pk_1': 1669}
2025-10-28 08:06:06,154 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,154 INFO sqlalchemy.engine.Engine: [cached since 41.61s ago] {'resource_id_1': 1669, 'tag_key_1': 'folder_id', 'param_1': 1}
2025-10-28 08:06:06,154 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,155 INFO sqlalchemy.engine.Engine: [cached since 41.61s ago] {'resource_id_1': 1669, 'tag_key_1': 'folder_name', 'param_1': 1}
2025-10-28 08:06:06,155 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,155 INFO sqlalchemy.engine.Engine: [cached since 41.61s ago] {'resource_id_1': 1669, 'tag_key_1': 'cloud_id', 'param_1': 1}
2025-10-28 08:06:06,156 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,156 INFO sqlalchemy.engine.Engine: [cached since 41.61s ago] {'resource_id_1': 1669, 'tag_key_1': 'cost_source', 'param_1': 1}
2025-10-28 08:06:06,156 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,156 INFO sqlalchemy.engine.Engine: [cached since 41.61s ago] {'resource_id_1': 1669, 'tag_key_1': 'disk_type', 'param_1': 1}
2025-10-28 08:06:06,157 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,157 INFO sqlalchemy.engine.Engine: [cached since 41.61s ago] {'resource_id_1': 1669, 'tag_key_1': 'is_orphan', 'param_1': 1}
2025-10-28 08:06:06,157 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_status AS sync_snapshots_sync_status, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_completed_at AS sync_snapshots_sync_completed_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.total_resources_found AS sync_snapshots_total_resources_found, sync_snapshots.resources_created AS sync_snapshots_resources_created, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:06:06,157 INFO sqlalchemy.engine.Engine: [cached since 41.52s ago] {'pk_1': 8367}
2025-10-28 08:06:06,158 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:06:06,158 INFO sqlalchemy.engine.Engine: [cached since 45.48s ago] {'pk_1': 150}
2025-10-28 08:06:06,159 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.provider_id = %(provider_id_1)s AND resources.resource_id = %(resource_id_1)s AND resources.resource_type = %(resource_type_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,159 INFO sqlalchemy.engine.Engine: [cached since 3.093s ago] {'provider_id_1': 150, 'resource_id_1': 'epdq5sqmrpthr62l13jm', 'resource_type_1': 'volume', 'param_1': 1}
2025-10-28 08:06:06,159 INFO sqlalchemy.engine.Engine: UPDATE resources SET last_sync=%(last_sync)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:06:06,159 INFO sqlalchemy.engine.Engine: [cached since 3.089s ago] {'last_sync': datetime.datetime(2025, 10, 28, 8, 6, 6, 159607), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 159836), 'resources_id': 1671}
2025-10-28 08:06:06,160 INFO sqlalchemy.engine.Engine: INSERT INTO resource_states (sync_snapshot_id, resource_id, provider_resource_id, resource_type, resource_name, state_action, previous_state, current_state, changes_detected, service_name, region, status, effective_cost, has_cost_change, has_status_change, has_config_change, created_at, updated_at) VALUES (%(sync_snapshot_id)s, %(resource_id)s, %(provider_resource_id)s, %(resource_type)s, %(resource_name)s, %(state_action)s, %(previous_state)s, %(current_state)s, %(changes_detected)s, %(service_name)s, %(region)s, %(status)s, %(effective_cost)s, %(has_cost_change)s, %(has_status_change)s, %(has_config_change)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:06,160 INFO sqlalchemy.engine.Engine: [cached since 31.01s ago] {'sync_snapshot_id': 8367, 'resource_id': 1671, 'provider_resource_id': 'epdq5sqmrpthr62l13jm', 'resource_type': 'volume', 'resource_name': 'grafana', 'state_action': 'updated', 'previous_state': '{"id": 1671, "provider_id": 150, "resource_id": "epdq5sqmrpthr62l13jm", "resource_name": "grafana", "region": "ru-central1-b", "external_ip": null, " ... (956 characters truncated) ... t": "2022-03-24T18:05:23Z", "is_standalone": true, "estimated_cost": true}, "created_at": "2025-10-27T20:07:34", "updated_at": "2025-10-27T22:43:36"}', 'current_state': '{"resource_id": "epdq5sqmrpthr62l13jm", "resource_name": "grafana", "resource_type": "volume", "service_name": "Block Storage", "region": "ru-central ... (603 characters truncated) ... ize_gb": 30.0, "disk_type": "network-hdd", "created_at": "2022-03-24T18:05:23Z", "is_standalone": true, "estimated_cost": true}, "external_ip": null}', 'changes_detected': '{"effective_cost": {"previous": 1.08, "current": 0.0}}', 'service_name': 'Block Storage', 'region': 'ru-central1-b', 'status': 'RUNNING', 'effective_cost': 0.0, 'has_cost_change': 1, 'has_status_change': 0, 'has_config_change': 0, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 160299), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 160300)}
2025-10-28 08:06:06,160 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:06:06,161 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:06:06,161 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:06,161 INFO sqlalchemy.engine.Engine: [cached since 15.76s ago] {'pk_1': 1671}
2025-10-28 08:06:06,162 INFO sqlalchemy.engine.Engine: UPDATE resources SET status=%(status)s, effective_cost=%(effective_cost)s, currency=%(currency)s, daily_cost=%(daily_cost)s, original_cost=%(original_cost)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:06:06,162 INFO sqlalchemy.engine.Engine: [cached since 15.76s ago] {'status': 'RUNNING', 'effective_cost': 2.21, 'currency': 'RUB', 'daily_cost': 2.21, 'original_cost': 66.3, 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 162544), 'resources_id': 1671}
2025-10-28 08:06:06,163 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.billing_period AS resources_billing_period, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:06,163 INFO sqlalchemy.engine.Engine: [cached since 15.76s ago] {'pk_1': 1671}
2025-10-28 08:06:06,163 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,163 INFO sqlalchemy.engine.Engine: [cached since 41.62s ago] {'resource_id_1': 1671, 'tag_key_1': 'folder_id', 'param_1': 1}
2025-10-28 08:06:06,164 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,164 INFO sqlalchemy.engine.Engine: [cached since 41.62s ago] {'resource_id_1': 1671, 'tag_key_1': 'folder_name', 'param_1': 1}
2025-10-28 08:06:06,164 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,164 INFO sqlalchemy.engine.Engine: [cached since 41.62s ago] {'resource_id_1': 1671, 'tag_key_1': 'cloud_id', 'param_1': 1}
2025-10-28 08:06:06,165 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,165 INFO sqlalchemy.engine.Engine: [cached since 41.62s ago] {'resource_id_1': 1671, 'tag_key_1': 'cost_source', 'param_1': 1}
2025-10-28 08:06:06,165 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,165 INFO sqlalchemy.engine.Engine: [cached since 41.62s ago] {'resource_id_1': 1671, 'tag_key_1': 'disk_type', 'param_1': 1}
2025-10-28 08:06:06,166 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,166 INFO sqlalchemy.engine.Engine: [cached since 41.62s ago] {'resource_id_1': 1671, 'tag_key_1': 'is_orphan', 'param_1': 1}
2025-10-28 08:06:06,167 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:06:06,167 INFO sqlalchemy.engine.Engine: [cached since 4.606s ago] {'pk_1': 8367}
2025-10-28 08:06:06,167 INFO sqlalchemy.engine.Engine: UPDATE sync_snapshots SET sync_status=%(sync_status)s, sync_completed_at=%(sync_completed_at)s, total_resources_found=%(total_resources_found)s, resources_created=%(resources_created)s, updated_at=%(updated_at)s WHERE sync_snapshots.id = %(sync_snapshots_id)s
2025-10-28 08:06:06,167 INFO sqlalchemy.engine.Engine: [cached since 4.605s ago] {'sync_status': 'success', 'sync_completed_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 166881), 'total_resources_found': 16, 'resources_created': 16, 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 167569), 'sync_snapshots_id': 8367}
2025-10-28 08:06:06,168 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:06:06,168 INFO sqlalchemy.engine.Engine: [cached since 4.607s ago] {'pk_1': 8367}
2025-10-28 08:06:06,168 INFO sqlalchemy.engine.Engine: UPDATE sync_snapshots SET sync_duration_seconds=%(sync_duration_seconds)s, sync_config=%(sync_config)s, updated_at=%(updated_at)s WHERE sync_snapshots.id = %(sync_snapshots_id)s
2025-10-28 08:06:06,168 INFO sqlalchemy.engine.Engine: [cached since 41.67s ago] {'sync_duration_seconds': 2, 'sync_config': '{"sync_method": "managed_services", "clouds_discovered": 0, "folders_discovered": 1, "total_instances": 11, "total_disks": 2, "total_managed_clusters": 3, "total_estimated_daily_cost": 3911.19}', 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 168663), 'sync_snapshots_id': 8367}
2025-10-28 08:06:06,169 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:06:06,169 INFO sqlalchemy.engine.Engine: [cached since 45.49s ago] {'pk_1': 150}
2025-10-28 08:06:06,169 INFO app.providers.yandex.service: PHASE 3: Performance statistics ENABLED
2025-10-28 08:06:06,169 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:06,169 INFO sqlalchemy.engine.Engine: [cached since 4.613s ago] {'pk_1': 1674}
2025-10-28 08:06:06,170 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:06,170 INFO sqlalchemy.engine.Engine: [cached since 4.614s ago] {'pk_1': 1672}
2025-10-28 08:06:06,171 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:06,171 INFO sqlalchemy.engine.Engine: [cached since 4.614s ago] {'pk_1': 1673}
2025-10-28 08:06:06,171 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:06,171 INFO sqlalchemy.engine.Engine: [cached since 4.615s ago] {'pk_1': 1651}
2025-10-28 08:06:06,172 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:06,172 INFO sqlalchemy.engine.Engine: [cached since 4.616s ago] {'pk_1': 1652}
2025-10-28 08:06:06,172 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:06,173 INFO sqlalchemy.engine.Engine: [cached since 4.616s ago] {'pk_1': 1653}
2025-10-28 08:06:06,173 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:06,173 INFO sqlalchemy.engine.Engine: [cached since 4.617s ago] {'pk_1': 1655}
2025-10-28 08:06:06,174 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:06,174 INFO sqlalchemy.engine.Engine: [cached since 4.618s ago] {'pk_1': 1656}
2025-10-28 08:06:06,174 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:06,174 INFO sqlalchemy.engine.Engine: [cached since 4.618s ago] {'pk_1': 1657}
2025-10-28 08:06:06,175 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:06,175 INFO sqlalchemy.engine.Engine: [cached since 4.619s ago] {'pk_1': 1658}
2025-10-28 08:06:06,175 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:06,176 INFO sqlalchemy.engine.Engine: [cached since 4.619s ago] {'pk_1': 1659}
2025-10-28 08:06:06,176 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:06,176 INFO sqlalchemy.engine.Engine: [cached since 4.62s ago] {'pk_1': 1663}
2025-10-28 08:06:06,177 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:06,177 INFO sqlalchemy.engine.Engine: [cached since 4.62s ago] {'pk_1': 1664}
2025-10-28 08:06:06,177 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:06,177 INFO sqlalchemy.engine.Engine: [cached since 4.621s ago] {'pk_1': 1666}
2025-10-28 08:06:06,178 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:06,178 INFO sqlalchemy.engine.Engine: [cached since 4.622s ago] {'pk_1': 1669}
2025-10-28 08:06:06,179 INFO app.providers.yandex.service: Collecting CPU statistics for 11 standalone VMs...
2025-10-28 08:06:06,778 INFO app.providers.yandex.client: ✅ CPU statistics for epd3fpgd132f9861ol32: avg=0.65%, max=1.37%, 719 points
2025-10-28 08:06:06,782 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,782 INFO sqlalchemy.engine.Engine: [cached since 42.23s ago] {'resource_id_1': 1651, 'tag_key_1': 'cpu_avg_usage', 'param_1': 1}
2025-10-28 08:06:06,785 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,785 INFO sqlalchemy.engine.Engine: [cached since 42.24s ago] {'resource_id_1': 1651, 'tag_key_1': 'cpu_max_usage', 'param_1': 1}
2025-10-28 08:06:06,787 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,787 INFO sqlalchemy.engine.Engine: [cached since 42.24s ago] {'resource_id_1': 1651, 'tag_key_1': 'cpu_min_usage', 'param_1': 1}
2025-10-28 08:06:06,788 INFO sqlalchemy.engine.Engine: UPDATE resource_tags SET tag_value=%(tag_value)s, updated_at=%(updated_at)s WHERE resource_tags.id = %(resource_tags_id)s
2025-10-28 08:06:06,788 INFO sqlalchemy.engine.Engine: [cached since 31.62s ago] {'tag_value': '0.59', 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 6, 788518), 'resource_tags_id': 4647}
2025-10-28 08:06:06,789 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,789 INFO sqlalchemy.engine.Engine: [cached since 42.24s ago] {'resource_id_1': 1651, 'tag_key_1': 'cpu_performance_tier', 'param_1': 1}
2025-10-28 08:06:06,791 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:06,791 INFO sqlalchemy.engine.Engine: [cached since 42.24s ago] {'resource_id_1': 1651, 'tag_key_1': 'cpu_raw_data', 'param_1': 1}
2025-10-28 08:06:06,792 INFO app.providers.yandex.service:    ✅ voluxprod: CPU avg=0.65%
2025-10-28 08:06:07,386 WARNING app.providers.yandex.client: No CPU metrics available for instance epd3j8cejsojkbtbqp0p
2025-10-28 08:06:07,389 WARNING app.providers.yandex.service:    ⚠️  volux: No CPU data available
2025-10-28 08:06:07,911 INFO app.providers.yandex.client: ✅ CPU statistics for epd4eioiv8oqqsp6a7n7: avg=0.27%, max=0.69%, 719 points
2025-10-28 08:06:07,915 INFO sqlalchemy.engine.Engine: UPDATE resource_tags SET tag_value=%(tag_value)s, updated_at=%(updated_at)s WHERE resource_tags.id = %(resource_tags_id)s
2025-10-28 08:06:07,915 INFO sqlalchemy.engine.Engine: [cached since 32.75s ago] {'tag_value': '{"dates": ["2025-09-28", "2025-09-29", "2025-09-30", "2025-10-01", "2025-10-02", "2025-10-03", "2025-10-04", "2025-10-05", "2025-10-06", "2025-10-07" ... (345 characters truncated) ... .64, 0.63, 0.65, 0.63, 0.65, 0.63, 0.66, 0.65, 0.63, 0.65, 0.64, 0.65, 0.64, 0.65, 0.64, 0.63, 0.66, 0.64, 0.66, 0.66, 0.72, 0.69, 0.66, 0.65, 0.64]}', 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 7, 915516), 'resource_tags_id': 4649}
2025-10-28 08:06:07,917 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:07,917 INFO sqlalchemy.engine.Engine: [cached since 43.37s ago] {'resource_id_1': 1653, 'tag_key_1': 'cpu_avg_usage', 'param_1': 1}
2025-10-28 08:06:07,919 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:07,920 INFO sqlalchemy.engine.Engine: [cached since 43.37s ago] {'resource_id_1': 1653, 'tag_key_1': 'cpu_max_usage', 'param_1': 1}
2025-10-28 08:06:07,921 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:07,921 INFO sqlalchemy.engine.Engine: [cached since 43.37s ago] {'resource_id_1': 1653, 'tag_key_1': 'cpu_min_usage', 'param_1': 1}
2025-10-28 08:06:07,922 INFO sqlalchemy.engine.Engine: UPDATE resource_tags SET tag_value=%(tag_value)s, updated_at=%(updated_at)s WHERE resource_tags.id = %(resource_tags_id)s
2025-10-28 08:06:07,922 INFO sqlalchemy.engine.Engine: [cached since 32.76s ago] {'tag_value': '0.12', 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 7, 922618), 'resource_tags_id': 4652}
2025-10-28 08:06:07,923 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:07,923 INFO sqlalchemy.engine.Engine: [cached since 43.38s ago] {'resource_id_1': 1653, 'tag_key_1': 'cpu_performance_tier', 'param_1': 1}
2025-10-28 08:06:07,925 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:07,925 INFO sqlalchemy.engine.Engine: [cached since 43.38s ago] {'resource_id_1': 1653, 'tag_key_1': 'cpu_raw_data', 'param_1': 1}
2025-10-28 08:06:07,926 INFO app.providers.yandex.service:    ✅ office: CPU avg=0.27%
2025-10-28 08:06:08,513 INFO app.providers.yandex.client: ✅ CPU statistics for epdbv1dd3d6jv2ahtn88: avg=7.33%, max=14.12%, 719 points
2025-10-28 08:06:08,516 INFO sqlalchemy.engine.Engine: UPDATE resource_tags SET tag_value=%(tag_value)s, updated_at=%(updated_at)s WHERE resource_tags.id = %(resource_tags_id)s
2025-10-28 08:06:08,517 INFO sqlalchemy.engine.Engine: [cached since 33.35s ago] {'tag_value': '{"dates": ["2025-09-28", "2025-09-29", "2025-09-30", "2025-10-01", "2025-10-02", "2025-10-03", "2025-10-04", "2025-10-05", "2025-10-06", "2025-10-07" ... (345 characters truncated) ... .28, 0.26, 0.28, 0.26, 0.28, 0.27, 0.27, 0.28, 0.26, 0.27, 0.26, 0.28, 0.26, 0.27, 0.27, 0.28, 0.28, 0.27, 0.29, 0.27, 0.27, 0.26, 0.27, 0.27, 0.26]}', 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 8, 516814), 'resource_tags_id': 4654}
2025-10-28 08:06:08,518 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:08,519 INFO sqlalchemy.engine.Engine: [cached since 43.97s ago] {'resource_id_1': 1655, 'tag_key_1': 'cpu_avg_usage', 'param_1': 1}
2025-10-28 08:06:08,520 INFO sqlalchemy.engine.Engine: UPDATE resource_tags SET tag_value=%(tag_value)s, updated_at=%(updated_at)s WHERE resource_tags.id = %(resource_tags_id)s
2025-10-28 08:06:08,521 INFO sqlalchemy.engine.Engine: [cached since 33.36s ago] {'tag_value': '7.33', 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 8, 520896), 'resource_tags_id': 4660}
2025-10-28 08:06:08,522 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:08,522 INFO sqlalchemy.engine.Engine: [cached since 43.97s ago] {'resource_id_1': 1655, 'tag_key_1': 'cpu_max_usage', 'param_1': 1}
2025-10-28 08:06:08,523 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:08,523 INFO sqlalchemy.engine.Engine: [cached since 43.98s ago] {'resource_id_1': 1655, 'tag_key_1': 'cpu_min_usage', 'param_1': 1}
2025-10-28 08:06:08,524 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:08,525 INFO sqlalchemy.engine.Engine: [cached since 43.98s ago] {'resource_id_1': 1655, 'tag_key_1': 'cpu_performance_tier', 'param_1': 1}
2025-10-28 08:06:08,526 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:08,526 INFO sqlalchemy.engine.Engine: [cached since 43.98s ago] {'resource_id_1': 1655, 'tag_key_1': 'cpu_raw_data', 'param_1': 1}
2025-10-28 08:06:08,527 INFO app.providers.yandex.service:    ✅ gitlab: CPU avg=7.33%
2025-10-28 08:06:09,238 INFO app.providers.yandex.client: ✅ CPU statistics for epdfl7h2qhog2naflqd2: avg=2.52%, max=3.39%, 719 points
2025-10-28 08:06:09,241 INFO sqlalchemy.engine.Engine: UPDATE resource_tags SET tag_value=%(tag_value)s, updated_at=%(updated_at)s WHERE resource_tags.id = %(resource_tags_id)s
2025-10-28 08:06:09,242 INFO sqlalchemy.engine.Engine: [cached since 34.08s ago] {'tag_value': '{"dates": ["2025-09-28", "2025-09-29", "2025-09-30", "2025-10-01", "2025-10-02", "2025-10-03", "2025-10-04", "2025-10-05", "2025-10-06", "2025-10-07" ... (343 characters truncated) ...  7.05, 7.09, 8.13, 8.26, 7.82, 7.98, 8.04, 7.92, 7.45, 7.88, 8.01, 7.66, 8.5, 7.53, 6.57, 6.61, 7.53, 7.35, 6.96, 6.47, 6.2, 5.88, 5.81, 6.04, 5.87]}', 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 9, 241756), 'resource_tags_id': 4664}
2025-10-28 08:06:09,243 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:09,244 INFO sqlalchemy.engine.Engine: [cached since 44.7s ago] {'resource_id_1': 1656, 'tag_key_1': 'cpu_avg_usage', 'param_1': 1}
2025-10-28 08:06:09,246 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:09,246 INFO sqlalchemy.engine.Engine: [cached since 44.7s ago] {'resource_id_1': 1656, 'tag_key_1': 'cpu_max_usage', 'param_1': 1}
2025-10-28 08:06:09,247 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:09,247 INFO sqlalchemy.engine.Engine: [cached since 44.7s ago] {'resource_id_1': 1656, 'tag_key_1': 'cpu_min_usage', 'param_1': 1}
2025-10-28 08:06:09,249 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:09,249 INFO sqlalchemy.engine.Engine: [cached since 44.7s ago] {'resource_id_1': 1656, 'tag_key_1': 'cpu_performance_tier', 'param_1': 1}
2025-10-28 08:06:09,250 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:09,251 INFO sqlalchemy.engine.Engine: [cached since 44.7s ago] {'resource_id_1': 1656, 'tag_key_1': 'cpu_raw_data', 'param_1': 1}
2025-10-28 08:06:09,251 INFO app.providers.yandex.service:    ✅ sphinx: CPU avg=2.52%
2025-10-28 08:06:09,948 WARNING app.providers.yandex.client: No CPU metrics available for instance epdgngr8lht816tvjrm3
2025-10-28 08:06:09,951 WARNING app.providers.yandex.service:    ⚠️  r7: No CPU data available
2025-10-28 08:06:10,047 INFO app.providers.yandex.client: ✅ CPU statistics for epdico47n8b1knml7deb: avg=0.45%, max=2.49%, 719 points
2025-10-28 08:06:10,049 INFO sqlalchemy.engine.Engine: UPDATE resource_tags SET tag_value=%(tag_value)s, updated_at=%(updated_at)s WHERE resource_tags.id = %(resource_tags_id)s
2025-10-28 08:06:10,050 INFO sqlalchemy.engine.Engine: [cached since 34.89s ago] {'tag_value': '{"dates": ["2025-09-28", "2025-09-29", "2025-09-30", "2025-10-01", "2025-10-02", "2025-10-03", "2025-10-04", "2025-10-05", "2025-10-06", "2025-10-07" ... (343 characters truncated) ...  2.49, 2.46, 2.55, 2.57, 2.53, 2.53, 2.57, 2.5, 2.57, 2.58, 2.52, 2.54, 2.53, 2.54, 2.48, 2.48, 2.45, 2.48, 2.47, 2.48, 2.56, 2.44, 2.47, 2.6, 2.55]}', 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 10, 49931), 'resource_tags_id': 4669}
2025-10-28 08:06:10,051 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:10,051 INFO sqlalchemy.engine.Engine: [cached since 45.5s ago] {'resource_id_1': 1658, 'tag_key_1': 'cpu_avg_usage', 'param_1': 1}
2025-10-28 08:06:10,052 INFO sqlalchemy.engine.Engine: UPDATE resource_tags SET tag_value=%(tag_value)s, updated_at=%(updated_at)s WHERE resource_tags.id = %(resource_tags_id)s
2025-10-28 08:06:10,052 INFO sqlalchemy.engine.Engine: [cached since 34.89s ago] {'tag_value': '0.45', 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 10, 52650), 'resource_tags_id': 4670}
2025-10-28 08:06:10,053 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:10,053 INFO sqlalchemy.engine.Engine: [cached since 45.51s ago] {'resource_id_1': 1658, 'tag_key_1': 'cpu_max_usage', 'param_1': 1}
2025-10-28 08:06:10,054 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:10,054 INFO sqlalchemy.engine.Engine: [cached since 45.51s ago] {'resource_id_1': 1658, 'tag_key_1': 'cpu_min_usage', 'param_1': 1}
2025-10-28 08:06:10,055 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:10,055 INFO sqlalchemy.engine.Engine: [cached since 45.51s ago] {'resource_id_1': 1658, 'tag_key_1': 'cpu_performance_tier', 'param_1': 1}
2025-10-28 08:06:10,056 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:10,056 INFO sqlalchemy.engine.Engine: [cached since 45.51s ago] {'resource_id_1': 1658, 'tag_key_1': 'cpu_raw_data', 'param_1': 1}
2025-10-28 08:06:10,056 INFO app.providers.yandex.service:    ✅ gateway: CPU avg=0.45%
2025-10-28 08:06:10,685 INFO app.providers.yandex.client: ✅ CPU statistics for epdm6n7nmqdcfr6l2h3j: avg=8.77%, max=92.97%, 719 points
2025-10-28 08:06:10,689 INFO sqlalchemy.engine.Engine: UPDATE resource_tags SET tag_value=%(tag_value)s, updated_at=%(updated_at)s WHERE resource_tags.id = %(resource_tags_id)s
2025-10-28 08:06:10,689 INFO sqlalchemy.engine.Engine: [cached since 35.53s ago] {'tag_value': '{"dates": ["2025-09-28", "2025-09-29", "2025-09-30", "2025-10-01", "2025-10-02", "2025-10-03", "2025-10-04", "2025-10-05", "2025-10-06", "2025-10-07" ... (343 characters truncated) ...  0.41, 0.43, 0.46, 0.51, 0.5, 0.46, 0.49, 0.65, 0.51, 0.55, 0.65, 0.39, 0.46, 0.46, 0.45, 0.48, 0.7, 0.49, 0.44, 0.35, 0.35, 0.34, 0.34, 0.37, 0.35]}', 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 10, 689307), 'resource_tags_id': 4674}
2025-10-28 08:06:10,691 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:10,691 INFO sqlalchemy.engine.Engine: [cached since 46.14s ago] {'resource_id_1': 1659, 'tag_key_1': 'cpu_avg_usage', 'param_1': 1}
2025-10-28 08:06:10,693 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:10,693 INFO sqlalchemy.engine.Engine: [cached since 46.15s ago] {'resource_id_1': 1659, 'tag_key_1': 'cpu_max_usage', 'param_1': 1}
2025-10-28 08:06:10,695 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:10,695 INFO sqlalchemy.engine.Engine: [cached since 46.15s ago] {'resource_id_1': 1659, 'tag_key_1': 'cpu_min_usage', 'param_1': 1}
2025-10-28 08:06:10,697 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:10,697 INFO sqlalchemy.engine.Engine: [cached since 46.15s ago] {'resource_id_1': 1659, 'tag_key_1': 'cpu_performance_tier', 'param_1': 1}
2025-10-28 08:06:10,698 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:10,698 INFO sqlalchemy.engine.Engine: [cached since 46.15s ago] {'resource_id_1': 1659, 'tag_key_1': 'cpu_raw_data', 'param_1': 1}
2025-10-28 08:06:10,699 INFO app.providers.yandex.service:    ✅ database: CPU avg=8.77%
2025-10-28 08:06:10,774 INFO app.providers.yandex.client: ✅ CPU statistics for epdrpo30qthvvdoi88id: avg=0.62%, max=3.52%, 661 points
2025-10-28 08:06:10,778 INFO sqlalchemy.engine.Engine: UPDATE resource_tags SET tag_value=%(tag_value)s, updated_at=%(updated_at)s WHERE resource_tags.id = %(resource_tags_id)s
2025-10-28 08:06:10,778 INFO sqlalchemy.engine.Engine: [cached since 35.61s ago] {'tag_value': '{"dates": ["2025-09-28", "2025-09-29", "2025-09-30", "2025-10-01", "2025-10-02", "2025-10-03", "2025-10-04", "2025-10-05", "2025-10-06", "2025-10-07" ... (340 characters truncated) ... 82, 8.22, 8.86, 9.37, 9.86, 9.47, 9.49, 9.52, 8.44, 8.03, 8.68, 8.6, 8.6, 8.88, 8.9, 8.4, 8.73, 9.34, 8.41, 8.36, 8.03, 8.66, 8.1, 8.04, 7.31, 8.03]}', 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 10, 778100), 'resource_tags_id': 4679}
2025-10-28 08:06:10,780 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:10,780 INFO sqlalchemy.engine.Engine: [cached since 46.23s ago] {'resource_id_1': 1663, 'tag_key_1': 'cpu_avg_usage', 'param_1': 1}
2025-10-28 08:06:10,782 INFO sqlalchemy.engine.Engine: UPDATE resource_tags SET tag_value=%(tag_value)s, updated_at=%(updated_at)s WHERE resource_tags.id = %(resource_tags_id)s
2025-10-28 08:06:10,782 INFO sqlalchemy.engine.Engine: [cached since 35.62s ago] {'tag_value': '0.62', 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 10, 782197), 'resource_tags_id': 4695}
2025-10-28 08:06:10,783 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:10,783 INFO sqlalchemy.engine.Engine: [cached since 46.24s ago] {'resource_id_1': 1663, 'tag_key_1': 'cpu_max_usage', 'param_1': 1}
2025-10-28 08:06:10,785 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:10,785 INFO sqlalchemy.engine.Engine: [cached since 46.24s ago] {'resource_id_1': 1663, 'tag_key_1': 'cpu_min_usage', 'param_1': 1}
2025-10-28 08:06:10,786 INFO sqlalchemy.engine.Engine: UPDATE resource_tags SET tag_value=%(tag_value)s, updated_at=%(updated_at)s WHERE resource_tags.id = %(resource_tags_id)s
2025-10-28 08:06:10,786 INFO sqlalchemy.engine.Engine: [cached since 35.62s ago] {'tag_value': '0.22', 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 10, 786682), 'resource_tags_id': 4697}
2025-10-28 08:06:10,787 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:10,787 INFO sqlalchemy.engine.Engine: [cached since 46.24s ago] {'resource_id_1': 1663, 'tag_key_1': 'cpu_performance_tier', 'param_1': 1}
2025-10-28 08:06:10,788 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:10,789 INFO sqlalchemy.engine.Engine: [cached since 46.24s ago] {'resource_id_1': 1663, 'tag_key_1': 'cpu_raw_data', 'param_1': 1}
2025-10-28 08:06:10,789 INFO app.providers.yandex.service:    ✅ bookstack: CPU avg=0.62%
2025-10-28 08:06:10,866 INFO app.providers.yandex.client: ✅ CPU statistics for epdthnrqjkb3s3q5osqn: avg=0.23%, max=1.05%, 719 points
2025-10-28 08:06:10,870 INFO sqlalchemy.engine.Engine: UPDATE resource_tags SET tag_value=%(tag_value)s, updated_at=%(updated_at)s WHERE resource_tags.id = %(resource_tags_id)s
2025-10-28 08:06:10,870 INFO sqlalchemy.engine.Engine: [cached since 35.71s ago] {'tag_value': '{"dates": ["2025-09-28", "2025-09-29", "2025-09-30", "2025-10-01", "2025-10-02", "2025-10-03", "2025-10-04", "2025-10-05", "2025-10-06", "2025-10-07" ... (302 characters truncated) ... , 0.74, 0.77, 0.7, 0.69, 0.74, 0.74, 0.74, 0.76, 0.74, 0.73, 0.73, 0.76, 0.73, 0.45, 0.43, 0.44, 0.42, 0.4, 0.43, 0.47, 0.45, 0.44, 0.41, 0.48, 0.3]}', 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 10, 870481), 'resource_tags_id': 4699}
2025-10-28 08:06:10,872 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:10,872 INFO sqlalchemy.engine.Engine: [cached since 46.32s ago] {'resource_id_1': 1664, 'tag_key_1': 'cpu_avg_usage', 'param_1': 1}
2025-10-28 08:06:10,874 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:10,874 INFO sqlalchemy.engine.Engine: [cached since 46.33s ago] {'resource_id_1': 1664, 'tag_key_1': 'cpu_max_usage', 'param_1': 1}
2025-10-28 08:06:10,876 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:10,876 INFO sqlalchemy.engine.Engine: [cached since 46.33s ago] {'resource_id_1': 1664, 'tag_key_1': 'cpu_min_usage', 'param_1': 1}
2025-10-28 08:06:10,878 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:10,878 INFO sqlalchemy.engine.Engine: [cached since 46.33s ago] {'resource_id_1': 1664, 'tag_key_1': 'cpu_performance_tier', 'param_1': 1}
2025-10-28 08:06:10,879 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE resource_tags.resource_id = %(resource_id_1)s AND resource_tags.tag_key = %(tag_key_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:10,879 INFO sqlalchemy.engine.Engine: [cached since 46.33s ago] {'resource_id_1': 1664, 'tag_key_1': 'cpu_raw_data', 'param_1': 1}
2025-10-28 08:06:10,880 INFO app.providers.yandex.service:    ✅ chartsstorage: CPU avg=0.23%
2025-10-28 08:06:11,397 WARNING app.providers.yandex.client: No CPU metrics available for instance fv4hlo833lgm0oomhsi4
2025-10-28 08:06:11,400 WARNING app.providers.yandex.service:    ⚠️  duktusdemo: No CPU data available
2025-10-28 08:06:11,401 INFO sqlalchemy.engine.Engine: UPDATE resource_tags SET tag_value=%(tag_value)s, updated_at=%(updated_at)s WHERE resource_tags.id = %(resource_tags_id)s
2025-10-28 08:06:11,402 INFO sqlalchemy.engine.Engine: [cached since 36.24s ago] {'tag_value': '{"dates": ["2025-09-28", "2025-09-29", "2025-09-30", "2025-10-01", "2025-10-02", "2025-10-03", "2025-10-04", "2025-10-05", "2025-10-06", "2025-10-07" ... (343 characters truncated) ... .21, 0.22, 0.21, 0.23, 0.22, 0.24, 0.23, 0.22, 0.22, 0.22, 0.22, 0.22, 0.22, 0.23, 0.23, 0.23, 0.23, 0.23, 0.24, 0.25, 0.24, 0.23, 0.23, 0.24, 0.23]}', 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 401928), 'resource_tags_id': 4704}
2025-10-28 08:06:11,403 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:06:11,405 INFO app.providers.yandex.service: Performance statistics collection completed
2025-10-28 08:06:11,406 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:06:11,407 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:06:11,407 INFO sqlalchemy.engine.Engine: [cached since 46.77s ago] {'pk_1': 150}
2025-10-28 08:06:11,409 INFO sqlalchemy.engine.Engine: UPDATE cloud_providers SET last_sync=%(last_sync)s, sync_status=%(sync_status)s, sync_error=%(sync_error)s, updated_at=%(updated_at)s WHERE cloud_providers.id = %(cloud_providers_id)s
2025-10-28 08:06:11,409 INFO sqlalchemy.engine.Engine: [cached since 46.77s ago] {'last_sync': datetime.datetime(2025, 10, 28, 8, 6, 11, 406139), 'sync_status': 'success', 'sync_error': None, 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 409494), 'cloud_providers_id': 150}
2025-10-28 08:06:11,410 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:06:11,411 INFO app.providers.yandex.service: Sync completed: 16 resources (3 clusters, 11 VMs, 2 disks), estimated 3911.19 ₽/day
2025-10-28 08:06:11,412 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:06:11,412 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_status AS sync_snapshots_sync_status, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_completed_at AS sync_snapshots_sync_completed_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.total_resources_found AS sync_snapshots_total_resources_found, sync_snapshots.resources_created AS sync_snapshots_resources_created, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:06:11,412 INFO sqlalchemy.engine.Engine: [cached since 46.78s ago] {'pk_1': 8367}
2025-10-28 08:06:11,414 INFO app.providers.plugin_system.YandexProviderPlugin: Yandex Cloud sync completed: 16 resources, 3911.19 RUB/day
2025-10-28 08:06:11,415 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.total_resources_found AS sync_snapshots_total_resources_found, sync_snapshots.resources_created AS sync_snapshots_resources_created, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:06:11,415 INFO sqlalchemy.engine.Engine: [cached since 46.92s ago] {'pk_1': 8366}
2025-10-28 08:06:11,416 INFO sqlalchemy.engine.Engine: UPDATE sync_snapshots SET sync_status=%(sync_status)s, sync_completed_at=%(sync_completed_at)s, updated_at=%(updated_at)s WHERE sync_snapshots.id = %(sync_snapshots_id)s
2025-10-28 08:06:11,416 INFO sqlalchemy.engine.Engine: [cached since 46.92s ago] {'sync_status': 'success', 'sync_completed_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 414702), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 416583), 'sync_snapshots_id': 8366}
2025-10-28 08:06:11,417 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.total_resources_found AS sync_snapshots_total_resources_found, sync_snapshots.resources_created AS sync_snapshots_resources_created, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:06:11,417 INFO sqlalchemy.engine.Engine: [cached since 46.93s ago] {'pk_1': 8366}
2025-10-28 08:06:11,419 INFO sqlalchemy.engine.Engine: UPDATE sync_snapshots SET sync_duration_seconds=%(sync_duration_seconds)s, total_resources_found=%(total_resources_found)s, total_monthly_cost=%(total_monthly_cost)s, sync_config=%(sync_config)s, updated_at=%(updated_at)s WHERE sync_snapshots.id = %(sync_snapshots_id)s
2025-10-28 08:06:11,419 INFO sqlalchemy.engine.Engine: [cached since 9.848s ago] {'sync_duration_seconds': 7, 'total_resources_found': 16, 'total_monthly_cost': 3911.19, 'sync_config': '{"sync_type": "complete_sync", "provider_type": "yandex", "connection_name": "yc-it", "sync_timestamp": "2025-10-28T08:06:03.640069", "sync_success": ... (411 characters truncated) ... y"}, "sync_snapshot_id": 8367, "total_instances": 11, "total_disks": 2, "cpu_stats_collected": true, "sync_timestamp": "2025-10-28T08:06:11.414429"}}', 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 419122), 'sync_snapshots_id': 8366}
2025-10-28 08:06:11,420 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:06:11,421 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:06:11,421 INFO sqlalchemy.engine.Engine: SELECT sync_snapshots.provider_id AS sync_snapshots_provider_id, sync_snapshots.sync_type AS sync_snapshots_sync_type, sync_snapshots.sync_status AS sync_snapshots_sync_status, sync_snapshots.sync_started_at AS sync_snapshots_sync_started_at, sync_snapshots.sync_completed_at AS sync_snapshots_sync_completed_at, sync_snapshots.sync_duration_seconds AS sync_snapshots_sync_duration_seconds, sync_snapshots.total_resources_found AS sync_snapshots_total_resources_found, sync_snapshots.resources_created AS sync_snapshots_resources_created, sync_snapshots.resources_updated AS sync_snapshots_resources_updated, sync_snapshots.resources_deleted AS sync_snapshots_resources_deleted, sync_snapshots.resources_unchanged AS sync_snapshots_resources_unchanged, sync_snapshots.total_monthly_cost AS sync_snapshots_total_monthly_cost, sync_snapshots.total_resources_by_type AS sync_snapshots_total_resources_by_type, sync_snapshots.total_resources_by_status AS sync_snapshots_total_resources_by_status, sync_snapshots.error_message AS sync_snapshots_error_message, sync_snapshots.error_details AS sync_snapshots_error_details, sync_snapshots.sync_config AS sync_snapshots_sync_config, sync_snapshots.id AS sync_snapshots_id, sync_snapshots.created_at AS sync_snapshots_created_at, sync_snapshots.updated_at AS sync_snapshots_updated_at 
FROM sync_snapshots 
WHERE sync_snapshots.id = %(pk_1)s
2025-10-28 08:06:11,421 INFO sqlalchemy.engine.Engine: [cached since 46.79s ago] {'pk_1': 8366}
2025-10-28 08:06:11,423 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:06:11,423 INFO sqlalchemy.engine.Engine: [cached since 46.79s ago] {'pk_1': 150}
2025-10-28 08:06:11,424 INFO sqlalchemy.engine.Engine: UPDATE cloud_providers SET last_sync=%(last_sync)s, sync_status=%(sync_status)s, sync_error=%(sync_error)s, updated_at=%(updated_at)s WHERE cloud_providers.id = %(cloud_providers_id)s
2025-10-28 08:06:11,424 INFO sqlalchemy.engine.Engine: [cached since 46.79s ago] {'last_sync': datetime.datetime(2025, 10, 28, 8, 6, 11, 422719), 'sync_status': 'success', 'sync_error': None, 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 424067), 'cloud_providers_id': 150}
2025-10-28 08:06:11,424 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:06:11,424 INFO app.providers.sync_orchestrator.SyncOrchestrator: Sync completed for provider 150: Successfully synced 16 resources (3 clusters, 11 VMs, 2 disks) - estimated cost: 3911.19 ₽/day
2025-10-28 08:06:11,425 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:06:11,425 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:06:11,425 INFO sqlalchemy.engine.Engine: [cached since 50.75s ago] {'pk_1': 150}
2025-10-28 08:06:11,426 INFO app.core.services.complete_sync_service.CompleteSyncService: Provider yc-it synced successfully: 16 resources, 3911.19 RUB
2025-10-28 08:06:11,427 INFO sqlalchemy.engine.Engine: SELECT complete_syncs.user_id AS complete_syncs_user_id, complete_syncs.sync_type AS complete_syncs_sync_type, complete_syncs.sync_started_at AS complete_syncs_sync_started_at, complete_syncs.sync_duration_seconds AS complete_syncs_sync_duration_seconds, complete_syncs.total_providers_synced AS complete_syncs_total_providers_synced, complete_syncs.error_message AS complete_syncs_error_message, complete_syncs.error_details AS complete_syncs_error_details, complete_syncs.sync_config AS complete_syncs_sync_config, complete_syncs.id AS complete_syncs_id, complete_syncs.created_at AS complete_syncs_created_at, complete_syncs.updated_at AS complete_syncs_updated_at 
FROM complete_syncs 
WHERE complete_syncs.id = %(pk_1)s
2025-10-28 08:06:11,427 INFO sqlalchemy.engine.Engine: [generated in 0.00012s] {'pk_1': 2082}
2025-10-28 08:06:11,428 INFO sqlalchemy.engine.Engine: UPDATE complete_syncs SET sync_status=%(sync_status)s, sync_completed_at=%(sync_completed_at)s, successful_providers=%(successful_providers)s, failed_providers=%(failed_providers)s, total_resources_found=%(total_resources_found)s, total_monthly_cost=%(total_monthly_cost)s, total_daily_cost=%(total_daily_cost)s, cost_by_provider=%(cost_by_provider)s, resources_by_provider=%(resources_by_provider)s, updated_at=%(updated_at)s WHERE complete_syncs.id = %(complete_syncs_id)s
2025-10-28 08:06:11,428 INFO sqlalchemy.engine.Engine: [generated in 0.00013s] {'sync_status': 'success', 'sync_completed_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 426339), 'successful_providers': 4, 'failed_providers': 0, 'total_resources_found': 29, 'total_monthly_cost': 123512.1287671233, 'total_daily_cost': 4117.07095890411, 'cost_by_provider': '{"Beget- cola": 68.14095890410958, "Selectel-Cola": 57.6, "yc": 80.14, "yc-it": 3911.19}', 'resources_by_provider': '{"Beget- cola": 7, "Selectel-Cola": 4, "yc": 2, "yc-it": 16}', 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 428552), 'complete_syncs_id': 2082}
2025-10-28 08:06:11,429 INFO sqlalchemy.engine.Engine: INSERT INTO provider_sync_references (complete_sync_id, provider_id, sync_snapshot_id, sync_order, sync_status, sync_duration_seconds, resources_synced, provider_cost, error_message, error_details, created_at, updated_at) VALUES (%(complete_sync_id)s, %(provider_id)s, %(sync_snapshot_id)s, %(sync_order)s, %(sync_status)s, %(sync_duration_seconds)s, %(resources_synced)s, %(provider_cost)s, %(error_message)s, %(error_details)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:11,429 INFO sqlalchemy.engine.Engine: [cached since 46.79s ago] {'complete_sync_id': 2082, 'provider_id': 150, 'sync_snapshot_id': 8366, 'sync_order': 4, 'sync_status': 'success', 'sync_duration_seconds': 0, 'resources_synced': 16, 'provider_cost': 3911.19, 'error_message': None, 'error_details': None, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 429318), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 429319)}
2025-10-28 08:06:11,430 INFO sqlalchemy.engine.Engine: SELECT complete_syncs.user_id AS complete_syncs_user_id, complete_syncs.sync_type AS complete_syncs_sync_type, complete_syncs.sync_started_at AS complete_syncs_sync_started_at, complete_syncs.sync_duration_seconds AS complete_syncs_sync_duration_seconds, complete_syncs.total_providers_synced AS complete_syncs_total_providers_synced, complete_syncs.error_message AS complete_syncs_error_message, complete_syncs.error_details AS complete_syncs_error_details, complete_syncs.sync_config AS complete_syncs_sync_config, complete_syncs.id AS complete_syncs_id, complete_syncs.created_at AS complete_syncs_created_at, complete_syncs.updated_at AS complete_syncs_updated_at 
FROM complete_syncs 
WHERE complete_syncs.id = %(pk_1)s
2025-10-28 08:06:11,430 INFO sqlalchemy.engine.Engine: [cached since 0.00279s ago] {'pk_1': 2082}
2025-10-28 08:06:11,431 INFO sqlalchemy.engine.Engine: UPDATE complete_syncs SET sync_duration_seconds=%(sync_duration_seconds)s, updated_at=%(updated_at)s WHERE complete_syncs.id = %(complete_syncs_id)s
2025-10-28 08:06:11,431 INFO sqlalchemy.engine.Engine: [generated in 0.00011s] {'sync_duration_seconds': 50, 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 431020), 'complete_syncs_id': 2082}
2025-10-28 08:06:11,431 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:06:11,432 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:06:11,432 INFO sqlalchemy.engine.Engine: SELECT complete_syncs.user_id AS complete_syncs_user_id, complete_syncs.sync_type AS complete_syncs_sync_type, complete_syncs.sync_status AS complete_syncs_sync_status, complete_syncs.sync_started_at AS complete_syncs_sync_started_at, complete_syncs.sync_completed_at AS complete_syncs_sync_completed_at, complete_syncs.sync_duration_seconds AS complete_syncs_sync_duration_seconds, complete_syncs.total_providers_synced AS complete_syncs_total_providers_synced, complete_syncs.successful_providers AS complete_syncs_successful_providers, complete_syncs.failed_providers AS complete_syncs_failed_providers, complete_syncs.total_resources_found AS complete_syncs_total_resources_found, complete_syncs.total_monthly_cost AS complete_syncs_total_monthly_cost, complete_syncs.total_daily_cost AS complete_syncs_total_daily_cost, complete_syncs.cost_by_provider AS complete_syncs_cost_by_provider, complete_syncs.resources_by_provider AS complete_syncs_resources_by_provider, complete_syncs.error_message AS complete_syncs_error_message, complete_syncs.error_details AS complete_syncs_error_details, complete_syncs.sync_config AS complete_syncs_sync_config, complete_syncs.id AS complete_syncs_id, complete_syncs.created_at AS complete_syncs_created_at, complete_syncs.updated_at AS complete_syncs_updated_at 
FROM complete_syncs 
WHERE complete_syncs.id = %(pk_1)s
2025-10-28 08:06:11,432 INFO sqlalchemy.engine.Engine: [cached since 50.76s ago] {'pk_1': 2082}
2025-10-28 08:06:11,433 INFO app.core.services.complete_sync_service.CompleteSyncService: Complete sync 2082 completed: success
2025-10-28 08:06:11,433 INFO app.core.services.complete_sync_service.CompleteSyncService: Running recommendations orchestrator for complete_sync 2082
2025-10-28 08:06:11,438 INFO sqlalchemy.engine.Engine: SELECT provider_sync_references.complete_sync_id AS provider_sync_references_complete_sync_id, provider_sync_references.provider_id AS provider_sync_references_provider_id, provider_sync_references.sync_snapshot_id AS provider_sync_references_sync_snapshot_id, provider_sync_references.sync_order AS provider_sync_references_sync_order, provider_sync_references.sync_status AS provider_sync_references_sync_status, provider_sync_references.sync_duration_seconds AS provider_sync_references_sync_duration_seconds, provider_sync_references.resources_synced AS provider_sync_references_resources_synced, provider_sync_references.provider_cost AS provider_sync_references_provider_cost, provider_sync_references.error_message AS provider_sync_references_error_message, provider_sync_references.error_details AS provider_sync_references_error_details, provider_sync_references.id AS provider_sync_references_id, provider_sync_references.created_at AS provider_sync_references_created_at, provider_sync_references.updated_at AS provider_sync_references_updated_at 
FROM provider_sync_references 
WHERE provider_sync_references.complete_sync_id = %(complete_sync_id_1)s
2025-10-28 08:06:11,438 INFO sqlalchemy.engine.Engine: [generated in 0.00015s] {'complete_sync_id_1': 2082}
2025-10-28 08:06:11,440 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.provider_id IN (%(provider_id_1_1)s, %(provider_id_1_2)s, %(provider_id_1_3)s, %(provider_id_1_4)s)
2025-10-28 08:06:11,440 INFO sqlalchemy.engine.Engine: [generated in 0.00015s] {'provider_id_1_1': 1, 'provider_id_1_2': 2, 'provider_id_1_3': 117, 'provider_id_1_4': 150}
2025-10-28 08:06:11,444 INFO sqlalchemy.engine.Engine: SELECT recommendation_rule_settings.rule_id AS recommendation_rule_settings_rule_id, recommendation_rule_settings.scope AS recommendation_rule_settings_scope, recommendation_rule_settings.provider_type AS recommendation_rule_settings_provider_type, recommendation_rule_settings.resource_type AS recommendation_rule_settings_resource_type, recommendation_rule_settings.enabled AS recommendation_rule_settings_enabled, recommendation_rule_settings.description AS recommendation_rule_settings_description, recommendation_rule_settings.id AS recommendation_rule_settings_id, recommendation_rule_settings.created_at AS recommendation_rule_settings_created_at, recommendation_rule_settings.updated_at AS recommendation_rule_settings_updated_at 
FROM recommendation_rule_settings
2025-10-28 08:06:11,444 INFO sqlalchemy.engine.Engine: [generated in 0.00014s] {}
2025-10-28 08:06:11,445 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:06:11,445 INFO sqlalchemy.engine.Engine: [cached since 50.77s ago] {'pk_1': 1}
2025-10-28 08:06:11,446 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_skip | reason=db_disabled_scoped rule_id=cost.rightsize.cpu_underuse provider=beget resource_id=1
2025-10-28 08:06:11,446 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_start | rule_id=cost.price_check.cross_provider provider=beget resource_id=1 rtype=server
2025-10-28 08:06:11,446 INFO app.core.recommendations.plugins.price_check_rule: price_check: normalized | res_id=1 name=Objective Perrin vcpu=2 mem_gib=2.0 region=lv1
2025-10-28 08:06:11,451 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.cpu_cores = %(cpu_cores_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s) AS anon_1
2025-10-28 08:06:11,451 INFO sqlalchemy.engine.Engine: [generated in 0.00015s] {'provider_1': 'beget', 'cpu_cores_1': 2, 'ram_gb_1': 1.6, 'ram_gb_2': 2.5}
2025-10-28 08:06:11,457 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.cpu_cores = %(cpu_cores_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s AND (provider_prices.region LIKE concat(%(region_1)s, '%%'))) AS anon_1
2025-10-28 08:06:11,457 INFO sqlalchemy.engine.Engine: [generated in 0.00013s] {'provider_1': 'beget', 'cpu_cores_1': 2, 'ram_gb_1': 1.6, 'ram_gb_2': 2.5, 'region_1': 'lv'}
2025-10-28 08:06:11,460 INFO sqlalchemy.engine.Engine: SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.cpu_cores = %(cpu_cores_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s AND (provider_prices.region LIKE concat(%(region_1)s, '%%')) ORDER BY provider_prices.monthly_cost IS NULL ASC, provider_prices.monthly_cost ASC 
 LIMIT %(param_1)s
2025-10-28 08:06:11,460 INFO sqlalchemy.engine.Engine: [generated in 0.00012s] {'provider_1': 'beget', 'cpu_cores_1': 2, 'ram_gb_1': 1.6, 'ram_gb_2': 2.5, 'region_1': 'lv', 'param_1': 500}
2025-10-28 08:06:11,461 INFO app.core.recommendations.plugins.price_check_rule: price_check: catalog scope | res_id=1 total_prices=76 region_filtered=0
2025-10-28 08:06:11,462 INFO app.core.recommendations.plugins.price_check_rule: price_check: candidate_search | res_id=1 pref_region=lv1 min_score=0.80
2025-10-28 08:06:11,462 INFO app.core.recommendations.plugins.price_check_rule: price_check: no candidates for preferred region | res_id=1 pref_region=lv1 -> fallback to any region
2025-10-28 08:06:11,462 INFO app.core.recommendations.plugins.price_check_rule: price_check: no candidates | res_id=1 min_score=0.80 specs_unknown=False
2025-10-28 08:06:11,462 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_end | rule_id=cost.price_check.cross_provider provider=beget resource_id=1 outputs=0 created=0 updated=0 duration_ms=15
2025-10-28 08:06:11,462 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_skip | reason=db_disabled_scoped rule_id=cost.rightsize.cpu_underuse provider=beget resource_id=2
2025-10-28 08:06:11,462 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_start | rule_id=cost.price_check.cross_provider provider=beget resource_id=2 rtype=server
2025-10-28 08:06:11,462 INFO app.core.recommendations.plugins.price_check_rule: price_check: normalized | res_id=2 name=runner rus vcpu=1 mem_gib=2.0 region=ru1
2025-10-28 08:06:11,463 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.cpu_cores = %(cpu_cores_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s) AS anon_1
2025-10-28 08:06:11,463 INFO sqlalchemy.engine.Engine: [cached since 0.01221s ago] {'provider_1': 'beget', 'cpu_cores_1': 1, 'ram_gb_1': 1.6, 'ram_gb_2': 2.5}
2025-10-28 08:06:11,467 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.cpu_cores = %(cpu_cores_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s AND (provider_prices.region LIKE concat(%(region_1)s, '%%'))) AS anon_1
2025-10-28 08:06:11,467 INFO sqlalchemy.engine.Engine: [cached since 0.01007s ago] {'provider_1': 'beget', 'cpu_cores_1': 1, 'ram_gb_1': 1.6, 'ram_gb_2': 2.5, 'region_1': 'ru'}
2025-10-28 08:06:11,475 INFO sqlalchemy.engine.Engine: SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.cpu_cores = %(cpu_cores_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s AND (provider_prices.region LIKE concat(%(region_1)s, '%%')) ORDER BY provider_prices.monthly_cost IS NULL ASC, provider_prices.monthly_cost ASC 
 LIMIT %(param_1)s
2025-10-28 08:06:11,475 INFO sqlalchemy.engine.Engine: [cached since 0.01512s ago] {'provider_1': 'beget', 'cpu_cores_1': 1, 'ram_gb_1': 1.6, 'ram_gb_2': 2.5, 'region_1': 'ru', 'param_1': 500}
2025-10-28 08:06:11,490 INFO app.core.recommendations.plugins.price_check_rule: price_check: catalog scope | res_id=2 total_prices=76 region_filtered=52
2025-10-28 08:06:11,490 INFO app.core.recommendations.plugins.price_check_rule: price_check: candidate_search | res_id=2 pref_region=ru1 min_score=0.80
2025-10-28 08:06:11,490 INFO app.core.recommendations.plugins.price_check_rule: price_check: candidate | res_id=2 best_price_id=3527 score=0.90 target_monthly=176.60 current_monthly=291.90 savings=115.30 min_abs=0.00
2025-10-28 08:06:11,492 INFO sqlalchemy.engine.Engine: SELECT price_comparison_recommendations.user_id AS price_comparison_recommendations_user_id, price_comparison_recommendations.current_resource_id AS price_comparison_recommendations_current_resource_id, price_comparison_recommendations.recommended_price_id AS price_comparison_recommendations_recommended_price_id, price_comparison_recommendations.similarity_score AS price_comparison_recommendations_similarity_score, price_comparison_recommendations.monthly_savings AS price_comparison_recommendations_monthly_savings, price_comparison_recommendations.annual_savings AS price_comparison_recommendations_annual_savings, price_comparison_recommendations.savings_percent AS price_comparison_recommendations_savings_percent, price_comparison_recommendations.migration_effort AS price_comparison_recommendations_migration_effort, price_comparison_recommendations.migration_notes AS price_comparison_recommendations_migration_notes, price_comparison_recommendations.status AS price_comparison_recommendations_status, price_comparison_recommendations.user_feedback AS price_comparison_recommendations_user_feedback, price_comparison_recommendations.id AS price_comparison_recommendations_id, price_comparison_recommendations.created_at AS price_comparison_recommendations_created_at, price_comparison_recommendations.updated_at AS price_comparison_recommendations_updated_at 
FROM price_comparison_recommendations 
WHERE price_comparison_recommendations.user_id = %(user_id_1)s AND price_comparison_recommendations.current_resource_id = %(current_resource_id_1)s AND price_comparison_recommendations.recommended_price_id = %(recommended_price_id_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:11,492 INFO sqlalchemy.engine.Engine: [generated in 0.00014s] {'user_id_1': 2, 'current_resource_id_1': 2, 'recommended_price_id_1': 3527, 'param_1': 1}
2025-10-28 08:06:11,502 INFO sqlalchemy.engine.Engine: UPDATE price_comparison_recommendations SET monthly_savings=%(monthly_savings)s, annual_savings=%(annual_savings)s, updated_at=%(updated_at)s WHERE price_comparison_recommendations.id = %(price_comparison_recommendations_id)s
2025-10-28 08:06:11,502 INFO sqlalchemy.engine.Engine: [generated in 0.00016s] {'monthly_savings': 115.3, 'annual_savings': 1383.6, 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 502859), 'price_comparison_recommendations_id': 14}
2025-10-28 08:06:11,505 INFO sqlalchemy.engine.Engine: SELECT optimization_recommendations.resource_id AS optimization_recommendations_resource_id, optimization_recommendations.provider_id AS optimization_recommendations_provider_id, optimization_recommendations.recommendation_type AS optimization_recommendations_recommendation_type, optimization_recommendations.category AS optimization_recommendations_category, optimization_recommendations.severity AS optimization_recommendations_severity, optimization_recommendations.title AS optimization_recommendations_title, optimization_recommendations.description AS optimization_recommendations_description, optimization_recommendations.source AS optimization_recommendations_source, optimization_recommendations.resource_type AS optimization_recommendations_resource_type, optimization_recommendations.resource_name AS optimization_recommendations_resource_name, optimization_recommendations.potential_savings AS optimization_recommendations_potential_savings, optimization_recommendations.estimated_monthly_savings AS optimization_recommendations_estimated_monthly_savings, optimization_recommendations.estimated_one_time_savings AS optimization_recommendations_estimated_one_time_savings, optimization_recommendations.currency AS optimization_recommendations_currency, optimization_recommendations.confidence_score AS optimization_recommendations_confidence_score, optimization_recommendations.metrics_snapshot AS optimization_recommendations_metrics_snapshot, optimization_recommendations.insights AS optimization_recommendations_insights, optimization_recommendations.status AS optimization_recommendations_status, optimization_recommendations.first_seen_at AS optimization_recommendations_first_seen_at, optimization_recommendations.seen_at AS optimization_recommendations_seen_at, optimization_recommendations.snoozed_until AS optimization_recommendations_snoozed_until, optimization_recommendations.applied_at AS optimization_recommendations_applied_at, optimization_recommendations.dismissed_at AS optimization_recommendations_dismissed_at, optimization_recommendations.dismissed_reason AS optimization_recommendations_dismissed_reason, optimization_recommendations.id AS optimization_recommendations_id, optimization_recommendations.created_at AS optimization_recommendations_created_at, optimization_recommendations.updated_at AS optimization_recommendations_updated_at 
FROM optimization_recommendations 
WHERE optimization_recommendations.resource_id = %(resource_id_1)s AND optimization_recommendations.recommendation_type = %(recommendation_type_1)s AND optimization_recommendations.source = %(source_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:11,505 INFO sqlalchemy.engine.Engine: [generated in 0.00012s] {'resource_id_1': 2, 'recommendation_type_1': 'price_compare_cross_provider', 'source_1': 'cost.price_check.cross_provider', 'param_1': 1}
2025-10-28 08:06:11,506 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_end | rule_id=cost.price_check.cross_provider provider=beget resource_id=2 outputs=1 created=0 updated=0 duration_ms=44
2025-10-28 08:06:11,506 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_skip | reason=db_disabled_scoped rule_id=cost.rightsize.cpu_underuse provider=beget resource_id=3
2025-10-28 08:06:11,506 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_skip | reason=not_applicable rule_id=cost.price_check.cross_provider provider=beget resource_id=3 rtype=domain
2025-10-28 08:06:11,506 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:06:11,507 INFO sqlalchemy.engine.Engine: [cached since 50.83s ago] {'pk_1': 2}
2025-10-28 08:06:11,507 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_skip | reason=not_applicable rule_id=cost.rightsize.cpu_underuse provider=selectel resource_id=4 rtype=volume
2025-10-28 08:06:11,507 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_skip | reason=db_disabled_scoped rule_id=cost.price_check.cross_provider provider=selectel resource_id=4
2025-10-28 08:06:11,507 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_skip | reason=not_applicable rule_id=cost.rightsize.cpu_underuse provider=selectel resource_id=5 rtype=volume
2025-10-28 08:06:11,507 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_skip | reason=db_disabled_scoped rule_id=cost.price_check.cross_provider provider=selectel resource_id=5
2025-10-28 08:06:11,507 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_skip | reason=not_applicable rule_id=cost.rightsize.cpu_underuse provider=selectel resource_id=6 rtype=volume
2025-10-28 08:06:11,507 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_skip | reason=db_disabled_scoped rule_id=cost.price_check.cross_provider provider=selectel resource_id=6
2025-10-28 08:06:11,507 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_skip | reason=not_applicable rule_id=cost.rightsize.cpu_underuse provider=selectel resource_id=7 rtype=load_balancer
2025-10-28 08:06:11,507 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_skip | reason=db_disabled_scoped rule_id=cost.price_check.cross_provider provider=selectel resource_id=7
2025-10-28 08:06:11,508 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_skip | reason=db_disabled_scoped rule_id=cost.rightsize.cpu_underuse provider=beget resource_id=352
2025-10-28 08:06:11,508 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_skip | reason=not_applicable rule_id=cost.price_check.cross_provider provider=beget resource_id=352 rtype=database-bg
2025-10-28 08:06:11,508 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_skip | reason=db_disabled_scoped rule_id=cost.rightsize.cpu_underuse provider=beget resource_id=353
2025-10-28 08:06:11,508 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_skip | reason=not_applicable rule_id=cost.price_check.cross_provider provider=beget resource_id=353 rtype=domain
2025-10-28 08:06:11,508 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_skip | reason=db_disabled_scoped rule_id=cost.rightsize.cpu_underuse provider=beget resource_id=354
2025-10-28 08:06:11,508 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_skip | reason=not_applicable rule_id=cost.price_check.cross_provider provider=beget resource_id=354 rtype=domain
2025-10-28 08:06:11,508 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_skip | reason=db_disabled_scoped rule_id=cost.rightsize.cpu_underuse provider=beget resource_id=520
2025-10-28 08:06:11,508 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_start | rule_id=cost.price_check.cross_provider provider=beget resource_id=520 rtype=server
2025-10-28 08:06:11,508 INFO app.core.recommendations.plugins.price_check_rule: price_check: normalized | res_id=520 name=InfraZen Prod vcpu=1 mem_gib=1.0 region=ru2
2025-10-28 08:06:11,509 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.cpu_cores = %(cpu_cores_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s) AS anon_1
2025-10-28 08:06:11,509 INFO sqlalchemy.engine.Engine: [cached since 0.05821s ago] {'provider_1': 'beget', 'cpu_cores_1': 1, 'ram_gb_1': 0.8, 'ram_gb_2': 1.25}
2025-10-28 08:06:11,511 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.cpu_cores = %(cpu_cores_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s AND (provider_prices.region LIKE concat(%(region_1)s, '%%'))) AS anon_1
2025-10-28 08:06:11,511 INFO sqlalchemy.engine.Engine: [cached since 0.05407s ago] {'provider_1': 'beget', 'cpu_cores_1': 1, 'ram_gb_1': 0.8, 'ram_gb_2': 1.25, 'region_1': 'ru'}
2025-10-28 08:06:11,516 INFO sqlalchemy.engine.Engine: SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.cpu_cores = %(cpu_cores_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s AND (provider_prices.region LIKE concat(%(region_1)s, '%%')) ORDER BY provider_prices.monthly_cost IS NULL ASC, provider_prices.monthly_cost ASC 
 LIMIT %(param_1)s
2025-10-28 08:06:11,516 INFO sqlalchemy.engine.Engine: [cached since 0.0552s ago] {'provider_1': 'beget', 'cpu_cores_1': 1, 'ram_gb_1': 0.8, 'ram_gb_2': 1.25, 'region_1': 'ru', 'param_1': 500}
2025-10-28 08:06:11,526 INFO app.core.recommendations.plugins.price_check_rule: price_check: catalog scope | res_id=520 total_prices=331 region_filtered=52
2025-10-28 08:06:11,526 INFO app.core.recommendations.plugins.price_check_rule: price_check: candidate_search | res_id=520 pref_region=ru2 min_score=0.80
2025-10-28 08:06:11,527 INFO app.core.recommendations.plugins.price_check_rule: price_check: candidate | res_id=520 best_price_id=3523 score=0.90 target_monthly=145.88 current_monthly=210.00 savings=64.12 min_abs=0.00
2025-10-28 08:06:11,528 INFO sqlalchemy.engine.Engine: SELECT price_comparison_recommendations.user_id AS price_comparison_recommendations_user_id, price_comparison_recommendations.current_resource_id AS price_comparison_recommendations_current_resource_id, price_comparison_recommendations.recommended_price_id AS price_comparison_recommendations_recommended_price_id, price_comparison_recommendations.similarity_score AS price_comparison_recommendations_similarity_score, price_comparison_recommendations.monthly_savings AS price_comparison_recommendations_monthly_savings, price_comparison_recommendations.annual_savings AS price_comparison_recommendations_annual_savings, price_comparison_recommendations.savings_percent AS price_comparison_recommendations_savings_percent, price_comparison_recommendations.migration_effort AS price_comparison_recommendations_migration_effort, price_comparison_recommendations.migration_notes AS price_comparison_recommendations_migration_notes, price_comparison_recommendations.status AS price_comparison_recommendations_status, price_comparison_recommendations.user_feedback AS price_comparison_recommendations_user_feedback, price_comparison_recommendations.id AS price_comparison_recommendations_id, price_comparison_recommendations.created_at AS price_comparison_recommendations_created_at, price_comparison_recommendations.updated_at AS price_comparison_recommendations_updated_at 
FROM price_comparison_recommendations 
WHERE price_comparison_recommendations.user_id = %(user_id_1)s AND price_comparison_recommendations.current_resource_id = %(current_resource_id_1)s AND price_comparison_recommendations.recommended_price_id = %(recommended_price_id_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:11,528 INFO sqlalchemy.engine.Engine: [cached since 0.03568s ago] {'user_id_1': 2, 'current_resource_id_1': 520, 'recommended_price_id_1': 3523, 'param_1': 1}
2025-10-28 08:06:11,529 INFO sqlalchemy.engine.Engine: UPDATE price_comparison_recommendations SET monthly_savings=%(monthly_savings)s, annual_savings=%(annual_savings)s, savings_percent=%(savings_percent)s, updated_at=%(updated_at)s WHERE price_comparison_recommendations.id = %(price_comparison_recommendations_id)s
2025-10-28 08:06:11,529 INFO sqlalchemy.engine.Engine: [generated in 0.00011s] {'monthly_savings': 64.12, 'annual_savings': 769.44, 'savings_percent': 30.53, 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 529205), 'price_comparison_recommendations_id': 12}
2025-10-28 08:06:11,529 INFO sqlalchemy.engine.Engine: SELECT optimization_recommendations.resource_id AS optimization_recommendations_resource_id, optimization_recommendations.provider_id AS optimization_recommendations_provider_id, optimization_recommendations.recommendation_type AS optimization_recommendations_recommendation_type, optimization_recommendations.category AS optimization_recommendations_category, optimization_recommendations.severity AS optimization_recommendations_severity, optimization_recommendations.title AS optimization_recommendations_title, optimization_recommendations.description AS optimization_recommendations_description, optimization_recommendations.source AS optimization_recommendations_source, optimization_recommendations.resource_type AS optimization_recommendations_resource_type, optimization_recommendations.resource_name AS optimization_recommendations_resource_name, optimization_recommendations.potential_savings AS optimization_recommendations_potential_savings, optimization_recommendations.estimated_monthly_savings AS optimization_recommendations_estimated_monthly_savings, optimization_recommendations.estimated_one_time_savings AS optimization_recommendations_estimated_one_time_savings, optimization_recommendations.currency AS optimization_recommendations_currency, optimization_recommendations.confidence_score AS optimization_recommendations_confidence_score, optimization_recommendations.metrics_snapshot AS optimization_recommendations_metrics_snapshot, optimization_recommendations.insights AS optimization_recommendations_insights, optimization_recommendations.status AS optimization_recommendations_status, optimization_recommendations.first_seen_at AS optimization_recommendations_first_seen_at, optimization_recommendations.seen_at AS optimization_recommendations_seen_at, optimization_recommendations.snoozed_until AS optimization_recommendations_snoozed_until, optimization_recommendations.applied_at AS optimization_recommendations_applied_at, optimization_recommendations.dismissed_at AS optimization_recommendations_dismissed_at, optimization_recommendations.dismissed_reason AS optimization_recommendations_dismissed_reason, optimization_recommendations.id AS optimization_recommendations_id, optimization_recommendations.created_at AS optimization_recommendations_created_at, optimization_recommendations.updated_at AS optimization_recommendations_updated_at 
FROM optimization_recommendations 
WHERE optimization_recommendations.resource_id = %(resource_id_1)s AND optimization_recommendations.recommendation_type = %(recommendation_type_1)s AND optimization_recommendations.source = %(source_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:11,529 INFO sqlalchemy.engine.Engine: [cached since 0.02493s ago] {'resource_id_1': 520, 'recommendation_type_1': 'price_compare_cross_provider', 'source_1': 'cost.price_check.cross_provider', 'param_1': 1}
2025-10-28 08:06:11,530 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_end | rule_id=cost.price_check.cross_provider provider=beget resource_id=520 outputs=1 created=0 updated=1 duration_ms=22
2025-10-28 08:06:11,530 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_start | rule_id=cost.rightsize.cpu_underuse provider=selectel resource_id=1286 rtype=server
2025-10-28 08:06:11,531 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE %(param_1)s = resource_tags.resource_id
2025-10-28 08:06:11,532 INFO sqlalchemy.engine.Engine: [generated in 0.00009s] {'param_1': 1286}
2025-10-28 08:06:11,533 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_end | rule_id=cost.rightsize.cpu_underuse provider=selectel resource_id=1286 outputs=0 created=0 updated=0 duration_ms=2
2025-10-28 08:06:11,533 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_skip | reason=db_disabled_scoped rule_id=cost.price_check.cross_provider provider=selectel resource_id=1286
2025-10-28 08:06:11,533 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:06:11,533 INFO sqlalchemy.engine.Engine: [cached since 50.86s ago] {'pk_1': 117}
2025-10-28 08:06:11,534 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_start | rule_id=cost.rightsize.cpu_underuse provider=yandex resource_id=1287 rtype=server
2025-10-28 08:06:11,534 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE %(param_1)s = resource_tags.resource_id
2025-10-28 08:06:11,534 INFO sqlalchemy.engine.Engine: [cached since 0.002413s ago] {'param_1': 1287}
2025-10-28 08:06:11,534 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_end | rule_id=cost.rightsize.cpu_underuse provider=yandex resource_id=1287 outputs=0 created=0 updated=0 duration_ms=0
2025-10-28 08:06:11,534 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_start | rule_id=cost.price_check.cross_provider provider=yandex resource_id=1287 rtype=server
2025-10-28 08:06:11,535 INFO app.core.recommendations.plugins.price_check_rule: price_check: normalized | res_id=1287 name=compute-vm-2-2-20-ssd-1761405175804 vcpu=None mem_gib=2.0 region=ru-central1-d
2025-10-28 08:06:11,536 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s) AS anon_1
2025-10-28 08:06:11,536 INFO sqlalchemy.engine.Engine: [generated in 0.00010s] {'provider_1': 'yandex', 'ram_gb_1': 1.6, 'ram_gb_2': 2.5}
2025-10-28 08:06:11,541 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s AND (provider_prices.region LIKE concat(%(region_1)s, '%%'))) AS anon_1
2025-10-28 08:06:11,541 INFO sqlalchemy.engine.Engine: [generated in 0.00009s] {'provider_1': 'yandex', 'ram_gb_1': 1.6, 'ram_gb_2': 2.5, 'region_1': 'ru'}
2025-10-28 08:06:11,546 INFO sqlalchemy.engine.Engine: SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s AND (provider_prices.region LIKE concat(%(region_1)s, '%%')) ORDER BY provider_prices.monthly_cost IS NULL ASC, provider_prices.monthly_cost ASC 
 LIMIT %(param_1)s
2025-10-28 08:06:11,546 INFO sqlalchemy.engine.Engine: [generated in 0.00009s] {'provider_1': 'yandex', 'ram_gb_1': 1.6, 'ram_gb_2': 2.5, 'region_1': 'ru', 'param_1': 500}
2025-10-28 08:06:11,563 INFO app.core.recommendations.plugins.price_check_rule: price_check: catalog scope | res_id=1287 total_prices=492 region_filtered=312
2025-10-28 08:06:11,563 INFO app.core.recommendations.plugins.price_check_rule: price_check: candidate_search | res_id=1287 pref_region=ru-central1-d min_score=0.00
2025-10-28 08:06:11,567 INFO app.core.recommendations.plugins.price_check_rule: price_check: candidate | res_id=1287 best_price_id=3527 score=0.40 target_monthly=176.60 current_monthly=2736.00 savings=2559.40 min_abs=0.00
2025-10-28 08:06:11,567 INFO sqlalchemy.engine.Engine: SELECT price_comparison_recommendations.user_id AS price_comparison_recommendations_user_id, price_comparison_recommendations.current_resource_id AS price_comparison_recommendations_current_resource_id, price_comparison_recommendations.recommended_price_id AS price_comparison_recommendations_recommended_price_id, price_comparison_recommendations.similarity_score AS price_comparison_recommendations_similarity_score, price_comparison_recommendations.monthly_savings AS price_comparison_recommendations_monthly_savings, price_comparison_recommendations.annual_savings AS price_comparison_recommendations_annual_savings, price_comparison_recommendations.savings_percent AS price_comparison_recommendations_savings_percent, price_comparison_recommendations.migration_effort AS price_comparison_recommendations_migration_effort, price_comparison_recommendations.migration_notes AS price_comparison_recommendations_migration_notes, price_comparison_recommendations.status AS price_comparison_recommendations_status, price_comparison_recommendations.user_feedback AS price_comparison_recommendations_user_feedback, price_comparison_recommendations.id AS price_comparison_recommendations_id, price_comparison_recommendations.created_at AS price_comparison_recommendations_created_at, price_comparison_recommendations.updated_at AS price_comparison_recommendations_updated_at 
FROM price_comparison_recommendations 
WHERE price_comparison_recommendations.user_id = %(user_id_1)s AND price_comparison_recommendations.current_resource_id = %(current_resource_id_1)s AND price_comparison_recommendations.recommended_price_id = %(recommended_price_id_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:11,567 INFO sqlalchemy.engine.Engine: [cached since 0.07494s ago] {'user_id_1': 2, 'current_resource_id_1': 1287, 'recommended_price_id_1': 3527, 'param_1': 1}
2025-10-28 08:06:11,568 INFO sqlalchemy.engine.Engine: UPDATE price_comparison_recommendations SET monthly_savings=%(monthly_savings)s, annual_savings=%(annual_savings)s, savings_percent=%(savings_percent)s, updated_at=%(updated_at)s WHERE price_comparison_recommendations.id = %(price_comparison_recommendations_id)s
2025-10-28 08:06:11,568 INFO sqlalchemy.engine.Engine: [cached since 0.03926s ago] {'monthly_savings': 2559.4, 'annual_savings': 30712.8, 'savings_percent': 93.55, 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 568383), 'price_comparison_recommendations_id': 15}
2025-10-28 08:06:11,568 INFO sqlalchemy.engine.Engine: SELECT optimization_recommendations.resource_id AS optimization_recommendations_resource_id, optimization_recommendations.provider_id AS optimization_recommendations_provider_id, optimization_recommendations.recommendation_type AS optimization_recommendations_recommendation_type, optimization_recommendations.category AS optimization_recommendations_category, optimization_recommendations.severity AS optimization_recommendations_severity, optimization_recommendations.title AS optimization_recommendations_title, optimization_recommendations.description AS optimization_recommendations_description, optimization_recommendations.source AS optimization_recommendations_source, optimization_recommendations.resource_type AS optimization_recommendations_resource_type, optimization_recommendations.resource_name AS optimization_recommendations_resource_name, optimization_recommendations.potential_savings AS optimization_recommendations_potential_savings, optimization_recommendations.estimated_monthly_savings AS optimization_recommendations_estimated_monthly_savings, optimization_recommendations.estimated_one_time_savings AS optimization_recommendations_estimated_one_time_savings, optimization_recommendations.currency AS optimization_recommendations_currency, optimization_recommendations.confidence_score AS optimization_recommendations_confidence_score, optimization_recommendations.metrics_snapshot AS optimization_recommendations_metrics_snapshot, optimization_recommendations.insights AS optimization_recommendations_insights, optimization_recommendations.status AS optimization_recommendations_status, optimization_recommendations.first_seen_at AS optimization_recommendations_first_seen_at, optimization_recommendations.seen_at AS optimization_recommendations_seen_at, optimization_recommendations.snoozed_until AS optimization_recommendations_snoozed_until, optimization_recommendations.applied_at AS optimization_recommendations_applied_at, optimization_recommendations.dismissed_at AS optimization_recommendations_dismissed_at, optimization_recommendations.dismissed_reason AS optimization_recommendations_dismissed_reason, optimization_recommendations.id AS optimization_recommendations_id, optimization_recommendations.created_at AS optimization_recommendations_created_at, optimization_recommendations.updated_at AS optimization_recommendations_updated_at 
FROM optimization_recommendations 
WHERE optimization_recommendations.resource_id = %(resource_id_1)s AND optimization_recommendations.recommendation_type = %(recommendation_type_1)s AND optimization_recommendations.source = %(source_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:11,568 INFO sqlalchemy.engine.Engine: [cached since 0.06392s ago] {'resource_id_1': 1287, 'recommendation_type_1': 'price_compare_cross_provider', 'source_1': 'cost.price_check.cross_provider', 'param_1': 1}
2025-10-28 08:06:11,569 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_end | rule_id=cost.price_check.cross_provider provider=yandex resource_id=1287 outputs=1 created=0 updated=1 duration_ms=34
2025-10-28 08:06:11,569 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_start | rule_id=cost.rightsize.cpu_underuse provider=yandex resource_id=1288 rtype=server
2025-10-28 08:06:11,569 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE %(param_1)s = resource_tags.resource_id
2025-10-28 08:06:11,569 INFO sqlalchemy.engine.Engine: [cached since 0.03806s ago] {'param_1': 1288}
2025-10-28 08:06:11,570 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_end | rule_id=cost.rightsize.cpu_underuse provider=yandex resource_id=1288 outputs=0 created=0 updated=0 duration_ms=0
2025-10-28 08:06:11,570 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_start | rule_id=cost.price_check.cross_provider provider=yandex resource_id=1288 rtype=server
2025-10-28 08:06:11,570 INFO app.core.recommendations.plugins.price_check_rule: price_check: normalized | res_id=1288 name=goodvm vcpu=None mem_gib=2.0 region=ru-central1-d
2025-10-28 08:06:11,571 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s) AS anon_1
2025-10-28 08:06:11,571 INFO sqlalchemy.engine.Engine: [cached since 0.03429s ago] {'provider_1': 'yandex', 'ram_gb_1': 1.6, 'ram_gb_2': 2.5}
2025-10-28 08:06:11,574 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s AND (provider_prices.region LIKE concat(%(region_1)s, '%%'))) AS anon_1
2025-10-28 08:06:11,574 INFO sqlalchemy.engine.Engine: [cached since 0.03349s ago] {'provider_1': 'yandex', 'ram_gb_1': 1.6, 'ram_gb_2': 2.5, 'region_1': 'ru'}
2025-10-28 08:06:11,579 INFO sqlalchemy.engine.Engine: SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s AND (provider_prices.region LIKE concat(%(region_1)s, '%%')) ORDER BY provider_prices.monthly_cost IS NULL ASC, provider_prices.monthly_cost ASC 
 LIMIT %(param_1)s
2025-10-28 08:06:11,579 INFO sqlalchemy.engine.Engine: [cached since 0.03368s ago] {'provider_1': 'yandex', 'ram_gb_1': 1.6, 'ram_gb_2': 2.5, 'region_1': 'ru', 'param_1': 500}
2025-10-28 08:06:11,597 INFO app.core.recommendations.plugins.price_check_rule: price_check: catalog scope | res_id=1288 total_prices=492 region_filtered=312
2025-10-28 08:06:11,597 INFO app.core.recommendations.plugins.price_check_rule: price_check: candidate_search | res_id=1288 pref_region=ru-central1-d min_score=0.00
2025-10-28 08:06:11,600 INFO app.core.recommendations.plugins.price_check_rule: price_check: candidate | res_id=1288 best_price_id=3527 score=0.40 target_monthly=176.60 current_monthly=2224.50 savings=2047.90 min_abs=0.00
2025-10-28 08:06:11,600 INFO sqlalchemy.engine.Engine: SELECT price_comparison_recommendations.user_id AS price_comparison_recommendations_user_id, price_comparison_recommendations.current_resource_id AS price_comparison_recommendations_current_resource_id, price_comparison_recommendations.recommended_price_id AS price_comparison_recommendations_recommended_price_id, price_comparison_recommendations.similarity_score AS price_comparison_recommendations_similarity_score, price_comparison_recommendations.monthly_savings AS price_comparison_recommendations_monthly_savings, price_comparison_recommendations.annual_savings AS price_comparison_recommendations_annual_savings, price_comparison_recommendations.savings_percent AS price_comparison_recommendations_savings_percent, price_comparison_recommendations.migration_effort AS price_comparison_recommendations_migration_effort, price_comparison_recommendations.migration_notes AS price_comparison_recommendations_migration_notes, price_comparison_recommendations.status AS price_comparison_recommendations_status, price_comparison_recommendations.user_feedback AS price_comparison_recommendations_user_feedback, price_comparison_recommendations.id AS price_comparison_recommendations_id, price_comparison_recommendations.created_at AS price_comparison_recommendations_created_at, price_comparison_recommendations.updated_at AS price_comparison_recommendations_updated_at 
FROM price_comparison_recommendations 
WHERE price_comparison_recommendations.user_id = %(user_id_1)s AND price_comparison_recommendations.current_resource_id = %(current_resource_id_1)s AND price_comparison_recommendations.recommended_price_id = %(recommended_price_id_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:11,600 INFO sqlalchemy.engine.Engine: [cached since 0.1083s ago] {'user_id_1': 2, 'current_resource_id_1': 1288, 'recommended_price_id_1': 3527, 'param_1': 1}
2025-10-28 08:06:11,601 INFO sqlalchemy.engine.Engine: UPDATE price_comparison_recommendations SET monthly_savings=%(monthly_savings)s, annual_savings=%(annual_savings)s, savings_percent=%(savings_percent)s, updated_at=%(updated_at)s WHERE price_comparison_recommendations.id = %(price_comparison_recommendations_id)s
2025-10-28 08:06:11,601 INFO sqlalchemy.engine.Engine: [cached since 0.0725s ago] {'monthly_savings': 2047.9, 'annual_savings': 24574.8, 'savings_percent': 92.06, 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 601624), 'price_comparison_recommendations_id': 16}
2025-10-28 08:06:11,602 INFO sqlalchemy.engine.Engine: SELECT optimization_recommendations.resource_id AS optimization_recommendations_resource_id, optimization_recommendations.provider_id AS optimization_recommendations_provider_id, optimization_recommendations.recommendation_type AS optimization_recommendations_recommendation_type, optimization_recommendations.category AS optimization_recommendations_category, optimization_recommendations.severity AS optimization_recommendations_severity, optimization_recommendations.title AS optimization_recommendations_title, optimization_recommendations.description AS optimization_recommendations_description, optimization_recommendations.source AS optimization_recommendations_source, optimization_recommendations.resource_type AS optimization_recommendations_resource_type, optimization_recommendations.resource_name AS optimization_recommendations_resource_name, optimization_recommendations.potential_savings AS optimization_recommendations_potential_savings, optimization_recommendations.estimated_monthly_savings AS optimization_recommendations_estimated_monthly_savings, optimization_recommendations.estimated_one_time_savings AS optimization_recommendations_estimated_one_time_savings, optimization_recommendations.currency AS optimization_recommendations_currency, optimization_recommendations.confidence_score AS optimization_recommendations_confidence_score, optimization_recommendations.metrics_snapshot AS optimization_recommendations_metrics_snapshot, optimization_recommendations.insights AS optimization_recommendations_insights, optimization_recommendations.status AS optimization_recommendations_status, optimization_recommendations.first_seen_at AS optimization_recommendations_first_seen_at, optimization_recommendations.seen_at AS optimization_recommendations_seen_at, optimization_recommendations.snoozed_until AS optimization_recommendations_snoozed_until, optimization_recommendations.applied_at AS optimization_recommendations_applied_at, optimization_recommendations.dismissed_at AS optimization_recommendations_dismissed_at, optimization_recommendations.dismissed_reason AS optimization_recommendations_dismissed_reason, optimization_recommendations.id AS optimization_recommendations_id, optimization_recommendations.created_at AS optimization_recommendations_created_at, optimization_recommendations.updated_at AS optimization_recommendations_updated_at 
FROM optimization_recommendations 
WHERE optimization_recommendations.resource_id = %(resource_id_1)s AND optimization_recommendations.recommendation_type = %(recommendation_type_1)s AND optimization_recommendations.source = %(source_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:11,602 INFO sqlalchemy.engine.Engine: [cached since 0.09715s ago] {'resource_id_1': 1288, 'recommendation_type_1': 'price_compare_cross_provider', 'source_1': 'cost.price_check.cross_provider', 'param_1': 1}
2025-10-28 08:06:11,602 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_end | rule_id=cost.price_check.cross_provider provider=yandex resource_id=1288 outputs=1 created=0 updated=1 duration_ms=32
2025-10-28 08:06:11,602 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_skip | reason=not_applicable rule_id=cost.rightsize.cpu_underuse provider=yandex resource_id=1289 rtype=volume
2025-10-28 08:06:11,602 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_skip | reason=not_applicable rule_id=cost.price_check.cross_provider provider=yandex resource_id=1289 rtype=volume
2025-10-28 08:06:11,603 INFO sqlalchemy.engine.Engine: UPDATE optimization_recommendations SET description=%(description)s, estimated_monthly_savings=%(estimated_monthly_savings)s, metrics_snapshot=%(metrics_snapshot)s, updated_at=%(updated_at)s WHERE optimization_recommendations.id = %(optimization_recommendations_id)s
2025-10-28 08:06:11,603 INFO sqlalchemy.engine.Engine: [generated in 0.00008s] {'description': 'Найдено сопоставимое предложение у selectel (ru-6a) примерно за 176 RUB/мес. Текущая стоимость ~2224 RUB.', 'estimated_monthly_savings': 2047.9, 'metrics_snapshot': "{'similarity': 0.4, 'target_monthly': 176.6, 'current_monthly': 2224.5}", 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 603275), 'optimization_recommendations_id': 614}
2025-10-28 08:06:11,603 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.id = %(pk_1)s
2025-10-28 08:06:11,604 INFO sqlalchemy.engine.Engine: [cached since 50.93s ago] {'pk_1': 150}
2025-10-28 08:06:11,604 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_start | rule_id=cost.rightsize.cpu_underuse provider=yandex resource_id=1650 rtype=server
2025-10-28 08:06:11,604 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE %(param_1)s = resource_tags.resource_id
2025-10-28 08:06:11,604 INFO sqlalchemy.engine.Engine: [cached since 0.07267s ago] {'param_1': 1650}
2025-10-28 08:06:11,605 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_end | rule_id=cost.rightsize.cpu_underuse provider=yandex resource_id=1650 outputs=0 created=0 updated=0 duration_ms=0
2025-10-28 08:06:11,605 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_start | rule_id=cost.price_check.cross_provider provider=yandex resource_id=1650 rtype=server
2025-10-28 08:06:11,605 INFO app.core.recommendations.plugins.price_check_rule: price_check: normalized | res_id=1650 name=cl1etc88oikj3sh8mkro-ydas vcpu=None mem_gib=16.0 region=ru-central1-b
2025-10-28 08:06:11,605 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s) AS anon_1
2025-10-28 08:06:11,605 INFO sqlalchemy.engine.Engine: [cached since 0.0687s ago] {'provider_1': 'yandex', 'ram_gb_1': 12.8, 'ram_gb_2': 20.0}
2025-10-28 08:06:11,608 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s AND (provider_prices.region LIKE concat(%(region_1)s, '%%'))) AS anon_1
2025-10-28 08:06:11,608 INFO sqlalchemy.engine.Engine: [cached since 0.06747s ago] {'provider_1': 'yandex', 'ram_gb_1': 12.8, 'ram_gb_2': 20.0, 'region_1': 'ru'}
2025-10-28 08:06:11,613 INFO sqlalchemy.engine.Engine: SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s AND (provider_prices.region LIKE concat(%(region_1)s, '%%')) ORDER BY provider_prices.monthly_cost IS NULL ASC, provider_prices.monthly_cost ASC 
 LIMIT %(param_1)s
2025-10-28 08:06:11,613 INFO sqlalchemy.engine.Engine: [cached since 0.06786s ago] {'provider_1': 'yandex', 'ram_gb_1': 12.8, 'ram_gb_2': 20.0, 'region_1': 'ru', 'param_1': 500}
2025-10-28 08:06:11,635 INFO app.core.recommendations.plugins.price_check_rule: price_check: catalog scope | res_id=1650 total_prices=672 region_filtered=456
2025-10-28 08:06:11,635 INFO app.core.recommendations.plugins.price_check_rule: price_check: candidate_search | res_id=1650 pref_region=ru-central1-b min_score=0.00
2025-10-28 08:06:11,639 INFO app.core.recommendations.plugins.price_check_rule: price_check: candidate | res_id=1650 best_price_id=3539 score=0.40 target_monthly=606.68 current_monthly=9158.40 savings=8551.72 min_abs=0.00
2025-10-28 08:06:11,639 INFO sqlalchemy.engine.Engine: SELECT price_comparison_recommendations.user_id AS price_comparison_recommendations_user_id, price_comparison_recommendations.current_resource_id AS price_comparison_recommendations_current_resource_id, price_comparison_recommendations.recommended_price_id AS price_comparison_recommendations_recommended_price_id, price_comparison_recommendations.similarity_score AS price_comparison_recommendations_similarity_score, price_comparison_recommendations.monthly_savings AS price_comparison_recommendations_monthly_savings, price_comparison_recommendations.annual_savings AS price_comparison_recommendations_annual_savings, price_comparison_recommendations.savings_percent AS price_comparison_recommendations_savings_percent, price_comparison_recommendations.migration_effort AS price_comparison_recommendations_migration_effort, price_comparison_recommendations.migration_notes AS price_comparison_recommendations_migration_notes, price_comparison_recommendations.status AS price_comparison_recommendations_status, price_comparison_recommendations.user_feedback AS price_comparison_recommendations_user_feedback, price_comparison_recommendations.id AS price_comparison_recommendations_id, price_comparison_recommendations.created_at AS price_comparison_recommendations_created_at, price_comparison_recommendations.updated_at AS price_comparison_recommendations_updated_at 
FROM price_comparison_recommendations 
WHERE price_comparison_recommendations.user_id = %(user_id_1)s AND price_comparison_recommendations.current_resource_id = %(current_resource_id_1)s AND price_comparison_recommendations.recommended_price_id = %(recommended_price_id_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:11,639 INFO sqlalchemy.engine.Engine: [cached since 0.1469s ago] {'user_id_1': 2, 'current_resource_id_1': 1650, 'recommended_price_id_1': 3539, 'param_1': 1}
2025-10-28 08:06:11,640 INFO sqlalchemy.engine.Engine: INSERT INTO price_comparison_recommendations (user_id, current_resource_id, recommended_price_id, similarity_score, monthly_savings, annual_savings, savings_percent, migration_effort, migration_notes, status, user_feedback, created_at, updated_at) VALUES (%(user_id)s, %(current_resource_id)s, %(recommended_price_id)s, %(similarity_score)s, %(monthly_savings)s, %(annual_savings)s, %(savings_percent)s, %(migration_effort)s, %(migration_notes)s, %(status)s, %(user_feedback)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:11,640 INFO sqlalchemy.engine.Engine: [generated in 0.00009s] {'user_id': 2, 'current_resource_id': 1650, 'recommended_price_id': 3539, 'similarity_score': 40.0, 'monthly_savings': 8551.72, 'annual_savings': 102620.64, 'savings_percent': 93.38, 'migration_effort': 'medium', 'migration_notes': None, 'status': 'pending', 'user_feedback': None, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 640517), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 640518)}
2025-10-28 08:06:11,641 INFO sqlalchemy.engine.Engine: SELECT optimization_recommendations.resource_id AS optimization_recommendations_resource_id, optimization_recommendations.provider_id AS optimization_recommendations_provider_id, optimization_recommendations.recommendation_type AS optimization_recommendations_recommendation_type, optimization_recommendations.category AS optimization_recommendations_category, optimization_recommendations.severity AS optimization_recommendations_severity, optimization_recommendations.title AS optimization_recommendations_title, optimization_recommendations.description AS optimization_recommendations_description, optimization_recommendations.source AS optimization_recommendations_source, optimization_recommendations.resource_type AS optimization_recommendations_resource_type, optimization_recommendations.resource_name AS optimization_recommendations_resource_name, optimization_recommendations.potential_savings AS optimization_recommendations_potential_savings, optimization_recommendations.estimated_monthly_savings AS optimization_recommendations_estimated_monthly_savings, optimization_recommendations.estimated_one_time_savings AS optimization_recommendations_estimated_one_time_savings, optimization_recommendations.currency AS optimization_recommendations_currency, optimization_recommendations.confidence_score AS optimization_recommendations_confidence_score, optimization_recommendations.metrics_snapshot AS optimization_recommendations_metrics_snapshot, optimization_recommendations.insights AS optimization_recommendations_insights, optimization_recommendations.status AS optimization_recommendations_status, optimization_recommendations.first_seen_at AS optimization_recommendations_first_seen_at, optimization_recommendations.seen_at AS optimization_recommendations_seen_at, optimization_recommendations.snoozed_until AS optimization_recommendations_snoozed_until, optimization_recommendations.applied_at AS optimization_recommendations_applied_at, optimization_recommendations.dismissed_at AS optimization_recommendations_dismissed_at, optimization_recommendations.dismissed_reason AS optimization_recommendations_dismissed_reason, optimization_recommendations.id AS optimization_recommendations_id, optimization_recommendations.created_at AS optimization_recommendations_created_at, optimization_recommendations.updated_at AS optimization_recommendations_updated_at 
FROM optimization_recommendations 
WHERE optimization_recommendations.resource_id = %(resource_id_1)s AND optimization_recommendations.recommendation_type = %(recommendation_type_1)s AND optimization_recommendations.source = %(source_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:11,641 INFO sqlalchemy.engine.Engine: [cached since 0.1365s ago] {'resource_id_1': 1650, 'recommendation_type_1': 'price_compare_cross_provider', 'source_1': 'cost.price_check.cross_provider', 'param_1': 1}
2025-10-28 08:06:11,642 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_end | rule_id=cost.price_check.cross_provider provider=yandex resource_id=1650 outputs=1 created=1 updated=0 duration_ms=36
2025-10-28 08:06:11,642 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_start | rule_id=cost.rightsize.cpu_underuse provider=yandex resource_id=1651 rtype=server
2025-10-28 08:06:11,642 INFO sqlalchemy.engine.Engine: INSERT INTO optimization_recommendations (resource_id, provider_id, recommendation_type, category, severity, title, description, source, resource_type, resource_name, potential_savings, estimated_monthly_savings, estimated_one_time_savings, currency, confidence_score, metrics_snapshot, insights, status, first_seen_at, seen_at, snoozed_until, applied_at, dismissed_at, dismissed_reason, created_at, updated_at) VALUES (%(resource_id)s, %(provider_id)s, %(recommendation_type)s, %(category)s, %(severity)s, %(title)s, %(description)s, %(source)s, %(resource_type)s, %(resource_name)s, %(potential_savings)s, %(estimated_monthly_savings)s, %(estimated_one_time_savings)s, %(currency)s, %(confidence_score)s, %(metrics_snapshot)s, %(insights)s, %(status)s, %(first_seen_at)s, %(seen_at)s, %(snoozed_until)s, %(applied_at)s, %(dismissed_at)s, %(dismissed_reason)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:11,642 INFO sqlalchemy.engine.Engine: [generated in 0.00010s] {'resource_id': 1650, 'provider_id': 150, 'recommendation_type': 'price_compare_cross_provider', 'category': 'cost', 'severity': 'low', 'title': 'Доступен более дешёвый аналог у другого провайдера', 'description': 'Найдено сопоставимое предложение у selectel (ru-6a) примерно за 606 RUB/мес. Текущая стоимость ~9158 RUB.', 'source': 'cost.price_check.cross_provider', 'resource_type': 'server', 'resource_name': 'cl1etc88oikj3sh8mkro-ydas', 'potential_savings': 0.0, 'estimated_monthly_savings': 8551.72, 'estimated_one_time_savings': 0.0, 'currency': 'RUB', 'confidence_score': 0.4, 'metrics_snapshot': "{'similarity': 0.4, 'target_monthly': 606.68, 'current_monthly': 9158.4}", 'insights': "{'recommended_provider': 'selectel', 'recommended_region': 'ru-6a', 'recommended_sku': 'v1-r16-d10:ru-6a', 'recommended_price_id': 3539, 'specs_unkno ... (117 characters truncated) ... : 0.4, 'price_id': 3539}, {'provider': 'selectel', 'region': 'ru-1c', 'sku': 'v1-r16-d10:ru-1c', 'monthly': 637.41, 'score': 0.4, 'price_id': 2531}]}", 'status': 'pending', 'first_seen_at': datetime.datetime(2025, 10, 28, 5, 6, 11, 641999), 'seen_at': None, 'snoozed_until': None, 'applied_at': None, 'dismissed_at': None, 'dismissed_reason': None, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 642593), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 642594)}
2025-10-28 08:06:11,644 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE %(param_1)s = resource_tags.resource_id
2025-10-28 08:06:11,644 INFO sqlalchemy.engine.Engine: [cached since 0.1122s ago] {'param_1': 1651}
2025-10-28 08:06:11,644 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_end | rule_id=cost.rightsize.cpu_underuse provider=yandex resource_id=1651 outputs=0 created=0 updated=0 duration_ms=2
2025-10-28 08:06:11,644 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_start | rule_id=cost.price_check.cross_provider provider=yandex resource_id=1651 rtype=server
2025-10-28 08:06:11,644 INFO app.core.recommendations.plugins.price_check_rule: price_check: normalized | res_id=1651 name=voluxprod vcpu=None mem_gib=2.0 region=ru-central1-b
2025-10-28 08:06:11,645 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s) AS anon_1
2025-10-28 08:06:11,645 INFO sqlalchemy.engine.Engine: [cached since 0.1082s ago] {'provider_1': 'yandex', 'ram_gb_1': 1.6, 'ram_gb_2': 2.5}
2025-10-28 08:06:11,648 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s AND (provider_prices.region LIKE concat(%(region_1)s, '%%'))) AS anon_1
2025-10-28 08:06:11,648 INFO sqlalchemy.engine.Engine: [cached since 0.1073s ago] {'provider_1': 'yandex', 'ram_gb_1': 1.6, 'ram_gb_2': 2.5, 'region_1': 'ru'}
2025-10-28 08:06:11,653 INFO sqlalchemy.engine.Engine: SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s AND (provider_prices.region LIKE concat(%(region_1)s, '%%')) ORDER BY provider_prices.monthly_cost IS NULL ASC, provider_prices.monthly_cost ASC 
 LIMIT %(param_1)s
2025-10-28 08:06:11,653 INFO sqlalchemy.engine.Engine: [cached since 0.1079s ago] {'provider_1': 'yandex', 'ram_gb_1': 1.6, 'ram_gb_2': 2.5, 'region_1': 'ru', 'param_1': 500}
2025-10-28 08:06:11,670 INFO app.core.recommendations.plugins.price_check_rule: price_check: catalog scope | res_id=1651 total_prices=492 region_filtered=312
2025-10-28 08:06:11,670 INFO app.core.recommendations.plugins.price_check_rule: price_check: candidate_search | res_id=1651 pref_region=ru-central1-b min_score=0.00
2025-10-28 08:06:11,672 INFO app.core.recommendations.plugins.price_check_rule: price_check: candidate | res_id=1651 best_price_id=3527 score=0.40 target_monthly=176.60 current_monthly=1348.80 savings=1172.20 min_abs=0.00
2025-10-28 08:06:11,672 INFO sqlalchemy.engine.Engine: SELECT price_comparison_recommendations.user_id AS price_comparison_recommendations_user_id, price_comparison_recommendations.current_resource_id AS price_comparison_recommendations_current_resource_id, price_comparison_recommendations.recommended_price_id AS price_comparison_recommendations_recommended_price_id, price_comparison_recommendations.similarity_score AS price_comparison_recommendations_similarity_score, price_comparison_recommendations.monthly_savings AS price_comparison_recommendations_monthly_savings, price_comparison_recommendations.annual_savings AS price_comparison_recommendations_annual_savings, price_comparison_recommendations.savings_percent AS price_comparison_recommendations_savings_percent, price_comparison_recommendations.migration_effort AS price_comparison_recommendations_migration_effort, price_comparison_recommendations.migration_notes AS price_comparison_recommendations_migration_notes, price_comparison_recommendations.status AS price_comparison_recommendations_status, price_comparison_recommendations.user_feedback AS price_comparison_recommendations_user_feedback, price_comparison_recommendations.id AS price_comparison_recommendations_id, price_comparison_recommendations.created_at AS price_comparison_recommendations_created_at, price_comparison_recommendations.updated_at AS price_comparison_recommendations_updated_at 
FROM price_comparison_recommendations 
WHERE price_comparison_recommendations.user_id = %(user_id_1)s AND price_comparison_recommendations.current_resource_id = %(current_resource_id_1)s AND price_comparison_recommendations.recommended_price_id = %(recommended_price_id_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:11,672 INFO sqlalchemy.engine.Engine: [cached since 0.1804s ago] {'user_id_1': 2, 'current_resource_id_1': 1651, 'recommended_price_id_1': 3527, 'param_1': 1}
2025-10-28 08:06:11,673 INFO sqlalchemy.engine.Engine: INSERT INTO price_comparison_recommendations (user_id, current_resource_id, recommended_price_id, similarity_score, monthly_savings, annual_savings, savings_percent, migration_effort, migration_notes, status, user_feedback, created_at, updated_at) VALUES (%(user_id)s, %(current_resource_id)s, %(recommended_price_id)s, %(similarity_score)s, %(monthly_savings)s, %(annual_savings)s, %(savings_percent)s, %(migration_effort)s, %(migration_notes)s, %(status)s, %(user_feedback)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:11,673 INFO sqlalchemy.engine.Engine: [cached since 0.03322s ago] {'user_id': 2, 'current_resource_id': 1651, 'recommended_price_id': 3527, 'similarity_score': 40.0, 'monthly_savings': 1172.2, 'annual_savings': 14066.4, 'savings_percent': 86.91, 'migration_effort': 'medium', 'migration_notes': None, 'status': 'pending', 'user_feedback': None, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 673657), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 673658)}
2025-10-28 08:06:11,674 INFO sqlalchemy.engine.Engine: SELECT optimization_recommendations.resource_id AS optimization_recommendations_resource_id, optimization_recommendations.provider_id AS optimization_recommendations_provider_id, optimization_recommendations.recommendation_type AS optimization_recommendations_recommendation_type, optimization_recommendations.category AS optimization_recommendations_category, optimization_recommendations.severity AS optimization_recommendations_severity, optimization_recommendations.title AS optimization_recommendations_title, optimization_recommendations.description AS optimization_recommendations_description, optimization_recommendations.source AS optimization_recommendations_source, optimization_recommendations.resource_type AS optimization_recommendations_resource_type, optimization_recommendations.resource_name AS optimization_recommendations_resource_name, optimization_recommendations.potential_savings AS optimization_recommendations_potential_savings, optimization_recommendations.estimated_monthly_savings AS optimization_recommendations_estimated_monthly_savings, optimization_recommendations.estimated_one_time_savings AS optimization_recommendations_estimated_one_time_savings, optimization_recommendations.currency AS optimization_recommendations_currency, optimization_recommendations.confidence_score AS optimization_recommendations_confidence_score, optimization_recommendations.metrics_snapshot AS optimization_recommendations_metrics_snapshot, optimization_recommendations.insights AS optimization_recommendations_insights, optimization_recommendations.status AS optimization_recommendations_status, optimization_recommendations.first_seen_at AS optimization_recommendations_first_seen_at, optimization_recommendations.seen_at AS optimization_recommendations_seen_at, optimization_recommendations.snoozed_until AS optimization_recommendations_snoozed_until, optimization_recommendations.applied_at AS optimization_recommendations_applied_at, optimization_recommendations.dismissed_at AS optimization_recommendations_dismissed_at, optimization_recommendations.dismissed_reason AS optimization_recommendations_dismissed_reason, optimization_recommendations.id AS optimization_recommendations_id, optimization_recommendations.created_at AS optimization_recommendations_created_at, optimization_recommendations.updated_at AS optimization_recommendations_updated_at 
FROM optimization_recommendations 
WHERE optimization_recommendations.resource_id = %(resource_id_1)s AND optimization_recommendations.recommendation_type = %(recommendation_type_1)s AND optimization_recommendations.source = %(source_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:11,674 INFO sqlalchemy.engine.Engine: [cached since 0.1692s ago] {'resource_id_1': 1651, 'recommendation_type_1': 'price_compare_cross_provider', 'source_1': 'cost.price_check.cross_provider', 'param_1': 1}
2025-10-28 08:06:11,674 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_end | rule_id=cost.price_check.cross_provider provider=yandex resource_id=1651 outputs=1 created=1 updated=0 duration_ms=30
2025-10-28 08:06:11,674 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_start | rule_id=cost.rightsize.cpu_underuse provider=yandex resource_id=1652 rtype=server
2025-10-28 08:06:11,675 INFO sqlalchemy.engine.Engine: INSERT INTO optimization_recommendations (resource_id, provider_id, recommendation_type, category, severity, title, description, source, resource_type, resource_name, potential_savings, estimated_monthly_savings, estimated_one_time_savings, currency, confidence_score, metrics_snapshot, insights, status, first_seen_at, seen_at, snoozed_until, applied_at, dismissed_at, dismissed_reason, created_at, updated_at) VALUES (%(resource_id)s, %(provider_id)s, %(recommendation_type)s, %(category)s, %(severity)s, %(title)s, %(description)s, %(source)s, %(resource_type)s, %(resource_name)s, %(potential_savings)s, %(estimated_monthly_savings)s, %(estimated_one_time_savings)s, %(currency)s, %(confidence_score)s, %(metrics_snapshot)s, %(insights)s, %(status)s, %(first_seen_at)s, %(seen_at)s, %(snoozed_until)s, %(applied_at)s, %(dismissed_at)s, %(dismissed_reason)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:11,675 INFO sqlalchemy.engine.Engine: [cached since 0.03258s ago] {'resource_id': 1651, 'provider_id': 150, 'recommendation_type': 'price_compare_cross_provider', 'category': 'cost', 'severity': 'low', 'title': 'Доступен более дешёвый аналог у другого провайдера', 'description': 'Найдено сопоставимое предложение у selectel (ru-6a) примерно за 176 RUB/мес. Текущая стоимость ~1348 RUB.', 'source': 'cost.price_check.cross_provider', 'resource_type': 'server', 'resource_name': 'voluxprod', 'potential_savings': 0.0, 'estimated_monthly_savings': 1172.2, 'estimated_one_time_savings': 0.0, 'currency': 'RUB', 'confidence_score': 0.4, 'metrics_snapshot': "{'similarity': 0.4, 'target_monthly': 176.6, 'current_monthly': 1348.8}", 'insights': "{'recommended_provider': 'selectel', 'recommended_region': 'ru-6a', 'recommended_sku': 'v1-r2-d10:ru-6a', 'recommended_price_id': 3527, 'specs_unknow ... (113 characters truncated) ... ': 0.4, 'price_id': 3527}, {'provider': 'selectel', 'region': 'ru-1c', 'sku': 'v1-r2-d10:ru-1c', 'monthly': 180.45, 'score': 0.4, 'price_id': 2519}]}", 'status': 'pending', 'first_seen_at': datetime.datetime(2025, 10, 28, 5, 6, 11, 674789), 'seen_at': None, 'snoozed_until': None, 'applied_at': None, 'dismissed_at': None, 'dismissed_reason': None, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 675093), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 675093)}
2025-10-28 08:06:11,675 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE %(param_1)s = resource_tags.resource_id
2025-10-28 08:06:11,675 INFO sqlalchemy.engine.Engine: [cached since 0.1437s ago] {'param_1': 1652}
2025-10-28 08:06:11,676 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_end | rule_id=cost.rightsize.cpu_underuse provider=yandex resource_id=1652 outputs=0 created=0 updated=0 duration_ms=1
2025-10-28 08:06:11,676 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_start | rule_id=cost.price_check.cross_provider provider=yandex resource_id=1652 rtype=server
2025-10-28 08:06:11,676 INFO app.core.recommendations.plugins.price_check_rule: price_check: normalized | res_id=1652 name=volux vcpu=None mem_gib=2.0 region=ru-central1-b
2025-10-28 08:06:11,676 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s) AS anon_1
2025-10-28 08:06:11,676 INFO sqlalchemy.engine.Engine: [cached since 0.1397s ago] {'provider_1': 'yandex', 'ram_gb_1': 1.6, 'ram_gb_2': 2.5}
2025-10-28 08:06:11,680 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s AND (provider_prices.region LIKE concat(%(region_1)s, '%%'))) AS anon_1
2025-10-28 08:06:11,680 INFO sqlalchemy.engine.Engine: [cached since 0.1387s ago] {'provider_1': 'yandex', 'ram_gb_1': 1.6, 'ram_gb_2': 2.5, 'region_1': 'ru'}
2025-10-28 08:06:11,685 INFO sqlalchemy.engine.Engine: SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s AND (provider_prices.region LIKE concat(%(region_1)s, '%%')) ORDER BY provider_prices.monthly_cost IS NULL ASC, provider_prices.monthly_cost ASC 
 LIMIT %(param_1)s
2025-10-28 08:06:11,685 INFO sqlalchemy.engine.Engine: [cached since 0.1392s ago] {'provider_1': 'yandex', 'ram_gb_1': 1.6, 'ram_gb_2': 2.5, 'region_1': 'ru', 'param_1': 500}
2025-10-28 08:06:11,701 INFO app.core.recommendations.plugins.price_check_rule: price_check: catalog scope | res_id=1652 total_prices=492 region_filtered=312
2025-10-28 08:06:11,701 INFO app.core.recommendations.plugins.price_check_rule: price_check: candidate_search | res_id=1652 pref_region=ru-central1-b min_score=0.00
2025-10-28 08:06:11,703 INFO app.core.recommendations.plugins.price_check_rule: price_check: candidate | res_id=1652 best_price_id=3527 score=0.40 target_monthly=176.60 current_monthly=1348.80 savings=1172.20 min_abs=0.00
2025-10-28 08:06:11,703 INFO sqlalchemy.engine.Engine: SELECT price_comparison_recommendations.user_id AS price_comparison_recommendations_user_id, price_comparison_recommendations.current_resource_id AS price_comparison_recommendations_current_resource_id, price_comparison_recommendations.recommended_price_id AS price_comparison_recommendations_recommended_price_id, price_comparison_recommendations.similarity_score AS price_comparison_recommendations_similarity_score, price_comparison_recommendations.monthly_savings AS price_comparison_recommendations_monthly_savings, price_comparison_recommendations.annual_savings AS price_comparison_recommendations_annual_savings, price_comparison_recommendations.savings_percent AS price_comparison_recommendations_savings_percent, price_comparison_recommendations.migration_effort AS price_comparison_recommendations_migration_effort, price_comparison_recommendations.migration_notes AS price_comparison_recommendations_migration_notes, price_comparison_recommendations.status AS price_comparison_recommendations_status, price_comparison_recommendations.user_feedback AS price_comparison_recommendations_user_feedback, price_comparison_recommendations.id AS price_comparison_recommendations_id, price_comparison_recommendations.created_at AS price_comparison_recommendations_created_at, price_comparison_recommendations.updated_at AS price_comparison_recommendations_updated_at 
FROM price_comparison_recommendations 
WHERE price_comparison_recommendations.user_id = %(user_id_1)s AND price_comparison_recommendations.current_resource_id = %(current_resource_id_1)s AND price_comparison_recommendations.recommended_price_id = %(recommended_price_id_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:11,703 INFO sqlalchemy.engine.Engine: [cached since 0.2113s ago] {'user_id_1': 2, 'current_resource_id_1': 1652, 'recommended_price_id_1': 3527, 'param_1': 1}
2025-10-28 08:06:11,704 INFO sqlalchemy.engine.Engine: INSERT INTO price_comparison_recommendations (user_id, current_resource_id, recommended_price_id, similarity_score, monthly_savings, annual_savings, savings_percent, migration_effort, migration_notes, status, user_feedback, created_at, updated_at) VALUES (%(user_id)s, %(current_resource_id)s, %(recommended_price_id)s, %(similarity_score)s, %(monthly_savings)s, %(annual_savings)s, %(savings_percent)s, %(migration_effort)s, %(migration_notes)s, %(status)s, %(user_feedback)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:11,704 INFO sqlalchemy.engine.Engine: [cached since 0.06417s ago] {'user_id': 2, 'current_resource_id': 1652, 'recommended_price_id': 3527, 'similarity_score': 40.0, 'monthly_savings': 1172.2, 'annual_savings': 14066.4, 'savings_percent': 86.91, 'migration_effort': 'medium', 'migration_notes': None, 'status': 'pending', 'user_feedback': None, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 704606), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 704607)}
2025-10-28 08:06:11,705 INFO sqlalchemy.engine.Engine: SELECT optimization_recommendations.resource_id AS optimization_recommendations_resource_id, optimization_recommendations.provider_id AS optimization_recommendations_provider_id, optimization_recommendations.recommendation_type AS optimization_recommendations_recommendation_type, optimization_recommendations.category AS optimization_recommendations_category, optimization_recommendations.severity AS optimization_recommendations_severity, optimization_recommendations.title AS optimization_recommendations_title, optimization_recommendations.description AS optimization_recommendations_description, optimization_recommendations.source AS optimization_recommendations_source, optimization_recommendations.resource_type AS optimization_recommendations_resource_type, optimization_recommendations.resource_name AS optimization_recommendations_resource_name, optimization_recommendations.potential_savings AS optimization_recommendations_potential_savings, optimization_recommendations.estimated_monthly_savings AS optimization_recommendations_estimated_monthly_savings, optimization_recommendations.estimated_one_time_savings AS optimization_recommendations_estimated_one_time_savings, optimization_recommendations.currency AS optimization_recommendations_currency, optimization_recommendations.confidence_score AS optimization_recommendations_confidence_score, optimization_recommendations.metrics_snapshot AS optimization_recommendations_metrics_snapshot, optimization_recommendations.insights AS optimization_recommendations_insights, optimization_recommendations.status AS optimization_recommendations_status, optimization_recommendations.first_seen_at AS optimization_recommendations_first_seen_at, optimization_recommendations.seen_at AS optimization_recommendations_seen_at, optimization_recommendations.snoozed_until AS optimization_recommendations_snoozed_until, optimization_recommendations.applied_at AS optimization_recommendations_applied_at, optimization_recommendations.dismissed_at AS optimization_recommendations_dismissed_at, optimization_recommendations.dismissed_reason AS optimization_recommendations_dismissed_reason, optimization_recommendations.id AS optimization_recommendations_id, optimization_recommendations.created_at AS optimization_recommendations_created_at, optimization_recommendations.updated_at AS optimization_recommendations_updated_at 
FROM optimization_recommendations 
WHERE optimization_recommendations.resource_id = %(resource_id_1)s AND optimization_recommendations.recommendation_type = %(recommendation_type_1)s AND optimization_recommendations.source = %(source_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:11,705 INFO sqlalchemy.engine.Engine: [cached since 0.2001s ago] {'resource_id_1': 1652, 'recommendation_type_1': 'price_compare_cross_provider', 'source_1': 'cost.price_check.cross_provider', 'param_1': 1}
2025-10-28 08:06:11,705 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_end | rule_id=cost.price_check.cross_provider provider=yandex resource_id=1652 outputs=1 created=1 updated=0 duration_ms=29
2025-10-28 08:06:11,705 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_start | rule_id=cost.rightsize.cpu_underuse provider=yandex resource_id=1653 rtype=server
2025-10-28 08:06:11,705 INFO sqlalchemy.engine.Engine: INSERT INTO optimization_recommendations (resource_id, provider_id, recommendation_type, category, severity, title, description, source, resource_type, resource_name, potential_savings, estimated_monthly_savings, estimated_one_time_savings, currency, confidence_score, metrics_snapshot, insights, status, first_seen_at, seen_at, snoozed_until, applied_at, dismissed_at, dismissed_reason, created_at, updated_at) VALUES (%(resource_id)s, %(provider_id)s, %(recommendation_type)s, %(category)s, %(severity)s, %(title)s, %(description)s, %(source)s, %(resource_type)s, %(resource_name)s, %(potential_savings)s, %(estimated_monthly_savings)s, %(estimated_one_time_savings)s, %(currency)s, %(confidence_score)s, %(metrics_snapshot)s, %(insights)s, %(status)s, %(first_seen_at)s, %(seen_at)s, %(snoozed_until)s, %(applied_at)s, %(dismissed_at)s, %(dismissed_reason)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:11,705 INFO sqlalchemy.engine.Engine: [cached since 0.06339s ago] {'resource_id': 1652, 'provider_id': 150, 'recommendation_type': 'price_compare_cross_provider', 'category': 'cost', 'severity': 'low', 'title': 'Доступен более дешёвый аналог у другого провайдера', 'description': 'Найдено сопоставимое предложение у selectel (ru-6a) примерно за 176 RUB/мес. Текущая стоимость ~1348 RUB.', 'source': 'cost.price_check.cross_provider', 'resource_type': 'server', 'resource_name': 'volux', 'potential_savings': 0.0, 'estimated_monthly_savings': 1172.2, 'estimated_one_time_savings': 0.0, 'currency': 'RUB', 'confidence_score': 0.4, 'metrics_snapshot': "{'similarity': 0.4, 'target_monthly': 176.6, 'current_monthly': 1348.8}", 'insights': "{'recommended_provider': 'selectel', 'recommended_region': 'ru-6a', 'recommended_sku': 'v1-r2-d10:ru-6a', 'recommended_price_id': 3527, 'specs_unknow ... (113 characters truncated) ... ': 0.4, 'price_id': 3527}, {'provider': 'selectel', 'region': 'ru-1c', 'sku': 'v1-r2-d10:ru-1c', 'monthly': 180.45, 'score': 0.4, 'price_id': 2519}]}", 'status': 'pending', 'first_seen_at': datetime.datetime(2025, 10, 28, 5, 6, 11, 705627), 'seen_at': None, 'snoozed_until': None, 'applied_at': None, 'dismissed_at': None, 'dismissed_reason': None, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 705911), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 705912)}
2025-10-28 08:06:11,706 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE %(param_1)s = resource_tags.resource_id
2025-10-28 08:06:11,706 INFO sqlalchemy.engine.Engine: [cached since 0.1746s ago] {'param_1': 1653}
2025-10-28 08:06:11,707 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_end | rule_id=cost.rightsize.cpu_underuse provider=yandex resource_id=1653 outputs=0 created=0 updated=0 duration_ms=1
2025-10-28 08:06:11,707 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_start | rule_id=cost.price_check.cross_provider provider=yandex resource_id=1653 rtype=server
2025-10-28 08:06:11,707 INFO app.core.recommendations.plugins.price_check_rule: price_check: normalized | res_id=1653 name=office vcpu=None mem_gib=8.0 region=ru-central1-b
2025-10-28 08:06:11,707 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s) AS anon_1
2025-10-28 08:06:11,707 INFO sqlalchemy.engine.Engine: [cached since 0.1706s ago] {'provider_1': 'yandex', 'ram_gb_1': 6.4, 'ram_gb_2': 10.0}
2025-10-28 08:06:11,710 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s AND (provider_prices.region LIKE concat(%(region_1)s, '%%'))) AS anon_1
2025-10-28 08:06:11,710 INFO sqlalchemy.engine.Engine: [cached since 0.1686s ago] {'provider_1': 'yandex', 'ram_gb_1': 6.4, 'ram_gb_2': 10.0, 'region_1': 'ru'}
2025-10-28 08:06:11,714 INFO sqlalchemy.engine.Engine: SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s AND (provider_prices.region LIKE concat(%(region_1)s, '%%')) ORDER BY provider_prices.monthly_cost IS NULL ASC, provider_prices.monthly_cost ASC 
 LIMIT %(param_1)s
2025-10-28 08:06:11,714 INFO sqlalchemy.engine.Engine: [cached since 0.1687s ago] {'provider_1': 'yandex', 'ram_gb_1': 6.4, 'ram_gb_2': 10.0, 'region_1': 'ru', 'param_1': 500}
2025-10-28 08:06:11,731 INFO app.core.recommendations.plugins.price_check_rule: price_check: catalog scope | res_id=1653 total_prices=564 region_filtered=384
2025-10-28 08:06:11,731 INFO app.core.recommendations.plugins.price_check_rule: price_check: candidate_search | res_id=1653 pref_region=ru-central1-b min_score=0.00
2025-10-28 08:06:11,734 INFO app.core.recommendations.plugins.price_check_rule: price_check: candidate | res_id=1653 best_price_id=3535 score=0.40 target_monthly=360.92 current_monthly=5780.40 savings=5419.48 min_abs=0.00
2025-10-28 08:06:11,735 INFO sqlalchemy.engine.Engine: SELECT price_comparison_recommendations.user_id AS price_comparison_recommendations_user_id, price_comparison_recommendations.current_resource_id AS price_comparison_recommendations_current_resource_id, price_comparison_recommendations.recommended_price_id AS price_comparison_recommendations_recommended_price_id, price_comparison_recommendations.similarity_score AS price_comparison_recommendations_similarity_score, price_comparison_recommendations.monthly_savings AS price_comparison_recommendations_monthly_savings, price_comparison_recommendations.annual_savings AS price_comparison_recommendations_annual_savings, price_comparison_recommendations.savings_percent AS price_comparison_recommendations_savings_percent, price_comparison_recommendations.migration_effort AS price_comparison_recommendations_migration_effort, price_comparison_recommendations.migration_notes AS price_comparison_recommendations_migration_notes, price_comparison_recommendations.status AS price_comparison_recommendations_status, price_comparison_recommendations.user_feedback AS price_comparison_recommendations_user_feedback, price_comparison_recommendations.id AS price_comparison_recommendations_id, price_comparison_recommendations.created_at AS price_comparison_recommendations_created_at, price_comparison_recommendations.updated_at AS price_comparison_recommendations_updated_at 
FROM price_comparison_recommendations 
WHERE price_comparison_recommendations.user_id = %(user_id_1)s AND price_comparison_recommendations.current_resource_id = %(current_resource_id_1)s AND price_comparison_recommendations.recommended_price_id = %(recommended_price_id_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:11,735 INFO sqlalchemy.engine.Engine: [cached since 0.2427s ago] {'user_id_1': 2, 'current_resource_id_1': 1653, 'recommended_price_id_1': 3535, 'param_1': 1}
2025-10-28 08:06:11,735 INFO sqlalchemy.engine.Engine: INSERT INTO price_comparison_recommendations (user_id, current_resource_id, recommended_price_id, similarity_score, monthly_savings, annual_savings, savings_percent, migration_effort, migration_notes, status, user_feedback, created_at, updated_at) VALUES (%(user_id)s, %(current_resource_id)s, %(recommended_price_id)s, %(similarity_score)s, %(monthly_savings)s, %(annual_savings)s, %(savings_percent)s, %(migration_effort)s, %(migration_notes)s, %(status)s, %(user_feedback)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:11,736 INFO sqlalchemy.engine.Engine: [cached since 0.09553s ago] {'user_id': 2, 'current_resource_id': 1653, 'recommended_price_id': 3535, 'similarity_score': 40.0, 'monthly_savings': 5419.48, 'annual_savings': 65033.76, 'savings_percent': 93.76, 'migration_effort': 'medium', 'migration_notes': None, 'status': 'pending', 'user_feedback': None, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 735973), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 735974)}
2025-10-28 08:06:11,736 INFO sqlalchemy.engine.Engine: SELECT optimization_recommendations.resource_id AS optimization_recommendations_resource_id, optimization_recommendations.provider_id AS optimization_recommendations_provider_id, optimization_recommendations.recommendation_type AS optimization_recommendations_recommendation_type, optimization_recommendations.category AS optimization_recommendations_category, optimization_recommendations.severity AS optimization_recommendations_severity, optimization_recommendations.title AS optimization_recommendations_title, optimization_recommendations.description AS optimization_recommendations_description, optimization_recommendations.source AS optimization_recommendations_source, optimization_recommendations.resource_type AS optimization_recommendations_resource_type, optimization_recommendations.resource_name AS optimization_recommendations_resource_name, optimization_recommendations.potential_savings AS optimization_recommendations_potential_savings, optimization_recommendations.estimated_monthly_savings AS optimization_recommendations_estimated_monthly_savings, optimization_recommendations.estimated_one_time_savings AS optimization_recommendations_estimated_one_time_savings, optimization_recommendations.currency AS optimization_recommendations_currency, optimization_recommendations.confidence_score AS optimization_recommendations_confidence_score, optimization_recommendations.metrics_snapshot AS optimization_recommendations_metrics_snapshot, optimization_recommendations.insights AS optimization_recommendations_insights, optimization_recommendations.status AS optimization_recommendations_status, optimization_recommendations.first_seen_at AS optimization_recommendations_first_seen_at, optimization_recommendations.seen_at AS optimization_recommendations_seen_at, optimization_recommendations.snoozed_until AS optimization_recommendations_snoozed_until, optimization_recommendations.applied_at AS optimization_recommendations_applied_at, optimization_recommendations.dismissed_at AS optimization_recommendations_dismissed_at, optimization_recommendations.dismissed_reason AS optimization_recommendations_dismissed_reason, optimization_recommendations.id AS optimization_recommendations_id, optimization_recommendations.created_at AS optimization_recommendations_created_at, optimization_recommendations.updated_at AS optimization_recommendations_updated_at 
FROM optimization_recommendations 
WHERE optimization_recommendations.resource_id = %(resource_id_1)s AND optimization_recommendations.recommendation_type = %(recommendation_type_1)s AND optimization_recommendations.source = %(source_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:11,736 INFO sqlalchemy.engine.Engine: [cached since 0.2315s ago] {'resource_id_1': 1653, 'recommendation_type_1': 'price_compare_cross_provider', 'source_1': 'cost.price_check.cross_provider', 'param_1': 1}
2025-10-28 08:06:11,736 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_end | rule_id=cost.price_check.cross_provider provider=yandex resource_id=1653 outputs=1 created=1 updated=0 duration_ms=29
2025-10-28 08:06:11,737 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_start | rule_id=cost.rightsize.cpu_underuse provider=yandex resource_id=1654 rtype=server
2025-10-28 08:06:11,737 INFO sqlalchemy.engine.Engine: INSERT INTO optimization_recommendations (resource_id, provider_id, recommendation_type, category, severity, title, description, source, resource_type, resource_name, potential_savings, estimated_monthly_savings, estimated_one_time_savings, currency, confidence_score, metrics_snapshot, insights, status, first_seen_at, seen_at, snoozed_until, applied_at, dismissed_at, dismissed_reason, created_at, updated_at) VALUES (%(resource_id)s, %(provider_id)s, %(recommendation_type)s, %(category)s, %(severity)s, %(title)s, %(description)s, %(source)s, %(resource_type)s, %(resource_name)s, %(potential_savings)s, %(estimated_monthly_savings)s, %(estimated_one_time_savings)s, %(currency)s, %(confidence_score)s, %(metrics_snapshot)s, %(insights)s, %(status)s, %(first_seen_at)s, %(seen_at)s, %(snoozed_until)s, %(applied_at)s, %(dismissed_at)s, %(dismissed_reason)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:11,737 INFO sqlalchemy.engine.Engine: [cached since 0.0947s ago] {'resource_id': 1653, 'provider_id': 150, 'recommendation_type': 'price_compare_cross_provider', 'category': 'cost', 'severity': 'low', 'title': 'Доступен более дешёвый аналог у другого провайдера', 'description': 'Найдено сопоставимое предложение у selectel (ru-6a) примерно за 360 RUB/мес. Текущая стоимость ~5780 RUB.', 'source': 'cost.price_check.cross_provider', 'resource_type': 'server', 'resource_name': 'office', 'potential_savings': 0.0, 'estimated_monthly_savings': 5419.48, 'estimated_one_time_savings': 0.0, 'currency': 'RUB', 'confidence_score': 0.4, 'metrics_snapshot': "{'similarity': 0.4, 'target_monthly': 360.92, 'current_monthly': 5780.400000000001}", 'insights': "{'recommended_provider': 'selectel', 'recommended_region': 'ru-6a', 'recommended_sku': 'v1-r8-d10:ru-6a', 'recommended_price_id': 3535, 'specs_unknow ... (114 characters truncated) ... ': 0.4, 'price_id': 3535}, {'provider': 'selectel', 'region': 'ru-1c', 'sku': 'v1-r8-d10:ru-1c', 'monthly': 376.29, 'score': 0.4, 'price_id': 2527}]}", 'status': 'pending', 'first_seen_at': datetime.datetime(2025, 10, 28, 5, 6, 11, 736943), 'seen_at': None, 'snoozed_until': None, 'applied_at': None, 'dismissed_at': None, 'dismissed_reason': None, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 737228), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 737229)}
2025-10-28 08:06:11,737 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE %(param_1)s = resource_tags.resource_id
2025-10-28 08:06:11,737 INFO sqlalchemy.engine.Engine: [cached since 0.2059s ago] {'param_1': 1654}
2025-10-28 08:06:11,738 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_end | rule_id=cost.rightsize.cpu_underuse provider=yandex resource_id=1654 outputs=0 created=0 updated=0 duration_ms=1
2025-10-28 08:06:11,738 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_start | rule_id=cost.price_check.cross_provider provider=yandex resource_id=1654 rtype=server
2025-10-28 08:06:11,738 INFO app.core.recommendations.plugins.price_check_rule: price_check: normalized | res_id=1654 name=cl1etc88oikj3sh8mkro-edup vcpu=None mem_gib=16.0 region=ru-central1-b
2025-10-28 08:06:11,738 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s) AS anon_1
2025-10-28 08:06:11,738 INFO sqlalchemy.engine.Engine: [cached since 0.2018s ago] {'provider_1': 'yandex', 'ram_gb_1': 12.8, 'ram_gb_2': 20.0}
2025-10-28 08:06:11,741 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s AND (provider_prices.region LIKE concat(%(region_1)s, '%%'))) AS anon_1
2025-10-28 08:06:11,741 INFO sqlalchemy.engine.Engine: [cached since 0.2002s ago] {'provider_1': 'yandex', 'ram_gb_1': 12.8, 'ram_gb_2': 20.0, 'region_1': 'ru'}
2025-10-28 08:06:11,745 INFO sqlalchemy.engine.Engine: SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s AND (provider_prices.region LIKE concat(%(region_1)s, '%%')) ORDER BY provider_prices.monthly_cost IS NULL ASC, provider_prices.monthly_cost ASC 
 LIMIT %(param_1)s
2025-10-28 08:06:11,745 INFO sqlalchemy.engine.Engine: [cached since 0.1994s ago] {'provider_1': 'yandex', 'ram_gb_1': 12.8, 'ram_gb_2': 20.0, 'region_1': 'ru', 'param_1': 500}
2025-10-28 08:06:11,763 INFO app.core.recommendations.plugins.price_check_rule: price_check: catalog scope | res_id=1654 total_prices=672 region_filtered=456
2025-10-28 08:06:11,763 INFO app.core.recommendations.plugins.price_check_rule: price_check: candidate_search | res_id=1654 pref_region=ru-central1-b min_score=0.00
2025-10-28 08:06:11,766 INFO app.core.recommendations.plugins.price_check_rule: price_check: candidate | res_id=1654 best_price_id=3539 score=0.40 target_monthly=606.68 current_monthly=9338.40 savings=8731.72 min_abs=0.00
2025-10-28 08:06:11,767 INFO sqlalchemy.engine.Engine: SELECT price_comparison_recommendations.user_id AS price_comparison_recommendations_user_id, price_comparison_recommendations.current_resource_id AS price_comparison_recommendations_current_resource_id, price_comparison_recommendations.recommended_price_id AS price_comparison_recommendations_recommended_price_id, price_comparison_recommendations.similarity_score AS price_comparison_recommendations_similarity_score, price_comparison_recommendations.monthly_savings AS price_comparison_recommendations_monthly_savings, price_comparison_recommendations.annual_savings AS price_comparison_recommendations_annual_savings, price_comparison_recommendations.savings_percent AS price_comparison_recommendations_savings_percent, price_comparison_recommendations.migration_effort AS price_comparison_recommendations_migration_effort, price_comparison_recommendations.migration_notes AS price_comparison_recommendations_migration_notes, price_comparison_recommendations.status AS price_comparison_recommendations_status, price_comparison_recommendations.user_feedback AS price_comparison_recommendations_user_feedback, price_comparison_recommendations.id AS price_comparison_recommendations_id, price_comparison_recommendations.created_at AS price_comparison_recommendations_created_at, price_comparison_recommendations.updated_at AS price_comparison_recommendations_updated_at 
FROM price_comparison_recommendations 
WHERE price_comparison_recommendations.user_id = %(user_id_1)s AND price_comparison_recommendations.current_resource_id = %(current_resource_id_1)s AND price_comparison_recommendations.recommended_price_id = %(recommended_price_id_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:11,767 INFO sqlalchemy.engine.Engine: [cached since 0.2748s ago] {'user_id_1': 2, 'current_resource_id_1': 1654, 'recommended_price_id_1': 3539, 'param_1': 1}
2025-10-28 08:06:11,768 INFO sqlalchemy.engine.Engine: INSERT INTO price_comparison_recommendations (user_id, current_resource_id, recommended_price_id, similarity_score, monthly_savings, annual_savings, savings_percent, migration_effort, migration_notes, status, user_feedback, created_at, updated_at) VALUES (%(user_id)s, %(current_resource_id)s, %(recommended_price_id)s, %(similarity_score)s, %(monthly_savings)s, %(annual_savings)s, %(savings_percent)s, %(migration_effort)s, %(migration_notes)s, %(status)s, %(user_feedback)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:11,768 INFO sqlalchemy.engine.Engine: [cached since 0.1277s ago] {'user_id': 2, 'current_resource_id': 1654, 'recommended_price_id': 3539, 'similarity_score': 40.0, 'monthly_savings': 8731.72, 'annual_savings': 104780.64, 'savings_percent': 93.5, 'migration_effort': 'medium', 'migration_notes': None, 'status': 'pending', 'user_feedback': None, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 768115), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 768116)}
2025-10-28 08:06:11,768 INFO sqlalchemy.engine.Engine: SELECT optimization_recommendations.resource_id AS optimization_recommendations_resource_id, optimization_recommendations.provider_id AS optimization_recommendations_provider_id, optimization_recommendations.recommendation_type AS optimization_recommendations_recommendation_type, optimization_recommendations.category AS optimization_recommendations_category, optimization_recommendations.severity AS optimization_recommendations_severity, optimization_recommendations.title AS optimization_recommendations_title, optimization_recommendations.description AS optimization_recommendations_description, optimization_recommendations.source AS optimization_recommendations_source, optimization_recommendations.resource_type AS optimization_recommendations_resource_type, optimization_recommendations.resource_name AS optimization_recommendations_resource_name, optimization_recommendations.potential_savings AS optimization_recommendations_potential_savings, optimization_recommendations.estimated_monthly_savings AS optimization_recommendations_estimated_monthly_savings, optimization_recommendations.estimated_one_time_savings AS optimization_recommendations_estimated_one_time_savings, optimization_recommendations.currency AS optimization_recommendations_currency, optimization_recommendations.confidence_score AS optimization_recommendations_confidence_score, optimization_recommendations.metrics_snapshot AS optimization_recommendations_metrics_snapshot, optimization_recommendations.insights AS optimization_recommendations_insights, optimization_recommendations.status AS optimization_recommendations_status, optimization_recommendations.first_seen_at AS optimization_recommendations_first_seen_at, optimization_recommendations.seen_at AS optimization_recommendations_seen_at, optimization_recommendations.snoozed_until AS optimization_recommendations_snoozed_until, optimization_recommendations.applied_at AS optimization_recommendations_applied_at, optimization_recommendations.dismissed_at AS optimization_recommendations_dismissed_at, optimization_recommendations.dismissed_reason AS optimization_recommendations_dismissed_reason, optimization_recommendations.id AS optimization_recommendations_id, optimization_recommendations.created_at AS optimization_recommendations_created_at, optimization_recommendations.updated_at AS optimization_recommendations_updated_at 
FROM optimization_recommendations 
WHERE optimization_recommendations.resource_id = %(resource_id_1)s AND optimization_recommendations.recommendation_type = %(recommendation_type_1)s AND optimization_recommendations.source = %(source_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:11,768 INFO sqlalchemy.engine.Engine: [cached since 0.2636s ago] {'resource_id_1': 1654, 'recommendation_type_1': 'price_compare_cross_provider', 'source_1': 'cost.price_check.cross_provider', 'param_1': 1}
2025-10-28 08:06:11,769 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_end | rule_id=cost.price_check.cross_provider provider=yandex resource_id=1654 outputs=1 created=1 updated=0 duration_ms=30
2025-10-28 08:06:11,769 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_start | rule_id=cost.rightsize.cpu_underuse provider=yandex resource_id=1655 rtype=server
2025-10-28 08:06:11,769 INFO sqlalchemy.engine.Engine: INSERT INTO optimization_recommendations (resource_id, provider_id, recommendation_type, category, severity, title, description, source, resource_type, resource_name, potential_savings, estimated_monthly_savings, estimated_one_time_savings, currency, confidence_score, metrics_snapshot, insights, status, first_seen_at, seen_at, snoozed_until, applied_at, dismissed_at, dismissed_reason, created_at, updated_at) VALUES (%(resource_id)s, %(provider_id)s, %(recommendation_type)s, %(category)s, %(severity)s, %(title)s, %(description)s, %(source)s, %(resource_type)s, %(resource_name)s, %(potential_savings)s, %(estimated_monthly_savings)s, %(estimated_one_time_savings)s, %(currency)s, %(confidence_score)s, %(metrics_snapshot)s, %(insights)s, %(status)s, %(first_seen_at)s, %(seen_at)s, %(snoozed_until)s, %(applied_at)s, %(dismissed_at)s, %(dismissed_reason)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:11,769 INFO sqlalchemy.engine.Engine: [cached since 0.1269s ago] {'resource_id': 1654, 'provider_id': 150, 'recommendation_type': 'price_compare_cross_provider', 'category': 'cost', 'severity': 'low', 'title': 'Доступен более дешёвый аналог у другого провайдера', 'description': 'Найдено сопоставимое предложение у selectel (ru-6a) примерно за 606 RUB/мес. Текущая стоимость ~9338 RUB.', 'source': 'cost.price_check.cross_provider', 'resource_type': 'server', 'resource_name': 'cl1etc88oikj3sh8mkro-edup', 'potential_savings': 0.0, 'estimated_monthly_savings': 8731.72, 'estimated_one_time_savings': 0.0, 'currency': 'RUB', 'confidence_score': 0.4, 'metrics_snapshot': "{'similarity': 0.4, 'target_monthly': 606.68, 'current_monthly': 9338.4}", 'insights': "{'recommended_provider': 'selectel', 'recommended_region': 'ru-6a', 'recommended_sku': 'v1-r16-d10:ru-6a', 'recommended_price_id': 3539, 'specs_unkno ... (117 characters truncated) ... : 0.4, 'price_id': 3539}, {'provider': 'selectel', 'region': 'ru-1c', 'sku': 'v1-r16-d10:ru-1c', 'monthly': 637.41, 'score': 0.4, 'price_id': 2531}]}", 'status': 'pending', 'first_seen_at': datetime.datetime(2025, 10, 28, 5, 6, 11, 769110), 'seen_at': None, 'snoozed_until': None, 'applied_at': None, 'dismissed_at': None, 'dismissed_reason': None, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 769399), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 769400)}
2025-10-28 08:06:11,769 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE %(param_1)s = resource_tags.resource_id
2025-10-28 08:06:11,770 INFO sqlalchemy.engine.Engine: [cached since 0.2381s ago] {'param_1': 1655}
2025-10-28 08:06:11,770 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_end | rule_id=cost.rightsize.cpu_underuse provider=yandex resource_id=1655 outputs=0 created=0 updated=0 duration_ms=1
2025-10-28 08:06:11,770 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_start | rule_id=cost.price_check.cross_provider provider=yandex resource_id=1655 rtype=server
2025-10-28 08:06:11,770 INFO app.core.recommendations.plugins.price_check_rule: price_check: normalized | res_id=1655 name=gitlab vcpu=None mem_gib=12.0 region=ru-central1-b
2025-10-28 08:06:11,770 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s) AS anon_1
2025-10-28 08:06:11,770 INFO sqlalchemy.engine.Engine: [cached since 0.2341s ago] {'provider_1': 'yandex', 'ram_gb_1': 9.600000000000001, 'ram_gb_2': 15.0}
2025-10-28 08:06:11,774 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s AND (provider_prices.region LIKE concat(%(region_1)s, '%%'))) AS anon_1
2025-10-28 08:06:11,774 INFO sqlalchemy.engine.Engine: [cached since 0.2331s ago] {'provider_1': 'yandex', 'ram_gb_1': 9.600000000000001, 'ram_gb_2': 15.0, 'region_1': 'ru'}
2025-10-28 08:06:11,778 INFO sqlalchemy.engine.Engine: SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s AND (provider_prices.region LIKE concat(%(region_1)s, '%%')) ORDER BY provider_prices.monthly_cost IS NULL ASC, provider_prices.monthly_cost ASC 
 LIMIT %(param_1)s
2025-10-28 08:06:11,778 INFO sqlalchemy.engine.Engine: [cached since 0.2327s ago] {'provider_1': 'yandex', 'ram_gb_1': 9.600000000000001, 'ram_gb_2': 15.0, 'region_1': 'ru', 'param_1': 500}
2025-10-28 08:06:11,790 INFO app.core.recommendations.plugins.price_check_rule: price_check: catalog scope | res_id=1655 total_prices=108 region_filtered=72
2025-10-28 08:06:11,790 INFO app.core.recommendations.plugins.price_check_rule: price_check: candidate_search | res_id=1655 pref_region=ru-central1-b min_score=0.00
2025-10-28 08:06:11,790 INFO app.core.recommendations.plugins.price_check_rule: price_check: candidate | res_id=1655 best_price_id=445 score=0.40 target_monthly=1107.90 current_monthly=10418.10 savings=9310.20 min_abs=0.00
2025-10-28 08:06:11,790 INFO sqlalchemy.engine.Engine: SELECT price_comparison_recommendations.user_id AS price_comparison_recommendations_user_id, price_comparison_recommendations.current_resource_id AS price_comparison_recommendations_current_resource_id, price_comparison_recommendations.recommended_price_id AS price_comparison_recommendations_recommended_price_id, price_comparison_recommendations.similarity_score AS price_comparison_recommendations_similarity_score, price_comparison_recommendations.monthly_savings AS price_comparison_recommendations_monthly_savings, price_comparison_recommendations.annual_savings AS price_comparison_recommendations_annual_savings, price_comparison_recommendations.savings_percent AS price_comparison_recommendations_savings_percent, price_comparison_recommendations.migration_effort AS price_comparison_recommendations_migration_effort, price_comparison_recommendations.migration_notes AS price_comparison_recommendations_migration_notes, price_comparison_recommendations.status AS price_comparison_recommendations_status, price_comparison_recommendations.user_feedback AS price_comparison_recommendations_user_feedback, price_comparison_recommendations.id AS price_comparison_recommendations_id, price_comparison_recommendations.created_at AS price_comparison_recommendations_created_at, price_comparison_recommendations.updated_at AS price_comparison_recommendations_updated_at 
FROM price_comparison_recommendations 
WHERE price_comparison_recommendations.user_id = %(user_id_1)s AND price_comparison_recommendations.current_resource_id = %(current_resource_id_1)s AND price_comparison_recommendations.recommended_price_id = %(recommended_price_id_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:11,791 INFO sqlalchemy.engine.Engine: [cached since 0.2986s ago] {'user_id_1': 2, 'current_resource_id_1': 1655, 'recommended_price_id_1': 445, 'param_1': 1}
2025-10-28 08:06:11,791 INFO sqlalchemy.engine.Engine: INSERT INTO price_comparison_recommendations (user_id, current_resource_id, recommended_price_id, similarity_score, monthly_savings, annual_savings, savings_percent, migration_effort, migration_notes, status, user_feedback, created_at, updated_at) VALUES (%(user_id)s, %(current_resource_id)s, %(recommended_price_id)s, %(similarity_score)s, %(monthly_savings)s, %(annual_savings)s, %(savings_percent)s, %(migration_effort)s, %(migration_notes)s, %(status)s, %(user_feedback)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:11,791 INFO sqlalchemy.engine.Engine: [cached since 0.1512s ago] {'user_id': 2, 'current_resource_id': 1655, 'recommended_price_id': 445, 'similarity_score': 40.0, 'monthly_savings': 9310.2, 'annual_savings': 111722.4, 'savings_percent': 89.37, 'migration_effort': 'medium', 'migration_notes': None, 'status': 'pending', 'user_feedback': None, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 791661), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 791661)}
2025-10-28 08:06:11,792 INFO sqlalchemy.engine.Engine: SELECT optimization_recommendations.resource_id AS optimization_recommendations_resource_id, optimization_recommendations.provider_id AS optimization_recommendations_provider_id, optimization_recommendations.recommendation_type AS optimization_recommendations_recommendation_type, optimization_recommendations.category AS optimization_recommendations_category, optimization_recommendations.severity AS optimization_recommendations_severity, optimization_recommendations.title AS optimization_recommendations_title, optimization_recommendations.description AS optimization_recommendations_description, optimization_recommendations.source AS optimization_recommendations_source, optimization_recommendations.resource_type AS optimization_recommendations_resource_type, optimization_recommendations.resource_name AS optimization_recommendations_resource_name, optimization_recommendations.potential_savings AS optimization_recommendations_potential_savings, optimization_recommendations.estimated_monthly_savings AS optimization_recommendations_estimated_monthly_savings, optimization_recommendations.estimated_one_time_savings AS optimization_recommendations_estimated_one_time_savings, optimization_recommendations.currency AS optimization_recommendations_currency, optimization_recommendations.confidence_score AS optimization_recommendations_confidence_score, optimization_recommendations.metrics_snapshot AS optimization_recommendations_metrics_snapshot, optimization_recommendations.insights AS optimization_recommendations_insights, optimization_recommendations.status AS optimization_recommendations_status, optimization_recommendations.first_seen_at AS optimization_recommendations_first_seen_at, optimization_recommendations.seen_at AS optimization_recommendations_seen_at, optimization_recommendations.snoozed_until AS optimization_recommendations_snoozed_until, optimization_recommendations.applied_at AS optimization_recommendations_applied_at, optimization_recommendations.dismissed_at AS optimization_recommendations_dismissed_at, optimization_recommendations.dismissed_reason AS optimization_recommendations_dismissed_reason, optimization_recommendations.id AS optimization_recommendations_id, optimization_recommendations.created_at AS optimization_recommendations_created_at, optimization_recommendations.updated_at AS optimization_recommendations_updated_at 
FROM optimization_recommendations 
WHERE optimization_recommendations.resource_id = %(resource_id_1)s AND optimization_recommendations.recommendation_type = %(recommendation_type_1)s AND optimization_recommendations.source = %(source_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:11,792 INFO sqlalchemy.engine.Engine: [cached since 0.2872s ago] {'resource_id_1': 1655, 'recommendation_type_1': 'price_compare_cross_provider', 'source_1': 'cost.price_check.cross_provider', 'param_1': 1}
2025-10-28 08:06:11,792 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_end | rule_id=cost.price_check.cross_provider provider=yandex resource_id=1655 outputs=1 created=1 updated=0 duration_ms=22
2025-10-28 08:06:11,792 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_start | rule_id=cost.rightsize.cpu_underuse provider=yandex resource_id=1656 rtype=server
2025-10-28 08:06:11,792 INFO sqlalchemy.engine.Engine: INSERT INTO optimization_recommendations (resource_id, provider_id, recommendation_type, category, severity, title, description, source, resource_type, resource_name, potential_savings, estimated_monthly_savings, estimated_one_time_savings, currency, confidence_score, metrics_snapshot, insights, status, first_seen_at, seen_at, snoozed_until, applied_at, dismissed_at, dismissed_reason, created_at, updated_at) VALUES (%(resource_id)s, %(provider_id)s, %(recommendation_type)s, %(category)s, %(severity)s, %(title)s, %(description)s, %(source)s, %(resource_type)s, %(resource_name)s, %(potential_savings)s, %(estimated_monthly_savings)s, %(estimated_one_time_savings)s, %(currency)s, %(confidence_score)s, %(metrics_snapshot)s, %(insights)s, %(status)s, %(first_seen_at)s, %(seen_at)s, %(snoozed_until)s, %(applied_at)s, %(dismissed_at)s, %(dismissed_reason)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:11,793 INFO sqlalchemy.engine.Engine: [cached since 0.1505s ago] {'resource_id': 1655, 'provider_id': 150, 'recommendation_type': 'price_compare_cross_provider', 'category': 'cost', 'severity': 'low', 'title': 'Доступен более дешёвый аналог у другого провайдера', 'description': 'Найдено сопоставимое предложение у beget (ru2) примерно за 1107 RUB/мес. Текущая стоимость ~10418 RUB.', 'source': 'cost.price_check.cross_provider', 'resource_type': 'server', 'resource_name': 'gitlab', 'potential_savings': 0.0, 'estimated_monthly_savings': 9310.2, 'estimated_one_time_savings': 0.0, 'currency': 'RUB', 'confidence_score': 0.4, 'metrics_snapshot': "{'similarity': 0.4, 'target_monthly': 1107.9, 'current_monthly': 10418.099999999999}", 'insights': "{'recommended_provider': 'beget', 'recommended_region': 'ru2', 'recommended_sku': 'ru2-normal_cpu-1cpu-13gb-10gb', 'recommended_price_id': 445, 'spec ... (139 characters truncated) ... 'price_id': 445}, {'provider': 'beget', 'region': 'ru1', 'sku': 'ru1-normal_cpu-1cpu-13gb-10gb', 'monthly': 1107.9, 'score': 0.4, 'price_id': 5896}]}", 'status': 'pending', 'first_seen_at': datetime.datetime(2025, 10, 28, 5, 6, 11, 792678), 'seen_at': None, 'snoozed_until': None, 'applied_at': None, 'dismissed_at': None, 'dismissed_reason': None, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 792973), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 792974)}
2025-10-28 08:06:11,793 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE %(param_1)s = resource_tags.resource_id
2025-10-28 08:06:11,793 INFO sqlalchemy.engine.Engine: [cached since 0.2616s ago] {'param_1': 1656}
2025-10-28 08:06:11,794 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_end | rule_id=cost.rightsize.cpu_underuse provider=yandex resource_id=1656 outputs=0 created=0 updated=0 duration_ms=1
2025-10-28 08:06:11,794 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_start | rule_id=cost.price_check.cross_provider provider=yandex resource_id=1656 rtype=server
2025-10-28 08:06:11,794 INFO app.core.recommendations.plugins.price_check_rule: price_check: normalized | res_id=1656 name=sphinx vcpu=None mem_gib=4.0 region=ru-central1-b
2025-10-28 08:06:11,794 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s) AS anon_1
2025-10-28 08:06:11,794 INFO sqlalchemy.engine.Engine: [cached since 0.2576s ago] {'provider_1': 'yandex', 'ram_gb_1': 3.2, 'ram_gb_2': 5.0}
2025-10-28 08:06:11,797 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s AND (provider_prices.region LIKE concat(%(region_1)s, '%%'))) AS anon_1
2025-10-28 08:06:11,797 INFO sqlalchemy.engine.Engine: [cached since 0.256s ago] {'provider_1': 'yandex', 'ram_gb_1': 3.2, 'ram_gb_2': 5.0, 'region_1': 'ru'}
2025-10-28 08:06:11,801 INFO sqlalchemy.engine.Engine: SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s AND (provider_prices.region LIKE concat(%(region_1)s, '%%')) ORDER BY provider_prices.monthly_cost IS NULL ASC, provider_prices.monthly_cost ASC 
 LIMIT %(param_1)s
2025-10-28 08:06:11,801 INFO sqlalchemy.engine.Engine: [cached since 0.2557s ago] {'provider_1': 'yandex', 'ram_gb_1': 3.2, 'ram_gb_2': 5.0, 'region_1': 'ru', 'param_1': 500}
2025-10-28 08:06:11,816 INFO app.core.recommendations.plugins.price_check_rule: price_check: catalog scope | res_id=1656 total_prices=456 region_filtered=312
2025-10-28 08:06:11,816 INFO app.core.recommendations.plugins.price_check_rule: price_check: candidate_search | res_id=1656 pref_region=ru-central1-b min_score=0.00
2025-10-28 08:06:11,819 INFO app.core.recommendations.plugins.price_check_rule: price_check: candidate | res_id=1656 best_price_id=3531 score=0.40 target_monthly=238.04 current_monthly=1679.10 savings=1441.06 min_abs=0.00
2025-10-28 08:06:11,819 INFO sqlalchemy.engine.Engine: SELECT price_comparison_recommendations.user_id AS price_comparison_recommendations_user_id, price_comparison_recommendations.current_resource_id AS price_comparison_recommendations_current_resource_id, price_comparison_recommendations.recommended_price_id AS price_comparison_recommendations_recommended_price_id, price_comparison_recommendations.similarity_score AS price_comparison_recommendations_similarity_score, price_comparison_recommendations.monthly_savings AS price_comparison_recommendations_monthly_savings, price_comparison_recommendations.annual_savings AS price_comparison_recommendations_annual_savings, price_comparison_recommendations.savings_percent AS price_comparison_recommendations_savings_percent, price_comparison_recommendations.migration_effort AS price_comparison_recommendations_migration_effort, price_comparison_recommendations.migration_notes AS price_comparison_recommendations_migration_notes, price_comparison_recommendations.status AS price_comparison_recommendations_status, price_comparison_recommendations.user_feedback AS price_comparison_recommendations_user_feedback, price_comparison_recommendations.id AS price_comparison_recommendations_id, price_comparison_recommendations.created_at AS price_comparison_recommendations_created_at, price_comparison_recommendations.updated_at AS price_comparison_recommendations_updated_at 
FROM price_comparison_recommendations 
WHERE price_comparison_recommendations.user_id = %(user_id_1)s AND price_comparison_recommendations.current_resource_id = %(current_resource_id_1)s AND price_comparison_recommendations.recommended_price_id = %(recommended_price_id_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:11,819 INFO sqlalchemy.engine.Engine: [cached since 0.3271s ago] {'user_id_1': 2, 'current_resource_id_1': 1656, 'recommended_price_id_1': 3531, 'param_1': 1}
2025-10-28 08:06:11,820 INFO sqlalchemy.engine.Engine: INSERT INTO price_comparison_recommendations (user_id, current_resource_id, recommended_price_id, similarity_score, monthly_savings, annual_savings, savings_percent, migration_effort, migration_notes, status, user_feedback, created_at, updated_at) VALUES (%(user_id)s, %(current_resource_id)s, %(recommended_price_id)s, %(similarity_score)s, %(monthly_savings)s, %(annual_savings)s, %(savings_percent)s, %(migration_effort)s, %(migration_notes)s, %(status)s, %(user_feedback)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:11,820 INFO sqlalchemy.engine.Engine: [cached since 0.1799s ago] {'user_id': 2, 'current_resource_id': 1656, 'recommended_price_id': 3531, 'similarity_score': 40.0, 'monthly_savings': 1441.06, 'annual_savings': 17292.72, 'savings_percent': 85.82, 'migration_effort': 'medium', 'migration_notes': None, 'status': 'pending', 'user_feedback': None, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 820320), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 820321)}
2025-10-28 08:06:11,820 INFO sqlalchemy.engine.Engine: SELECT optimization_recommendations.resource_id AS optimization_recommendations_resource_id, optimization_recommendations.provider_id AS optimization_recommendations_provider_id, optimization_recommendations.recommendation_type AS optimization_recommendations_recommendation_type, optimization_recommendations.category AS optimization_recommendations_category, optimization_recommendations.severity AS optimization_recommendations_severity, optimization_recommendations.title AS optimization_recommendations_title, optimization_recommendations.description AS optimization_recommendations_description, optimization_recommendations.source AS optimization_recommendations_source, optimization_recommendations.resource_type AS optimization_recommendations_resource_type, optimization_recommendations.resource_name AS optimization_recommendations_resource_name, optimization_recommendations.potential_savings AS optimization_recommendations_potential_savings, optimization_recommendations.estimated_monthly_savings AS optimization_recommendations_estimated_monthly_savings, optimization_recommendations.estimated_one_time_savings AS optimization_recommendations_estimated_one_time_savings, optimization_recommendations.currency AS optimization_recommendations_currency, optimization_recommendations.confidence_score AS optimization_recommendations_confidence_score, optimization_recommendations.metrics_snapshot AS optimization_recommendations_metrics_snapshot, optimization_recommendations.insights AS optimization_recommendations_insights, optimization_recommendations.status AS optimization_recommendations_status, optimization_recommendations.first_seen_at AS optimization_recommendations_first_seen_at, optimization_recommendations.seen_at AS optimization_recommendations_seen_at, optimization_recommendations.snoozed_until AS optimization_recommendations_snoozed_until, optimization_recommendations.applied_at AS optimization_recommendations_applied_at, optimization_recommendations.dismissed_at AS optimization_recommendations_dismissed_at, optimization_recommendations.dismissed_reason AS optimization_recommendations_dismissed_reason, optimization_recommendations.id AS optimization_recommendations_id, optimization_recommendations.created_at AS optimization_recommendations_created_at, optimization_recommendations.updated_at AS optimization_recommendations_updated_at 
FROM optimization_recommendations 
WHERE optimization_recommendations.resource_id = %(resource_id_1)s AND optimization_recommendations.recommendation_type = %(recommendation_type_1)s AND optimization_recommendations.source = %(source_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:11,820 INFO sqlalchemy.engine.Engine: [cached since 0.3159s ago] {'resource_id_1': 1656, 'recommendation_type_1': 'price_compare_cross_provider', 'source_1': 'cost.price_check.cross_provider', 'param_1': 1}
2025-10-28 08:06:11,821 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_end | rule_id=cost.price_check.cross_provider provider=yandex resource_id=1656 outputs=1 created=1 updated=0 duration_ms=27
2025-10-28 08:06:11,821 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_start | rule_id=cost.rightsize.cpu_underuse provider=yandex resource_id=1657 rtype=server
2025-10-28 08:06:11,821 INFO sqlalchemy.engine.Engine: INSERT INTO optimization_recommendations (resource_id, provider_id, recommendation_type, category, severity, title, description, source, resource_type, resource_name, potential_savings, estimated_monthly_savings, estimated_one_time_savings, currency, confidence_score, metrics_snapshot, insights, status, first_seen_at, seen_at, snoozed_until, applied_at, dismissed_at, dismissed_reason, created_at, updated_at) VALUES (%(resource_id)s, %(provider_id)s, %(recommendation_type)s, %(category)s, %(severity)s, %(title)s, %(description)s, %(source)s, %(resource_type)s, %(resource_name)s, %(potential_savings)s, %(estimated_monthly_savings)s, %(estimated_one_time_savings)s, %(currency)s, %(confidence_score)s, %(metrics_snapshot)s, %(insights)s, %(status)s, %(first_seen_at)s, %(seen_at)s, %(snoozed_until)s, %(applied_at)s, %(dismissed_at)s, %(dismissed_reason)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:11,821 INFO sqlalchemy.engine.Engine: [cached since 0.1792s ago] {'resource_id': 1656, 'provider_id': 150, 'recommendation_type': 'price_compare_cross_provider', 'category': 'cost', 'severity': 'low', 'title': 'Доступен более дешёвый аналог у другого провайдера', 'description': 'Найдено сопоставимое предложение у selectel (ru-6a) примерно за 238 RUB/мес. Текущая стоимость ~1679 RUB.', 'source': 'cost.price_check.cross_provider', 'resource_type': 'server', 'resource_name': 'sphinx', 'potential_savings': 0.0, 'estimated_monthly_savings': 1441.06, 'estimated_one_time_savings': 0.0, 'currency': 'RUB', 'confidence_score': 0.4, 'metrics_snapshot': "{'similarity': 0.4, 'target_monthly': 238.04, 'current_monthly': 1679.1}", 'insights': "{'recommended_provider': 'selectel', 'recommended_region': 'ru-6a', 'recommended_sku': 'v1-r4-d10:ru-6a', 'recommended_price_id': 3531, 'specs_unknow ... (114 characters truncated) ... ': 0.4, 'price_id': 3531}, {'provider': 'selectel', 'region': 'ru-1c', 'sku': 'v1-r4-d10:ru-1c', 'monthly': 245.73, 'score': 0.4, 'price_id': 2523}]}", 'status': 'pending', 'first_seen_at': datetime.datetime(2025, 10, 28, 5, 6, 11, 821383), 'seen_at': None, 'snoozed_until': None, 'applied_at': None, 'dismissed_at': None, 'dismissed_reason': None, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 821673), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 821673)}
2025-10-28 08:06:11,822 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE %(param_1)s = resource_tags.resource_id
2025-10-28 08:06:11,822 INFO sqlalchemy.engine.Engine: [cached since 0.2903s ago] {'param_1': 1657}
2025-10-28 08:06:11,822 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_end | rule_id=cost.rightsize.cpu_underuse provider=yandex resource_id=1657 outputs=0 created=0 updated=0 duration_ms=1
2025-10-28 08:06:11,822 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_start | rule_id=cost.price_check.cross_provider provider=yandex resource_id=1657 rtype=server
2025-10-28 08:06:11,822 INFO app.core.recommendations.plugins.price_check_rule: price_check: normalized | res_id=1657 name=r7 vcpu=None mem_gib=4.0 region=ru-central1-b
2025-10-28 08:06:11,823 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s) AS anon_1
2025-10-28 08:06:11,823 INFO sqlalchemy.engine.Engine: [cached since 0.2863s ago] {'provider_1': 'yandex', 'ram_gb_1': 3.2, 'ram_gb_2': 5.0}
2025-10-28 08:06:11,825 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s AND (provider_prices.region LIKE concat(%(region_1)s, '%%'))) AS anon_1
2025-10-28 08:06:11,825 INFO sqlalchemy.engine.Engine: [cached since 0.2844s ago] {'provider_1': 'yandex', 'ram_gb_1': 3.2, 'ram_gb_2': 5.0, 'region_1': 'ru'}
2025-10-28 08:06:11,830 INFO sqlalchemy.engine.Engine: SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s AND (provider_prices.region LIKE concat(%(region_1)s, '%%')) ORDER BY provider_prices.monthly_cost IS NULL ASC, provider_prices.monthly_cost ASC 
 LIMIT %(param_1)s
2025-10-28 08:06:11,830 INFO sqlalchemy.engine.Engine: [cached since 0.2846s ago] {'provider_1': 'yandex', 'ram_gb_1': 3.2, 'ram_gb_2': 5.0, 'region_1': 'ru', 'param_1': 500}
2025-10-28 08:06:11,847 INFO app.core.recommendations.plugins.price_check_rule: price_check: catalog scope | res_id=1657 total_prices=456 region_filtered=312
2025-10-28 08:06:11,847 INFO app.core.recommendations.plugins.price_check_rule: price_check: candidate_search | res_id=1657 pref_region=ru-central1-b min_score=0.00
2025-10-28 08:06:11,850 INFO app.core.recommendations.plugins.price_check_rule: price_check: candidate | res_id=1657 best_price_id=3531 score=0.40 target_monthly=238.04 current_monthly=2587.20 savings=2349.16 min_abs=0.00
2025-10-28 08:06:11,850 INFO sqlalchemy.engine.Engine: SELECT price_comparison_recommendations.user_id AS price_comparison_recommendations_user_id, price_comparison_recommendations.current_resource_id AS price_comparison_recommendations_current_resource_id, price_comparison_recommendations.recommended_price_id AS price_comparison_recommendations_recommended_price_id, price_comparison_recommendations.similarity_score AS price_comparison_recommendations_similarity_score, price_comparison_recommendations.monthly_savings AS price_comparison_recommendations_monthly_savings, price_comparison_recommendations.annual_savings AS price_comparison_recommendations_annual_savings, price_comparison_recommendations.savings_percent AS price_comparison_recommendations_savings_percent, price_comparison_recommendations.migration_effort AS price_comparison_recommendations_migration_effort, price_comparison_recommendations.migration_notes AS price_comparison_recommendations_migration_notes, price_comparison_recommendations.status AS price_comparison_recommendations_status, price_comparison_recommendations.user_feedback AS price_comparison_recommendations_user_feedback, price_comparison_recommendations.id AS price_comparison_recommendations_id, price_comparison_recommendations.created_at AS price_comparison_recommendations_created_at, price_comparison_recommendations.updated_at AS price_comparison_recommendations_updated_at 
FROM price_comparison_recommendations 
WHERE price_comparison_recommendations.user_id = %(user_id_1)s AND price_comparison_recommendations.current_resource_id = %(current_resource_id_1)s AND price_comparison_recommendations.recommended_price_id = %(recommended_price_id_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:11,850 INFO sqlalchemy.engine.Engine: [cached since 0.3581s ago] {'user_id_1': 2, 'current_resource_id_1': 1657, 'recommended_price_id_1': 3531, 'param_1': 1}
2025-10-28 08:06:11,851 INFO sqlalchemy.engine.Engine: INSERT INTO price_comparison_recommendations (user_id, current_resource_id, recommended_price_id, similarity_score, monthly_savings, annual_savings, savings_percent, migration_effort, migration_notes, status, user_feedback, created_at, updated_at) VALUES (%(user_id)s, %(current_resource_id)s, %(recommended_price_id)s, %(similarity_score)s, %(monthly_savings)s, %(annual_savings)s, %(savings_percent)s, %(migration_effort)s, %(migration_notes)s, %(status)s, %(user_feedback)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:11,851 INFO sqlalchemy.engine.Engine: [cached since 0.2109s ago] {'user_id': 2, 'current_resource_id': 1657, 'recommended_price_id': 3531, 'similarity_score': 40.0, 'monthly_savings': 2349.16, 'annual_savings': 28189.92, 'savings_percent': 90.8, 'migration_effort': 'medium', 'migration_notes': None, 'status': 'pending', 'user_feedback': None, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 851311), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 851312)}
2025-10-28 08:06:11,851 INFO sqlalchemy.engine.Engine: SELECT optimization_recommendations.resource_id AS optimization_recommendations_resource_id, optimization_recommendations.provider_id AS optimization_recommendations_provider_id, optimization_recommendations.recommendation_type AS optimization_recommendations_recommendation_type, optimization_recommendations.category AS optimization_recommendations_category, optimization_recommendations.severity AS optimization_recommendations_severity, optimization_recommendations.title AS optimization_recommendations_title, optimization_recommendations.description AS optimization_recommendations_description, optimization_recommendations.source AS optimization_recommendations_source, optimization_recommendations.resource_type AS optimization_recommendations_resource_type, optimization_recommendations.resource_name AS optimization_recommendations_resource_name, optimization_recommendations.potential_savings AS optimization_recommendations_potential_savings, optimization_recommendations.estimated_monthly_savings AS optimization_recommendations_estimated_monthly_savings, optimization_recommendations.estimated_one_time_savings AS optimization_recommendations_estimated_one_time_savings, optimization_recommendations.currency AS optimization_recommendations_currency, optimization_recommendations.confidence_score AS optimization_recommendations_confidence_score, optimization_recommendations.metrics_snapshot AS optimization_recommendations_metrics_snapshot, optimization_recommendations.insights AS optimization_recommendations_insights, optimization_recommendations.status AS optimization_recommendations_status, optimization_recommendations.first_seen_at AS optimization_recommendations_first_seen_at, optimization_recommendations.seen_at AS optimization_recommendations_seen_at, optimization_recommendations.snoozed_until AS optimization_recommendations_snoozed_until, optimization_recommendations.applied_at AS optimization_recommendations_applied_at, optimization_recommendations.dismissed_at AS optimization_recommendations_dismissed_at, optimization_recommendations.dismissed_reason AS optimization_recommendations_dismissed_reason, optimization_recommendations.id AS optimization_recommendations_id, optimization_recommendations.created_at AS optimization_recommendations_created_at, optimization_recommendations.updated_at AS optimization_recommendations_updated_at 
FROM optimization_recommendations 
WHERE optimization_recommendations.resource_id = %(resource_id_1)s AND optimization_recommendations.recommendation_type = %(recommendation_type_1)s AND optimization_recommendations.source = %(source_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:11,851 INFO sqlalchemy.engine.Engine: [cached since 0.3468s ago] {'resource_id_1': 1657, 'recommendation_type_1': 'price_compare_cross_provider', 'source_1': 'cost.price_check.cross_provider', 'param_1': 1}
2025-10-28 08:06:11,852 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_end | rule_id=cost.price_check.cross_provider provider=yandex resource_id=1657 outputs=1 created=1 updated=0 duration_ms=29
2025-10-28 08:06:11,852 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_start | rule_id=cost.rightsize.cpu_underuse provider=yandex resource_id=1658 rtype=server
2025-10-28 08:06:11,852 INFO sqlalchemy.engine.Engine: INSERT INTO optimization_recommendations (resource_id, provider_id, recommendation_type, category, severity, title, description, source, resource_type, resource_name, potential_savings, estimated_monthly_savings, estimated_one_time_savings, currency, confidence_score, metrics_snapshot, insights, status, first_seen_at, seen_at, snoozed_until, applied_at, dismissed_at, dismissed_reason, created_at, updated_at) VALUES (%(resource_id)s, %(provider_id)s, %(recommendation_type)s, %(category)s, %(severity)s, %(title)s, %(description)s, %(source)s, %(resource_type)s, %(resource_name)s, %(potential_savings)s, %(estimated_monthly_savings)s, %(estimated_one_time_savings)s, %(currency)s, %(confidence_score)s, %(metrics_snapshot)s, %(insights)s, %(status)s, %(first_seen_at)s, %(seen_at)s, %(snoozed_until)s, %(applied_at)s, %(dismissed_at)s, %(dismissed_reason)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:11,852 INFO sqlalchemy.engine.Engine: [cached since 0.2101s ago] {'resource_id': 1657, 'provider_id': 150, 'recommendation_type': 'price_compare_cross_provider', 'category': 'cost', 'severity': 'low', 'title': 'Доступен более дешёвый аналог у другого провайдера', 'description': 'Найдено сопоставимое предложение у selectel (ru-6a) примерно за 238 RUB/мес. Текущая стоимость ~2587 RUB.', 'source': 'cost.price_check.cross_provider', 'resource_type': 'server', 'resource_name': 'r7', 'potential_savings': 0.0, 'estimated_monthly_savings': 2349.16, 'estimated_one_time_savings': 0.0, 'currency': 'RUB', 'confidence_score': 0.4, 'metrics_snapshot': "{'similarity': 0.4, 'target_monthly': 238.04, 'current_monthly': 2587.2}", 'insights': "{'recommended_provider': 'selectel', 'recommended_region': 'ru-6a', 'recommended_sku': 'v1-r4-d10:ru-6a', 'recommended_price_id': 3531, 'specs_unknow ... (114 characters truncated) ... ': 0.4, 'price_id': 3531}, {'provider': 'selectel', 'region': 'ru-1c', 'sku': 'v1-r4-d10:ru-1c', 'monthly': 245.73, 'score': 0.4, 'price_id': 2523}]}", 'status': 'pending', 'first_seen_at': datetime.datetime(2025, 10, 28, 5, 6, 11, 852313), 'seen_at': None, 'snoozed_until': None, 'applied_at': None, 'dismissed_at': None, 'dismissed_reason': None, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 852602), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 852603)}
2025-10-28 08:06:11,853 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE %(param_1)s = resource_tags.resource_id
2025-10-28 08:06:11,853 INFO sqlalchemy.engine.Engine: [cached since 0.3218s ago] {'param_1': 1658}
2025-10-28 08:06:11,854 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_end | rule_id=cost.rightsize.cpu_underuse provider=yandex resource_id=1658 outputs=0 created=0 updated=0 duration_ms=1
2025-10-28 08:06:11,854 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_start | rule_id=cost.price_check.cross_provider provider=yandex resource_id=1658 rtype=server
2025-10-28 08:06:11,854 INFO app.core.recommendations.plugins.price_check_rule: price_check: normalized | res_id=1658 name=gateway vcpu=None mem_gib=2.0 region=ru-central1-b
2025-10-28 08:06:11,854 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s) AS anon_1
2025-10-28 08:06:11,854 INFO sqlalchemy.engine.Engine: [cached since 0.3179s ago] {'provider_1': 'yandex', 'ram_gb_1': 1.6, 'ram_gb_2': 2.5}
2025-10-28 08:06:11,858 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s AND (provider_prices.region LIKE concat(%(region_1)s, '%%'))) AS anon_1
2025-10-28 08:06:11,858 INFO sqlalchemy.engine.Engine: [cached since 0.317s ago] {'provider_1': 'yandex', 'ram_gb_1': 1.6, 'ram_gb_2': 2.5, 'region_1': 'ru'}
2025-10-28 08:06:11,862 INFO sqlalchemy.engine.Engine: SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s AND (provider_prices.region LIKE concat(%(region_1)s, '%%')) ORDER BY provider_prices.monthly_cost IS NULL ASC, provider_prices.monthly_cost ASC 
 LIMIT %(param_1)s
2025-10-28 08:06:11,862 INFO sqlalchemy.engine.Engine: [cached since 0.3165s ago] {'provider_1': 'yandex', 'ram_gb_1': 1.6, 'ram_gb_2': 2.5, 'region_1': 'ru', 'param_1': 500}
2025-10-28 08:06:11,895 INFO app.core.recommendations.plugins.price_check_rule: price_check: catalog scope | res_id=1658 total_prices=492 region_filtered=312
2025-10-28 08:06:11,895 INFO app.core.recommendations.plugins.price_check_rule: price_check: candidate_search | res_id=1658 pref_region=ru-central1-b min_score=0.00
2025-10-28 08:06:11,897 INFO app.core.recommendations.plugins.price_check_rule: price_check: candidate | res_id=1658 best_price_id=3527 score=0.40 target_monthly=176.60 current_monthly=2067.00 savings=1890.40 min_abs=0.00
2025-10-28 08:06:11,897 INFO sqlalchemy.engine.Engine: SELECT price_comparison_recommendations.user_id AS price_comparison_recommendations_user_id, price_comparison_recommendations.current_resource_id AS price_comparison_recommendations_current_resource_id, price_comparison_recommendations.recommended_price_id AS price_comparison_recommendations_recommended_price_id, price_comparison_recommendations.similarity_score AS price_comparison_recommendations_similarity_score, price_comparison_recommendations.monthly_savings AS price_comparison_recommendations_monthly_savings, price_comparison_recommendations.annual_savings AS price_comparison_recommendations_annual_savings, price_comparison_recommendations.savings_percent AS price_comparison_recommendations_savings_percent, price_comparison_recommendations.migration_effort AS price_comparison_recommendations_migration_effort, price_comparison_recommendations.migration_notes AS price_comparison_recommendations_migration_notes, price_comparison_recommendations.status AS price_comparison_recommendations_status, price_comparison_recommendations.user_feedback AS price_comparison_recommendations_user_feedback, price_comparison_recommendations.id AS price_comparison_recommendations_id, price_comparison_recommendations.created_at AS price_comparison_recommendations_created_at, price_comparison_recommendations.updated_at AS price_comparison_recommendations_updated_at 
FROM price_comparison_recommendations 
WHERE price_comparison_recommendations.user_id = %(user_id_1)s AND price_comparison_recommendations.current_resource_id = %(current_resource_id_1)s AND price_comparison_recommendations.recommended_price_id = %(recommended_price_id_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:11,897 INFO sqlalchemy.engine.Engine: [cached since 0.4056s ago] {'user_id_1': 2, 'current_resource_id_1': 1658, 'recommended_price_id_1': 3527, 'param_1': 1}
2025-10-28 08:06:11,899 INFO sqlalchemy.engine.Engine: INSERT INTO price_comparison_recommendations (user_id, current_resource_id, recommended_price_id, similarity_score, monthly_savings, annual_savings, savings_percent, migration_effort, migration_notes, status, user_feedback, created_at, updated_at) VALUES (%(user_id)s, %(current_resource_id)s, %(recommended_price_id)s, %(similarity_score)s, %(monthly_savings)s, %(annual_savings)s, %(savings_percent)s, %(migration_effort)s, %(migration_notes)s, %(status)s, %(user_feedback)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:11,899 INFO sqlalchemy.engine.Engine: [cached since 0.2588s ago] {'user_id': 2, 'current_resource_id': 1658, 'recommended_price_id': 3527, 'similarity_score': 40.0, 'monthly_savings': 1890.4, 'annual_savings': 22684.8, 'savings_percent': 91.46, 'migration_effort': 'medium', 'migration_notes': None, 'status': 'pending', 'user_feedback': None, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 899277), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 899279)}
2025-10-28 08:06:11,900 INFO sqlalchemy.engine.Engine: SELECT optimization_recommendations.resource_id AS optimization_recommendations_resource_id, optimization_recommendations.provider_id AS optimization_recommendations_provider_id, optimization_recommendations.recommendation_type AS optimization_recommendations_recommendation_type, optimization_recommendations.category AS optimization_recommendations_category, optimization_recommendations.severity AS optimization_recommendations_severity, optimization_recommendations.title AS optimization_recommendations_title, optimization_recommendations.description AS optimization_recommendations_description, optimization_recommendations.source AS optimization_recommendations_source, optimization_recommendations.resource_type AS optimization_recommendations_resource_type, optimization_recommendations.resource_name AS optimization_recommendations_resource_name, optimization_recommendations.potential_savings AS optimization_recommendations_potential_savings, optimization_recommendations.estimated_monthly_savings AS optimization_recommendations_estimated_monthly_savings, optimization_recommendations.estimated_one_time_savings AS optimization_recommendations_estimated_one_time_savings, optimization_recommendations.currency AS optimization_recommendations_currency, optimization_recommendations.confidence_score AS optimization_recommendations_confidence_score, optimization_recommendations.metrics_snapshot AS optimization_recommendations_metrics_snapshot, optimization_recommendations.insights AS optimization_recommendations_insights, optimization_recommendations.status AS optimization_recommendations_status, optimization_recommendations.first_seen_at AS optimization_recommendations_first_seen_at, optimization_recommendations.seen_at AS optimization_recommendations_seen_at, optimization_recommendations.snoozed_until AS optimization_recommendations_snoozed_until, optimization_recommendations.applied_at AS optimization_recommendations_applied_at, optimization_recommendations.dismissed_at AS optimization_recommendations_dismissed_at, optimization_recommendations.dismissed_reason AS optimization_recommendations_dismissed_reason, optimization_recommendations.id AS optimization_recommendations_id, optimization_recommendations.created_at AS optimization_recommendations_created_at, optimization_recommendations.updated_at AS optimization_recommendations_updated_at 
FROM optimization_recommendations 
WHERE optimization_recommendations.resource_id = %(resource_id_1)s AND optimization_recommendations.recommendation_type = %(recommendation_type_1)s AND optimization_recommendations.source = %(source_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:11,900 INFO sqlalchemy.engine.Engine: [cached since 0.3951s ago] {'resource_id_1': 1658, 'recommendation_type_1': 'price_compare_cross_provider', 'source_1': 'cost.price_check.cross_provider', 'param_1': 1}
2025-10-28 08:06:11,900 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_end | rule_id=cost.price_check.cross_provider provider=yandex resource_id=1658 outputs=1 created=1 updated=0 duration_ms=46
2025-10-28 08:06:11,900 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_start | rule_id=cost.rightsize.cpu_underuse provider=yandex resource_id=1659 rtype=server
2025-10-28 08:06:11,900 INFO sqlalchemy.engine.Engine: INSERT INTO optimization_recommendations (resource_id, provider_id, recommendation_type, category, severity, title, description, source, resource_type, resource_name, potential_savings, estimated_monthly_savings, estimated_one_time_savings, currency, confidence_score, metrics_snapshot, insights, status, first_seen_at, seen_at, snoozed_until, applied_at, dismissed_at, dismissed_reason, created_at, updated_at) VALUES (%(resource_id)s, %(provider_id)s, %(recommendation_type)s, %(category)s, %(severity)s, %(title)s, %(description)s, %(source)s, %(resource_type)s, %(resource_name)s, %(potential_savings)s, %(estimated_monthly_savings)s, %(estimated_one_time_savings)s, %(currency)s, %(confidence_score)s, %(metrics_snapshot)s, %(insights)s, %(status)s, %(first_seen_at)s, %(seen_at)s, %(snoozed_until)s, %(applied_at)s, %(dismissed_at)s, %(dismissed_reason)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:11,901 INFO sqlalchemy.engine.Engine: [cached since 0.2584s ago] {'resource_id': 1658, 'provider_id': 150, 'recommendation_type': 'price_compare_cross_provider', 'category': 'cost', 'severity': 'low', 'title': 'Доступен более дешёвый аналог у другого провайдера', 'description': 'Найдено сопоставимое предложение у selectel (ru-6a) примерно за 176 RUB/мес. Текущая стоимость ~2067 RUB.', 'source': 'cost.price_check.cross_provider', 'resource_type': 'server', 'resource_name': 'gateway', 'potential_savings': 0.0, 'estimated_monthly_savings': 1890.4, 'estimated_one_time_savings': 0.0, 'currency': 'RUB', 'confidence_score': 0.4, 'metrics_snapshot': "{'similarity': 0.4, 'target_monthly': 176.6, 'current_monthly': 2067.0}", 'insights': "{'recommended_provider': 'selectel', 'recommended_region': 'ru-6a', 'recommended_sku': 'v1-r2-d10:ru-6a', 'recommended_price_id': 3527, 'specs_unknow ... (113 characters truncated) ... ': 0.4, 'price_id': 3527}, {'provider': 'selectel', 'region': 'ru-1c', 'sku': 'v1-r2-d10:ru-1c', 'monthly': 180.45, 'score': 0.4, 'price_id': 2519}]}", 'status': 'pending', 'first_seen_at': datetime.datetime(2025, 10, 28, 5, 6, 11, 900665), 'seen_at': None, 'snoozed_until': None, 'applied_at': None, 'dismissed_at': None, 'dismissed_reason': None, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 900974), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 900974)}
2025-10-28 08:06:11,901 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE %(param_1)s = resource_tags.resource_id
2025-10-28 08:06:11,901 INFO sqlalchemy.engine.Engine: [cached since 0.3697s ago] {'param_1': 1659}
2025-10-28 08:06:11,902 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_end | rule_id=cost.rightsize.cpu_underuse provider=yandex resource_id=1659 outputs=0 created=0 updated=0 duration_ms=1
2025-10-28 08:06:11,902 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_start | rule_id=cost.price_check.cross_provider provider=yandex resource_id=1659 rtype=server
2025-10-28 08:06:11,902 INFO app.core.recommendations.plugins.price_check_rule: price_check: normalized | res_id=1659 name=database vcpu=None mem_gib=6.0 region=ru-central1-b
2025-10-28 08:06:11,902 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s) AS anon_1
2025-10-28 08:06:11,902 INFO sqlalchemy.engine.Engine: [cached since 0.3658s ago] {'provider_1': 'yandex', 'ram_gb_1': 4.800000000000001, 'ram_gb_2': 7.5}
2025-10-28 08:06:11,907 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s AND (provider_prices.region LIKE concat(%(region_1)s, '%%'))) AS anon_1
2025-10-28 08:06:11,907 INFO sqlalchemy.engine.Engine: [cached since 0.3661s ago] {'provider_1': 'yandex', 'ram_gb_1': 4.800000000000001, 'ram_gb_2': 7.5, 'region_1': 'ru'}
2025-10-28 08:06:11,913 INFO sqlalchemy.engine.Engine: SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s AND (provider_prices.region LIKE concat(%(region_1)s, '%%')) ORDER BY provider_prices.monthly_cost IS NULL ASC, provider_prices.monthly_cost ASC 
 LIMIT %(param_1)s
2025-10-28 08:06:11,913 INFO sqlalchemy.engine.Engine: [cached since 0.3675s ago] {'provider_1': 'yandex', 'ram_gb_1': 4.800000000000001, 'ram_gb_2': 7.5, 'region_1': 'ru', 'param_1': 500}
2025-10-28 08:06:11,926 INFO app.core.recommendations.plugins.price_check_rule: price_check: catalog scope | res_id=1659 total_prices=72 region_filtered=72
2025-10-28 08:06:11,926 INFO app.core.recommendations.plugins.price_check_rule: price_check: candidate_search | res_id=1659 pref_region=ru-central1-b min_score=0.00
2025-10-28 08:06:11,927 INFO app.core.recommendations.plugins.price_check_rule: price_check: candidate | res_id=1659 best_price_id=439 score=0.27 target_monthly=679.50 current_monthly=2221.80 savings=1542.30 min_abs=0.00
2025-10-28 08:06:11,927 INFO sqlalchemy.engine.Engine: SELECT price_comparison_recommendations.user_id AS price_comparison_recommendations_user_id, price_comparison_recommendations.current_resource_id AS price_comparison_recommendations_current_resource_id, price_comparison_recommendations.recommended_price_id AS price_comparison_recommendations_recommended_price_id, price_comparison_recommendations.similarity_score AS price_comparison_recommendations_similarity_score, price_comparison_recommendations.monthly_savings AS price_comparison_recommendations_monthly_savings, price_comparison_recommendations.annual_savings AS price_comparison_recommendations_annual_savings, price_comparison_recommendations.savings_percent AS price_comparison_recommendations_savings_percent, price_comparison_recommendations.migration_effort AS price_comparison_recommendations_migration_effort, price_comparison_recommendations.migration_notes AS price_comparison_recommendations_migration_notes, price_comparison_recommendations.status AS price_comparison_recommendations_status, price_comparison_recommendations.user_feedback AS price_comparison_recommendations_user_feedback, price_comparison_recommendations.id AS price_comparison_recommendations_id, price_comparison_recommendations.created_at AS price_comparison_recommendations_created_at, price_comparison_recommendations.updated_at AS price_comparison_recommendations_updated_at 
FROM price_comparison_recommendations 
WHERE price_comparison_recommendations.user_id = %(user_id_1)s AND price_comparison_recommendations.current_resource_id = %(current_resource_id_1)s AND price_comparison_recommendations.recommended_price_id = %(recommended_price_id_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:11,927 INFO sqlalchemy.engine.Engine: [cached since 0.4351s ago] {'user_id_1': 2, 'current_resource_id_1': 1659, 'recommended_price_id_1': 439, 'param_1': 1}
2025-10-28 08:06:11,928 INFO sqlalchemy.engine.Engine: INSERT INTO price_comparison_recommendations (user_id, current_resource_id, recommended_price_id, similarity_score, monthly_savings, annual_savings, savings_percent, migration_effort, migration_notes, status, user_feedback, created_at, updated_at) VALUES (%(user_id)s, %(current_resource_id)s, %(recommended_price_id)s, %(similarity_score)s, %(monthly_savings)s, %(annual_savings)s, %(savings_percent)s, %(migration_effort)s, %(migration_notes)s, %(status)s, %(user_feedback)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:11,928 INFO sqlalchemy.engine.Engine: [cached since 0.2878s ago] {'user_id': 2, 'current_resource_id': 1659, 'recommended_price_id': 439, 'similarity_score': 27.14, 'monthly_savings': 1542.3, 'annual_savings': 18507.6, 'savings_percent': 69.42, 'migration_effort': 'medium', 'migration_notes': None, 'status': 'pending', 'user_feedback': None, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 928189), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 928190)}
2025-10-28 08:06:11,928 INFO sqlalchemy.engine.Engine: SELECT optimization_recommendations.resource_id AS optimization_recommendations_resource_id, optimization_recommendations.provider_id AS optimization_recommendations_provider_id, optimization_recommendations.recommendation_type AS optimization_recommendations_recommendation_type, optimization_recommendations.category AS optimization_recommendations_category, optimization_recommendations.severity AS optimization_recommendations_severity, optimization_recommendations.title AS optimization_recommendations_title, optimization_recommendations.description AS optimization_recommendations_description, optimization_recommendations.source AS optimization_recommendations_source, optimization_recommendations.resource_type AS optimization_recommendations_resource_type, optimization_recommendations.resource_name AS optimization_recommendations_resource_name, optimization_recommendations.potential_savings AS optimization_recommendations_potential_savings, optimization_recommendations.estimated_monthly_savings AS optimization_recommendations_estimated_monthly_savings, optimization_recommendations.estimated_one_time_savings AS optimization_recommendations_estimated_one_time_savings, optimization_recommendations.currency AS optimization_recommendations_currency, optimization_recommendations.confidence_score AS optimization_recommendations_confidence_score, optimization_recommendations.metrics_snapshot AS optimization_recommendations_metrics_snapshot, optimization_recommendations.insights AS optimization_recommendations_insights, optimization_recommendations.status AS optimization_recommendations_status, optimization_recommendations.first_seen_at AS optimization_recommendations_first_seen_at, optimization_recommendations.seen_at AS optimization_recommendations_seen_at, optimization_recommendations.snoozed_until AS optimization_recommendations_snoozed_until, optimization_recommendations.applied_at AS optimization_recommendations_applied_at, optimization_recommendations.dismissed_at AS optimization_recommendations_dismissed_at, optimization_recommendations.dismissed_reason AS optimization_recommendations_dismissed_reason, optimization_recommendations.id AS optimization_recommendations_id, optimization_recommendations.created_at AS optimization_recommendations_created_at, optimization_recommendations.updated_at AS optimization_recommendations_updated_at 
FROM optimization_recommendations 
WHERE optimization_recommendations.resource_id = %(resource_id_1)s AND optimization_recommendations.recommendation_type = %(recommendation_type_1)s AND optimization_recommendations.source = %(source_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:11,928 INFO sqlalchemy.engine.Engine: [cached since 0.4237s ago] {'resource_id_1': 1659, 'recommendation_type_1': 'price_compare_cross_provider', 'source_1': 'cost.price_check.cross_provider', 'param_1': 1}
2025-10-28 08:06:11,929 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_end | rule_id=cost.price_check.cross_provider provider=yandex resource_id=1659 outputs=1 created=1 updated=0 duration_ms=26
2025-10-28 08:06:11,929 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_start | rule_id=cost.rightsize.cpu_underuse provider=yandex resource_id=1660 rtype=server
2025-10-28 08:06:11,929 INFO sqlalchemy.engine.Engine: INSERT INTO optimization_recommendations (resource_id, provider_id, recommendation_type, category, severity, title, description, source, resource_type, resource_name, potential_savings, estimated_monthly_savings, estimated_one_time_savings, currency, confidence_score, metrics_snapshot, insights, status, first_seen_at, seen_at, snoozed_until, applied_at, dismissed_at, dismissed_reason, created_at, updated_at) VALUES (%(resource_id)s, %(provider_id)s, %(recommendation_type)s, %(category)s, %(severity)s, %(title)s, %(description)s, %(source)s, %(resource_type)s, %(resource_name)s, %(potential_savings)s, %(estimated_monthly_savings)s, %(estimated_one_time_savings)s, %(currency)s, %(confidence_score)s, %(metrics_snapshot)s, %(insights)s, %(status)s, %(first_seen_at)s, %(seen_at)s, %(snoozed_until)s, %(applied_at)s, %(dismissed_at)s, %(dismissed_reason)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:11,929 INFO sqlalchemy.engine.Engine: [cached since 0.287s ago] {'resource_id': 1659, 'provider_id': 150, 'recommendation_type': 'price_compare_cross_provider', 'category': 'cost', 'severity': 'low', 'title': 'Доступен более дешёвый аналог у другого провайдера', 'description': 'Найдено сопоставимое предложение у beget (ru2) примерно за 679 RUB/мес. Текущая стоимость ~2221 RUB.', 'source': 'cost.price_check.cross_provider', 'resource_type': 'server', 'resource_name': 'database', 'potential_savings': 0.0, 'estimated_monthly_savings': 1542.3, 'estimated_one_time_savings': 0.0, 'currency': 'RUB', 'confidence_score': 0.27142857142857124, 'metrics_snapshot': "{'similarity': 0.27, 'target_monthly': 679.5, 'current_monthly': 2221.8}", 'insights': "{'recommended_provider': 'beget', 'recommended_region': 'ru2', 'recommended_sku': 'ru2-normal_cpu-1cpu-7gb-10gb', 'recommended_price_id': 439, 'specs ... (136 characters truncated) ...  'price_id': 439}, {'provider': 'beget', 'region': 'ru1', 'sku': 'ru1-normal_cpu-1cpu-7gb-10gb', 'monthly': 679.5, 'score': 0.27, 'price_id': 5890}]}", 'status': 'pending', 'first_seen_at': datetime.datetime(2025, 10, 28, 5, 6, 11, 929202), 'seen_at': None, 'snoozed_until': None, 'applied_at': None, 'dismissed_at': None, 'dismissed_reason': None, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 929498), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 929499)}
2025-10-28 08:06:11,930 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE %(param_1)s = resource_tags.resource_id
2025-10-28 08:06:11,930 INFO sqlalchemy.engine.Engine: [cached since 0.3982s ago] {'param_1': 1660}
2025-10-28 08:06:11,930 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_end | rule_id=cost.rightsize.cpu_underuse provider=yandex resource_id=1660 outputs=0 created=0 updated=0 duration_ms=1
2025-10-28 08:06:11,930 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_start | rule_id=cost.price_check.cross_provider provider=yandex resource_id=1660 rtype=server
2025-10-28 08:06:11,930 INFO app.core.recommendations.plugins.price_check_rule: price_check: normalized | res_id=1660 name=cl1etc88oikj3sh8mkro-ivad vcpu=None mem_gib=16.0 region=ru-central1-b
2025-10-28 08:06:11,930 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s) AS anon_1
2025-10-28 08:06:11,931 INFO sqlalchemy.engine.Engine: [cached since 0.3942s ago] {'provider_1': 'yandex', 'ram_gb_1': 12.8, 'ram_gb_2': 20.0}
2025-10-28 08:06:11,934 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s AND (provider_prices.region LIKE concat(%(region_1)s, '%%'))) AS anon_1
2025-10-28 08:06:11,934 INFO sqlalchemy.engine.Engine: [cached since 0.3934s ago] {'provider_1': 'yandex', 'ram_gb_1': 12.8, 'ram_gb_2': 20.0, 'region_1': 'ru'}
2025-10-28 08:06:11,939 INFO sqlalchemy.engine.Engine: SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s AND (provider_prices.region LIKE concat(%(region_1)s, '%%')) ORDER BY provider_prices.monthly_cost IS NULL ASC, provider_prices.monthly_cost ASC 
 LIMIT %(param_1)s
2025-10-28 08:06:11,939 INFO sqlalchemy.engine.Engine: [cached since 0.3938s ago] {'provider_1': 'yandex', 'ram_gb_1': 12.8, 'ram_gb_2': 20.0, 'region_1': 'ru', 'param_1': 500}
2025-10-28 08:06:11,957 INFO app.core.recommendations.plugins.price_check_rule: price_check: catalog scope | res_id=1660 total_prices=672 region_filtered=456
2025-10-28 08:06:11,957 INFO app.core.recommendations.plugins.price_check_rule: price_check: candidate_search | res_id=1660 pref_region=ru-central1-b min_score=0.00
2025-10-28 08:06:11,961 INFO app.core.recommendations.plugins.price_check_rule: price_check: candidate | res_id=1660 best_price_id=3539 score=0.40 target_monthly=606.68 current_monthly=9381.60 savings=8774.92 min_abs=0.00
2025-10-28 08:06:11,961 INFO sqlalchemy.engine.Engine: SELECT price_comparison_recommendations.user_id AS price_comparison_recommendations_user_id, price_comparison_recommendations.current_resource_id AS price_comparison_recommendations_current_resource_id, price_comparison_recommendations.recommended_price_id AS price_comparison_recommendations_recommended_price_id, price_comparison_recommendations.similarity_score AS price_comparison_recommendations_similarity_score, price_comparison_recommendations.monthly_savings AS price_comparison_recommendations_monthly_savings, price_comparison_recommendations.annual_savings AS price_comparison_recommendations_annual_savings, price_comparison_recommendations.savings_percent AS price_comparison_recommendations_savings_percent, price_comparison_recommendations.migration_effort AS price_comparison_recommendations_migration_effort, price_comparison_recommendations.migration_notes AS price_comparison_recommendations_migration_notes, price_comparison_recommendations.status AS price_comparison_recommendations_status, price_comparison_recommendations.user_feedback AS price_comparison_recommendations_user_feedback, price_comparison_recommendations.id AS price_comparison_recommendations_id, price_comparison_recommendations.created_at AS price_comparison_recommendations_created_at, price_comparison_recommendations.updated_at AS price_comparison_recommendations_updated_at 
FROM price_comparison_recommendations 
WHERE price_comparison_recommendations.user_id = %(user_id_1)s AND price_comparison_recommendations.current_resource_id = %(current_resource_id_1)s AND price_comparison_recommendations.recommended_price_id = %(recommended_price_id_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:11,961 INFO sqlalchemy.engine.Engine: [cached since 0.4692s ago] {'user_id_1': 2, 'current_resource_id_1': 1660, 'recommended_price_id_1': 3539, 'param_1': 1}
2025-10-28 08:06:11,962 INFO sqlalchemy.engine.Engine: INSERT INTO price_comparison_recommendations (user_id, current_resource_id, recommended_price_id, similarity_score, monthly_savings, annual_savings, savings_percent, migration_effort, migration_notes, status, user_feedback, created_at, updated_at) VALUES (%(user_id)s, %(current_resource_id)s, %(recommended_price_id)s, %(similarity_score)s, %(monthly_savings)s, %(annual_savings)s, %(savings_percent)s, %(migration_effort)s, %(migration_notes)s, %(status)s, %(user_feedback)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:11,962 INFO sqlalchemy.engine.Engine: [cached since 0.3225s ago] {'user_id': 2, 'current_resource_id': 1660, 'recommended_price_id': 3539, 'similarity_score': 40.0, 'monthly_savings': 8774.92, 'annual_savings': 105299.04, 'savings_percent': 93.53, 'migration_effort': 'medium', 'migration_notes': None, 'status': 'pending', 'user_feedback': None, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 962891), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 962891)}
2025-10-28 08:06:11,963 INFO sqlalchemy.engine.Engine: SELECT optimization_recommendations.resource_id AS optimization_recommendations_resource_id, optimization_recommendations.provider_id AS optimization_recommendations_provider_id, optimization_recommendations.recommendation_type AS optimization_recommendations_recommendation_type, optimization_recommendations.category AS optimization_recommendations_category, optimization_recommendations.severity AS optimization_recommendations_severity, optimization_recommendations.title AS optimization_recommendations_title, optimization_recommendations.description AS optimization_recommendations_description, optimization_recommendations.source AS optimization_recommendations_source, optimization_recommendations.resource_type AS optimization_recommendations_resource_type, optimization_recommendations.resource_name AS optimization_recommendations_resource_name, optimization_recommendations.potential_savings AS optimization_recommendations_potential_savings, optimization_recommendations.estimated_monthly_savings AS optimization_recommendations_estimated_monthly_savings, optimization_recommendations.estimated_one_time_savings AS optimization_recommendations_estimated_one_time_savings, optimization_recommendations.currency AS optimization_recommendations_currency, optimization_recommendations.confidence_score AS optimization_recommendations_confidence_score, optimization_recommendations.metrics_snapshot AS optimization_recommendations_metrics_snapshot, optimization_recommendations.insights AS optimization_recommendations_insights, optimization_recommendations.status AS optimization_recommendations_status, optimization_recommendations.first_seen_at AS optimization_recommendations_first_seen_at, optimization_recommendations.seen_at AS optimization_recommendations_seen_at, optimization_recommendations.snoozed_until AS optimization_recommendations_snoozed_until, optimization_recommendations.applied_at AS optimization_recommendations_applied_at, optimization_recommendations.dismissed_at AS optimization_recommendations_dismissed_at, optimization_recommendations.dismissed_reason AS optimization_recommendations_dismissed_reason, optimization_recommendations.id AS optimization_recommendations_id, optimization_recommendations.created_at AS optimization_recommendations_created_at, optimization_recommendations.updated_at AS optimization_recommendations_updated_at 
FROM optimization_recommendations 
WHERE optimization_recommendations.resource_id = %(resource_id_1)s AND optimization_recommendations.recommendation_type = %(recommendation_type_1)s AND optimization_recommendations.source = %(source_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:11,963 INFO sqlalchemy.engine.Engine: [cached since 0.4585s ago] {'resource_id_1': 1660, 'recommendation_type_1': 'price_compare_cross_provider', 'source_1': 'cost.price_check.cross_provider', 'param_1': 1}
2025-10-28 08:06:11,964 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_end | rule_id=cost.price_check.cross_provider provider=yandex resource_id=1660 outputs=1 created=1 updated=0 duration_ms=33
2025-10-28 08:06:11,964 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_start | rule_id=cost.rightsize.cpu_underuse provider=yandex resource_id=1661 rtype=server
2025-10-28 08:06:11,964 INFO sqlalchemy.engine.Engine: INSERT INTO optimization_recommendations (resource_id, provider_id, recommendation_type, category, severity, title, description, source, resource_type, resource_name, potential_savings, estimated_monthly_savings, estimated_one_time_savings, currency, confidence_score, metrics_snapshot, insights, status, first_seen_at, seen_at, snoozed_until, applied_at, dismissed_at, dismissed_reason, created_at, updated_at) VALUES (%(resource_id)s, %(provider_id)s, %(recommendation_type)s, %(category)s, %(severity)s, %(title)s, %(description)s, %(source)s, %(resource_type)s, %(resource_name)s, %(potential_savings)s, %(estimated_monthly_savings)s, %(estimated_one_time_savings)s, %(currency)s, %(confidence_score)s, %(metrics_snapshot)s, %(insights)s, %(status)s, %(first_seen_at)s, %(seen_at)s, %(snoozed_until)s, %(applied_at)s, %(dismissed_at)s, %(dismissed_reason)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:11,964 INFO sqlalchemy.engine.Engine: [cached since 0.3218s ago] {'resource_id': 1660, 'provider_id': 150, 'recommendation_type': 'price_compare_cross_provider', 'category': 'cost', 'severity': 'low', 'title': 'Доступен более дешёвый аналог у другого провайдера', 'description': 'Найдено сопоставимое предложение у selectel (ru-6a) примерно за 606 RUB/мес. Текущая стоимость ~9381 RUB.', 'source': 'cost.price_check.cross_provider', 'resource_type': 'server', 'resource_name': 'cl1etc88oikj3sh8mkro-ivad', 'potential_savings': 0.0, 'estimated_monthly_savings': 8774.92, 'estimated_one_time_savings': 0.0, 'currency': 'RUB', 'confidence_score': 0.4, 'metrics_snapshot': "{'similarity': 0.4, 'target_monthly': 606.68, 'current_monthly': 9381.6}", 'insights': "{'recommended_provider': 'selectel', 'recommended_region': 'ru-6a', 'recommended_sku': 'v1-r16-d10:ru-6a', 'recommended_price_id': 3539, 'specs_unkno ... (117 characters truncated) ... : 0.4, 'price_id': 3539}, {'provider': 'selectel', 'region': 'ru-1c', 'sku': 'v1-r16-d10:ru-1c', 'monthly': 637.41, 'score': 0.4, 'price_id': 2531}]}", 'status': 'pending', 'first_seen_at': datetime.datetime(2025, 10, 28, 5, 6, 11, 964036), 'seen_at': None, 'snoozed_until': None, 'applied_at': None, 'dismissed_at': None, 'dismissed_reason': None, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 964331), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 964331)}
2025-10-28 08:06:11,964 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE %(param_1)s = resource_tags.resource_id
2025-10-28 08:06:11,964 INFO sqlalchemy.engine.Engine: [cached since 0.433s ago] {'param_1': 1661}
2025-10-28 08:06:11,965 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_end | rule_id=cost.rightsize.cpu_underuse provider=yandex resource_id=1661 outputs=0 created=0 updated=0 duration_ms=1
2025-10-28 08:06:11,965 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_start | rule_id=cost.price_check.cross_provider provider=yandex resource_id=1661 rtype=server
2025-10-28 08:06:11,965 INFO app.core.recommendations.plugins.price_check_rule: price_check: normalized | res_id=1661 name=cl192dme7q4gg4ne73d7-ubig vcpu=None mem_gib=16.0 region=ru-central1-b
2025-10-28 08:06:11,965 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s) AS anon_1
2025-10-28 08:06:11,965 INFO sqlalchemy.engine.Engine: [cached since 0.429s ago] {'provider_1': 'yandex', 'ram_gb_1': 12.8, 'ram_gb_2': 20.0}
2025-10-28 08:06:11,969 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s AND (provider_prices.region LIKE concat(%(region_1)s, '%%'))) AS anon_1
2025-10-28 08:06:11,969 INFO sqlalchemy.engine.Engine: [cached since 0.4277s ago] {'provider_1': 'yandex', 'ram_gb_1': 12.8, 'ram_gb_2': 20.0, 'region_1': 'ru'}
2025-10-28 08:06:11,973 INFO sqlalchemy.engine.Engine: SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s AND (provider_prices.region LIKE concat(%(region_1)s, '%%')) ORDER BY provider_prices.monthly_cost IS NULL ASC, provider_prices.monthly_cost ASC 
 LIMIT %(param_1)s
2025-10-28 08:06:11,974 INFO sqlalchemy.engine.Engine: [cached since 0.428s ago] {'provider_1': 'yandex', 'ram_gb_1': 12.8, 'ram_gb_2': 20.0, 'region_1': 'ru', 'param_1': 500}
2025-10-28 08:06:11,992 INFO app.core.recommendations.plugins.price_check_rule: price_check: catalog scope | res_id=1661 total_prices=672 region_filtered=456
2025-10-28 08:06:11,992 INFO app.core.recommendations.plugins.price_check_rule: price_check: candidate_search | res_id=1661 pref_region=ru-central1-b min_score=0.00
2025-10-28 08:06:11,995 INFO app.core.recommendations.plugins.price_check_rule: price_check: candidate | res_id=1661 best_price_id=3539 score=0.40 target_monthly=606.68 current_monthly=9158.40 savings=8551.72 min_abs=0.00
2025-10-28 08:06:11,995 INFO sqlalchemy.engine.Engine: SELECT price_comparison_recommendations.user_id AS price_comparison_recommendations_user_id, price_comparison_recommendations.current_resource_id AS price_comparison_recommendations_current_resource_id, price_comparison_recommendations.recommended_price_id AS price_comparison_recommendations_recommended_price_id, price_comparison_recommendations.similarity_score AS price_comparison_recommendations_similarity_score, price_comparison_recommendations.monthly_savings AS price_comparison_recommendations_monthly_savings, price_comparison_recommendations.annual_savings AS price_comparison_recommendations_annual_savings, price_comparison_recommendations.savings_percent AS price_comparison_recommendations_savings_percent, price_comparison_recommendations.migration_effort AS price_comparison_recommendations_migration_effort, price_comparison_recommendations.migration_notes AS price_comparison_recommendations_migration_notes, price_comparison_recommendations.status AS price_comparison_recommendations_status, price_comparison_recommendations.user_feedback AS price_comparison_recommendations_user_feedback, price_comparison_recommendations.id AS price_comparison_recommendations_id, price_comparison_recommendations.created_at AS price_comparison_recommendations_created_at, price_comparison_recommendations.updated_at AS price_comparison_recommendations_updated_at 
FROM price_comparison_recommendations 
WHERE price_comparison_recommendations.user_id = %(user_id_1)s AND price_comparison_recommendations.current_resource_id = %(current_resource_id_1)s AND price_comparison_recommendations.recommended_price_id = %(recommended_price_id_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:11,995 INFO sqlalchemy.engine.Engine: [cached since 0.5033s ago] {'user_id_1': 2, 'current_resource_id_1': 1661, 'recommended_price_id_1': 3539, 'param_1': 1}
2025-10-28 08:06:11,996 INFO sqlalchemy.engine.Engine: INSERT INTO price_comparison_recommendations (user_id, current_resource_id, recommended_price_id, similarity_score, monthly_savings, annual_savings, savings_percent, migration_effort, migration_notes, status, user_feedback, created_at, updated_at) VALUES (%(user_id)s, %(current_resource_id)s, %(recommended_price_id)s, %(similarity_score)s, %(monthly_savings)s, %(annual_savings)s, %(savings_percent)s, %(migration_effort)s, %(migration_notes)s, %(status)s, %(user_feedback)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:11,996 INFO sqlalchemy.engine.Engine: [cached since 0.3562s ago] {'user_id': 2, 'current_resource_id': 1661, 'recommended_price_id': 3539, 'similarity_score': 40.0, 'monthly_savings': 8551.72, 'annual_savings': 102620.64, 'savings_percent': 93.38, 'migration_effort': 'medium', 'migration_notes': None, 'status': 'pending', 'user_feedback': None, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 996635), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 996636)}
2025-10-28 08:06:11,997 INFO sqlalchemy.engine.Engine: SELECT optimization_recommendations.resource_id AS optimization_recommendations_resource_id, optimization_recommendations.provider_id AS optimization_recommendations_provider_id, optimization_recommendations.recommendation_type AS optimization_recommendations_recommendation_type, optimization_recommendations.category AS optimization_recommendations_category, optimization_recommendations.severity AS optimization_recommendations_severity, optimization_recommendations.title AS optimization_recommendations_title, optimization_recommendations.description AS optimization_recommendations_description, optimization_recommendations.source AS optimization_recommendations_source, optimization_recommendations.resource_type AS optimization_recommendations_resource_type, optimization_recommendations.resource_name AS optimization_recommendations_resource_name, optimization_recommendations.potential_savings AS optimization_recommendations_potential_savings, optimization_recommendations.estimated_monthly_savings AS optimization_recommendations_estimated_monthly_savings, optimization_recommendations.estimated_one_time_savings AS optimization_recommendations_estimated_one_time_savings, optimization_recommendations.currency AS optimization_recommendations_currency, optimization_recommendations.confidence_score AS optimization_recommendations_confidence_score, optimization_recommendations.metrics_snapshot AS optimization_recommendations_metrics_snapshot, optimization_recommendations.insights AS optimization_recommendations_insights, optimization_recommendations.status AS optimization_recommendations_status, optimization_recommendations.first_seen_at AS optimization_recommendations_first_seen_at, optimization_recommendations.seen_at AS optimization_recommendations_seen_at, optimization_recommendations.snoozed_until AS optimization_recommendations_snoozed_until, optimization_recommendations.applied_at AS optimization_recommendations_applied_at, optimization_recommendations.dismissed_at AS optimization_recommendations_dismissed_at, optimization_recommendations.dismissed_reason AS optimization_recommendations_dismissed_reason, optimization_recommendations.id AS optimization_recommendations_id, optimization_recommendations.created_at AS optimization_recommendations_created_at, optimization_recommendations.updated_at AS optimization_recommendations_updated_at 
FROM optimization_recommendations 
WHERE optimization_recommendations.resource_id = %(resource_id_1)s AND optimization_recommendations.recommendation_type = %(recommendation_type_1)s AND optimization_recommendations.source = %(source_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:11,997 INFO sqlalchemy.engine.Engine: [cached since 0.4921s ago] {'resource_id_1': 1661, 'recommendation_type_1': 'price_compare_cross_provider', 'source_1': 'cost.price_check.cross_provider', 'param_1': 1}
2025-10-28 08:06:11,997 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_end | rule_id=cost.price_check.cross_provider provider=yandex resource_id=1661 outputs=1 created=1 updated=0 duration_ms=32
2025-10-28 08:06:11,997 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_start | rule_id=cost.rightsize.cpu_underuse provider=yandex resource_id=1662 rtype=server
2025-10-28 08:06:11,997 INFO sqlalchemy.engine.Engine: INSERT INTO optimization_recommendations (resource_id, provider_id, recommendation_type, category, severity, title, description, source, resource_type, resource_name, potential_savings, estimated_monthly_savings, estimated_one_time_savings, currency, confidence_score, metrics_snapshot, insights, status, first_seen_at, seen_at, snoozed_until, applied_at, dismissed_at, dismissed_reason, created_at, updated_at) VALUES (%(resource_id)s, %(provider_id)s, %(recommendation_type)s, %(category)s, %(severity)s, %(title)s, %(description)s, %(source)s, %(resource_type)s, %(resource_name)s, %(potential_savings)s, %(estimated_monthly_savings)s, %(estimated_one_time_savings)s, %(currency)s, %(confidence_score)s, %(metrics_snapshot)s, %(insights)s, %(status)s, %(first_seen_at)s, %(seen_at)s, %(snoozed_until)s, %(applied_at)s, %(dismissed_at)s, %(dismissed_reason)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:11,997 INFO sqlalchemy.engine.Engine: [cached since 0.3553s ago] {'resource_id': 1661, 'provider_id': 150, 'recommendation_type': 'price_compare_cross_provider', 'category': 'cost', 'severity': 'low', 'title': 'Доступен более дешёвый аналог у другого провайдера', 'description': 'Найдено сопоставимое предложение у selectel (ru-6a) примерно за 606 RUB/мес. Текущая стоимость ~9158 RUB.', 'source': 'cost.price_check.cross_provider', 'resource_type': 'server', 'resource_name': 'cl192dme7q4gg4ne73d7-ubig', 'potential_savings': 0.0, 'estimated_monthly_savings': 8551.72, 'estimated_one_time_savings': 0.0, 'currency': 'RUB', 'confidence_score': 0.4, 'metrics_snapshot': "{'similarity': 0.4, 'target_monthly': 606.68, 'current_monthly': 9158.4}", 'insights': "{'recommended_provider': 'selectel', 'recommended_region': 'ru-6a', 'recommended_sku': 'v1-r16-d10:ru-6a', 'recommended_price_id': 3539, 'specs_unkno ... (117 characters truncated) ... : 0.4, 'price_id': 3539}, {'provider': 'selectel', 'region': 'ru-1c', 'sku': 'v1-r16-d10:ru-1c', 'monthly': 637.41, 'score': 0.4, 'price_id': 2531}]}", 'status': 'pending', 'first_seen_at': datetime.datetime(2025, 10, 28, 5, 6, 11, 997572), 'seen_at': None, 'snoozed_until': None, 'applied_at': None, 'dismissed_at': None, 'dismissed_reason': None, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 997840), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 11, 997840)}
2025-10-28 08:06:11,998 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE %(param_1)s = resource_tags.resource_id
2025-10-28 08:06:11,998 INFO sqlalchemy.engine.Engine: [cached since 0.4664s ago] {'param_1': 1662}
2025-10-28 08:06:11,998 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_end | rule_id=cost.rightsize.cpu_underuse provider=yandex resource_id=1662 outputs=0 created=0 updated=0 duration_ms=1
2025-10-28 08:06:11,998 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_start | rule_id=cost.price_check.cross_provider provider=yandex resource_id=1662 rtype=server
2025-10-28 08:06:11,998 INFO app.core.recommendations.plugins.price_check_rule: price_check: normalized | res_id=1662 name=cl1hiol7irnqk6ieucmd-egop vcpu=None mem_gib=8.0 region=ru-central1-b
2025-10-28 08:06:11,999 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s) AS anon_1
2025-10-28 08:06:11,999 INFO sqlalchemy.engine.Engine: [cached since 0.4624s ago] {'provider_1': 'yandex', 'ram_gb_1': 6.4, 'ram_gb_2': 10.0}
2025-10-28 08:06:12,002 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s AND (provider_prices.region LIKE concat(%(region_1)s, '%%'))) AS anon_1
2025-10-28 08:06:12,002 INFO sqlalchemy.engine.Engine: [cached since 0.4607s ago] {'provider_1': 'yandex', 'ram_gb_1': 6.4, 'ram_gb_2': 10.0, 'region_1': 'ru'}
2025-10-28 08:06:12,006 INFO sqlalchemy.engine.Engine: SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s AND (provider_prices.region LIKE concat(%(region_1)s, '%%')) ORDER BY provider_prices.monthly_cost IS NULL ASC, provider_prices.monthly_cost ASC 
 LIMIT %(param_1)s
2025-10-28 08:06:12,006 INFO sqlalchemy.engine.Engine: [cached since 0.4604s ago] {'provider_1': 'yandex', 'ram_gb_1': 6.4, 'ram_gb_2': 10.0, 'region_1': 'ru', 'param_1': 500}
2025-10-28 08:06:12,022 INFO app.core.recommendations.plugins.price_check_rule: price_check: catalog scope | res_id=1662 total_prices=564 region_filtered=384
2025-10-28 08:06:12,022 INFO app.core.recommendations.plugins.price_check_rule: price_check: candidate_search | res_id=1662 pref_region=ru-central1-b min_score=0.00
2025-10-28 08:06:12,024 INFO app.core.recommendations.plugins.price_check_rule: price_check: candidate | res_id=1662 best_price_id=3535 score=0.40 target_monthly=360.92 current_monthly=4694.40 savings=4333.48 min_abs=0.00
2025-10-28 08:06:12,024 INFO sqlalchemy.engine.Engine: SELECT price_comparison_recommendations.user_id AS price_comparison_recommendations_user_id, price_comparison_recommendations.current_resource_id AS price_comparison_recommendations_current_resource_id, price_comparison_recommendations.recommended_price_id AS price_comparison_recommendations_recommended_price_id, price_comparison_recommendations.similarity_score AS price_comparison_recommendations_similarity_score, price_comparison_recommendations.monthly_savings AS price_comparison_recommendations_monthly_savings, price_comparison_recommendations.annual_savings AS price_comparison_recommendations_annual_savings, price_comparison_recommendations.savings_percent AS price_comparison_recommendations_savings_percent, price_comparison_recommendations.migration_effort AS price_comparison_recommendations_migration_effort, price_comparison_recommendations.migration_notes AS price_comparison_recommendations_migration_notes, price_comparison_recommendations.status AS price_comparison_recommendations_status, price_comparison_recommendations.user_feedback AS price_comparison_recommendations_user_feedback, price_comparison_recommendations.id AS price_comparison_recommendations_id, price_comparison_recommendations.created_at AS price_comparison_recommendations_created_at, price_comparison_recommendations.updated_at AS price_comparison_recommendations_updated_at 
FROM price_comparison_recommendations 
WHERE price_comparison_recommendations.user_id = %(user_id_1)s AND price_comparison_recommendations.current_resource_id = %(current_resource_id_1)s AND price_comparison_recommendations.recommended_price_id = %(recommended_price_id_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:12,025 INFO sqlalchemy.engine.Engine: [cached since 0.5326s ago] {'user_id_1': 2, 'current_resource_id_1': 1662, 'recommended_price_id_1': 3535, 'param_1': 1}
2025-10-28 08:06:12,025 INFO sqlalchemy.engine.Engine: INSERT INTO price_comparison_recommendations (user_id, current_resource_id, recommended_price_id, similarity_score, monthly_savings, annual_savings, savings_percent, migration_effort, migration_notes, status, user_feedback, created_at, updated_at) VALUES (%(user_id)s, %(current_resource_id)s, %(recommended_price_id)s, %(similarity_score)s, %(monthly_savings)s, %(annual_savings)s, %(savings_percent)s, %(migration_effort)s, %(migration_notes)s, %(status)s, %(user_feedback)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:12,025 INFO sqlalchemy.engine.Engine: [cached since 0.3854s ago] {'user_id': 2, 'current_resource_id': 1662, 'recommended_price_id': 3535, 'similarity_score': 40.0, 'monthly_savings': 4333.48, 'annual_savings': 52001.76, 'savings_percent': 92.31, 'migration_effort': 'medium', 'migration_notes': None, 'status': 'pending', 'user_feedback': None, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 12, 25793), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 12, 25794)}
2025-10-28 08:06:12,026 INFO sqlalchemy.engine.Engine: SELECT optimization_recommendations.resource_id AS optimization_recommendations_resource_id, optimization_recommendations.provider_id AS optimization_recommendations_provider_id, optimization_recommendations.recommendation_type AS optimization_recommendations_recommendation_type, optimization_recommendations.category AS optimization_recommendations_category, optimization_recommendations.severity AS optimization_recommendations_severity, optimization_recommendations.title AS optimization_recommendations_title, optimization_recommendations.description AS optimization_recommendations_description, optimization_recommendations.source AS optimization_recommendations_source, optimization_recommendations.resource_type AS optimization_recommendations_resource_type, optimization_recommendations.resource_name AS optimization_recommendations_resource_name, optimization_recommendations.potential_savings AS optimization_recommendations_potential_savings, optimization_recommendations.estimated_monthly_savings AS optimization_recommendations_estimated_monthly_savings, optimization_recommendations.estimated_one_time_savings AS optimization_recommendations_estimated_one_time_savings, optimization_recommendations.currency AS optimization_recommendations_currency, optimization_recommendations.confidence_score AS optimization_recommendations_confidence_score, optimization_recommendations.metrics_snapshot AS optimization_recommendations_metrics_snapshot, optimization_recommendations.insights AS optimization_recommendations_insights, optimization_recommendations.status AS optimization_recommendations_status, optimization_recommendations.first_seen_at AS optimization_recommendations_first_seen_at, optimization_recommendations.seen_at AS optimization_recommendations_seen_at, optimization_recommendations.snoozed_until AS optimization_recommendations_snoozed_until, optimization_recommendations.applied_at AS optimization_recommendations_applied_at, optimization_recommendations.dismissed_at AS optimization_recommendations_dismissed_at, optimization_recommendations.dismissed_reason AS optimization_recommendations_dismissed_reason, optimization_recommendations.id AS optimization_recommendations_id, optimization_recommendations.created_at AS optimization_recommendations_created_at, optimization_recommendations.updated_at AS optimization_recommendations_updated_at 
FROM optimization_recommendations 
WHERE optimization_recommendations.resource_id = %(resource_id_1)s AND optimization_recommendations.recommendation_type = %(recommendation_type_1)s AND optimization_recommendations.source = %(source_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:12,026 INFO sqlalchemy.engine.Engine: [cached since 0.5212s ago] {'resource_id_1': 1662, 'recommendation_type_1': 'price_compare_cross_provider', 'source_1': 'cost.price_check.cross_provider', 'param_1': 1}
2025-10-28 08:06:12,026 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_end | rule_id=cost.price_check.cross_provider provider=yandex resource_id=1662 outputs=1 created=1 updated=0 duration_ms=27
2025-10-28 08:06:12,026 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_start | rule_id=cost.rightsize.cpu_underuse provider=yandex resource_id=1663 rtype=server
2025-10-28 08:06:12,026 INFO sqlalchemy.engine.Engine: INSERT INTO optimization_recommendations (resource_id, provider_id, recommendation_type, category, severity, title, description, source, resource_type, resource_name, potential_savings, estimated_monthly_savings, estimated_one_time_savings, currency, confidence_score, metrics_snapshot, insights, status, first_seen_at, seen_at, snoozed_until, applied_at, dismissed_at, dismissed_reason, created_at, updated_at) VALUES (%(resource_id)s, %(provider_id)s, %(recommendation_type)s, %(category)s, %(severity)s, %(title)s, %(description)s, %(source)s, %(resource_type)s, %(resource_name)s, %(potential_savings)s, %(estimated_monthly_savings)s, %(estimated_one_time_savings)s, %(currency)s, %(confidence_score)s, %(metrics_snapshot)s, %(insights)s, %(status)s, %(first_seen_at)s, %(seen_at)s, %(snoozed_until)s, %(applied_at)s, %(dismissed_at)s, %(dismissed_reason)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:12,026 INFO sqlalchemy.engine.Engine: [cached since 0.3844s ago] {'resource_id': 1662, 'provider_id': 150, 'recommendation_type': 'price_compare_cross_provider', 'category': 'cost', 'severity': 'low', 'title': 'Доступен более дешёвый аналог у другого провайдера', 'description': 'Найдено сопоставимое предложение у selectel (ru-6a) примерно за 360 RUB/мес. Текущая стоимость ~4694 RUB.', 'source': 'cost.price_check.cross_provider', 'resource_type': 'server', 'resource_name': 'cl1hiol7irnqk6ieucmd-egop', 'potential_savings': 0.0, 'estimated_monthly_savings': 4333.48, 'estimated_one_time_savings': 0.0, 'currency': 'RUB', 'confidence_score': 0.4, 'metrics_snapshot': "{'similarity': 0.4, 'target_monthly': 360.92, 'current_monthly': 4694.4}", 'insights': "{'recommended_provider': 'selectel', 'recommended_region': 'ru-6a', 'recommended_sku': 'v1-r8-d10:ru-6a', 'recommended_price_id': 3535, 'specs_unknow ... (114 characters truncated) ... ': 0.4, 'price_id': 3535}, {'provider': 'selectel', 'region': 'ru-1c', 'sku': 'v1-r8-d10:ru-1c', 'monthly': 376.29, 'score': 0.4, 'price_id': 2527}]}", 'status': 'pending', 'first_seen_at': datetime.datetime(2025, 10, 28, 5, 6, 12, 26649), 'seen_at': None, 'snoozed_until': None, 'applied_at': None, 'dismissed_at': None, 'dismissed_reason': None, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 12, 26906), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 12, 26907)}
2025-10-28 08:06:12,027 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE %(param_1)s = resource_tags.resource_id
2025-10-28 08:06:12,027 INFO sqlalchemy.engine.Engine: [cached since 0.4955s ago] {'param_1': 1663}
2025-10-28 08:06:12,027 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_end | rule_id=cost.rightsize.cpu_underuse provider=yandex resource_id=1663 outputs=0 created=0 updated=0 duration_ms=1
2025-10-28 08:06:12,027 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_start | rule_id=cost.price_check.cross_provider provider=yandex resource_id=1663 rtype=server
2025-10-28 08:06:12,027 INFO app.core.recommendations.plugins.price_check_rule: price_check: normalized | res_id=1663 name=bookstack vcpu=None mem_gib=4.0 region=ru-central1-b
2025-10-28 08:06:12,028 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s) AS anon_1
2025-10-28 08:06:12,028 INFO sqlalchemy.engine.Engine: [cached since 0.4914s ago] {'provider_1': 'yandex', 'ram_gb_1': 3.2, 'ram_gb_2': 5.0}
2025-10-28 08:06:12,031 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s AND (provider_prices.region LIKE concat(%(region_1)s, '%%'))) AS anon_1
2025-10-28 08:06:12,031 INFO sqlalchemy.engine.Engine: [cached since 0.4897s ago] {'provider_1': 'yandex', 'ram_gb_1': 3.2, 'ram_gb_2': 5.0, 'region_1': 'ru'}
2025-10-28 08:06:12,035 INFO sqlalchemy.engine.Engine: SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s AND (provider_prices.region LIKE concat(%(region_1)s, '%%')) ORDER BY provider_prices.monthly_cost IS NULL ASC, provider_prices.monthly_cost ASC 
 LIMIT %(param_1)s
2025-10-28 08:06:12,035 INFO sqlalchemy.engine.Engine: [cached since 0.4893s ago] {'provider_1': 'yandex', 'ram_gb_1': 3.2, 'ram_gb_2': 5.0, 'region_1': 'ru', 'param_1': 500}
2025-10-28 08:06:12,049 INFO app.core.recommendations.plugins.price_check_rule: price_check: catalog scope | res_id=1663 total_prices=456 region_filtered=312
2025-10-28 08:06:12,049 INFO app.core.recommendations.plugins.price_check_rule: price_check: candidate_search | res_id=1663 pref_region=ru-central1-b min_score=0.00
2025-10-28 08:06:12,051 INFO app.core.recommendations.plugins.price_check_rule: price_check: candidate | res_id=1663 best_price_id=3531 score=0.40 target_monthly=238.04 current_monthly=2587.20 savings=2349.16 min_abs=0.00
2025-10-28 08:06:12,051 INFO sqlalchemy.engine.Engine: SELECT price_comparison_recommendations.user_id AS price_comparison_recommendations_user_id, price_comparison_recommendations.current_resource_id AS price_comparison_recommendations_current_resource_id, price_comparison_recommendations.recommended_price_id AS price_comparison_recommendations_recommended_price_id, price_comparison_recommendations.similarity_score AS price_comparison_recommendations_similarity_score, price_comparison_recommendations.monthly_savings AS price_comparison_recommendations_monthly_savings, price_comparison_recommendations.annual_savings AS price_comparison_recommendations_annual_savings, price_comparison_recommendations.savings_percent AS price_comparison_recommendations_savings_percent, price_comparison_recommendations.migration_effort AS price_comparison_recommendations_migration_effort, price_comparison_recommendations.migration_notes AS price_comparison_recommendations_migration_notes, price_comparison_recommendations.status AS price_comparison_recommendations_status, price_comparison_recommendations.user_feedback AS price_comparison_recommendations_user_feedback, price_comparison_recommendations.id AS price_comparison_recommendations_id, price_comparison_recommendations.created_at AS price_comparison_recommendations_created_at, price_comparison_recommendations.updated_at AS price_comparison_recommendations_updated_at 
FROM price_comparison_recommendations 
WHERE price_comparison_recommendations.user_id = %(user_id_1)s AND price_comparison_recommendations.current_resource_id = %(current_resource_id_1)s AND price_comparison_recommendations.recommended_price_id = %(recommended_price_id_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:12,051 INFO sqlalchemy.engine.Engine: [cached since 0.5594s ago] {'user_id_1': 2, 'current_resource_id_1': 1663, 'recommended_price_id_1': 3531, 'param_1': 1}
2025-10-28 08:06:12,052 INFO sqlalchemy.engine.Engine: INSERT INTO price_comparison_recommendations (user_id, current_resource_id, recommended_price_id, similarity_score, monthly_savings, annual_savings, savings_percent, migration_effort, migration_notes, status, user_feedback, created_at, updated_at) VALUES (%(user_id)s, %(current_resource_id)s, %(recommended_price_id)s, %(similarity_score)s, %(monthly_savings)s, %(annual_savings)s, %(savings_percent)s, %(migration_effort)s, %(migration_notes)s, %(status)s, %(user_feedback)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:12,052 INFO sqlalchemy.engine.Engine: [cached since 0.4122s ago] {'user_id': 2, 'current_resource_id': 1663, 'recommended_price_id': 3531, 'similarity_score': 40.0, 'monthly_savings': 2349.16, 'annual_savings': 28189.92, 'savings_percent': 90.8, 'migration_effort': 'medium', 'migration_notes': None, 'status': 'pending', 'user_feedback': None, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 12, 52631), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 12, 52632)}
2025-10-28 08:06:12,053 INFO sqlalchemy.engine.Engine: SELECT optimization_recommendations.resource_id AS optimization_recommendations_resource_id, optimization_recommendations.provider_id AS optimization_recommendations_provider_id, optimization_recommendations.recommendation_type AS optimization_recommendations_recommendation_type, optimization_recommendations.category AS optimization_recommendations_category, optimization_recommendations.severity AS optimization_recommendations_severity, optimization_recommendations.title AS optimization_recommendations_title, optimization_recommendations.description AS optimization_recommendations_description, optimization_recommendations.source AS optimization_recommendations_source, optimization_recommendations.resource_type AS optimization_recommendations_resource_type, optimization_recommendations.resource_name AS optimization_recommendations_resource_name, optimization_recommendations.potential_savings AS optimization_recommendations_potential_savings, optimization_recommendations.estimated_monthly_savings AS optimization_recommendations_estimated_monthly_savings, optimization_recommendations.estimated_one_time_savings AS optimization_recommendations_estimated_one_time_savings, optimization_recommendations.currency AS optimization_recommendations_currency, optimization_recommendations.confidence_score AS optimization_recommendations_confidence_score, optimization_recommendations.metrics_snapshot AS optimization_recommendations_metrics_snapshot, optimization_recommendations.insights AS optimization_recommendations_insights, optimization_recommendations.status AS optimization_recommendations_status, optimization_recommendations.first_seen_at AS optimization_recommendations_first_seen_at, optimization_recommendations.seen_at AS optimization_recommendations_seen_at, optimization_recommendations.snoozed_until AS optimization_recommendations_snoozed_until, optimization_recommendations.applied_at AS optimization_recommendations_applied_at, optimization_recommendations.dismissed_at AS optimization_recommendations_dismissed_at, optimization_recommendations.dismissed_reason AS optimization_recommendations_dismissed_reason, optimization_recommendations.id AS optimization_recommendations_id, optimization_recommendations.created_at AS optimization_recommendations_created_at, optimization_recommendations.updated_at AS optimization_recommendations_updated_at 
FROM optimization_recommendations 
WHERE optimization_recommendations.resource_id = %(resource_id_1)s AND optimization_recommendations.recommendation_type = %(recommendation_type_1)s AND optimization_recommendations.source = %(source_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:12,053 INFO sqlalchemy.engine.Engine: [cached since 0.5481s ago] {'resource_id_1': 1663, 'recommendation_type_1': 'price_compare_cross_provider', 'source_1': 'cost.price_check.cross_provider', 'param_1': 1}
2025-10-28 08:06:12,053 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_end | rule_id=cost.price_check.cross_provider provider=yandex resource_id=1663 outputs=1 created=1 updated=0 duration_ms=25
2025-10-28 08:06:12,053 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_start | rule_id=cost.rightsize.cpu_underuse provider=yandex resource_id=1664 rtype=server
2025-10-28 08:06:12,053 INFO sqlalchemy.engine.Engine: INSERT INTO optimization_recommendations (resource_id, provider_id, recommendation_type, category, severity, title, description, source, resource_type, resource_name, potential_savings, estimated_monthly_savings, estimated_one_time_savings, currency, confidence_score, metrics_snapshot, insights, status, first_seen_at, seen_at, snoozed_until, applied_at, dismissed_at, dismissed_reason, created_at, updated_at) VALUES (%(resource_id)s, %(provider_id)s, %(recommendation_type)s, %(category)s, %(severity)s, %(title)s, %(description)s, %(source)s, %(resource_type)s, %(resource_name)s, %(potential_savings)s, %(estimated_monthly_savings)s, %(estimated_one_time_savings)s, %(currency)s, %(confidence_score)s, %(metrics_snapshot)s, %(insights)s, %(status)s, %(first_seen_at)s, %(seen_at)s, %(snoozed_until)s, %(applied_at)s, %(dismissed_at)s, %(dismissed_reason)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:12,053 INFO sqlalchemy.engine.Engine: [cached since 0.4113s ago] {'resource_id': 1663, 'provider_id': 150, 'recommendation_type': 'price_compare_cross_provider', 'category': 'cost', 'severity': 'low', 'title': 'Доступен более дешёвый аналог у другого провайдера', 'description': 'Найдено сопоставимое предложение у selectel (ru-6a) примерно за 238 RUB/мес. Текущая стоимость ~2587 RUB.', 'source': 'cost.price_check.cross_provider', 'resource_type': 'server', 'resource_name': 'bookstack', 'potential_savings': 0.0, 'estimated_monthly_savings': 2349.16, 'estimated_one_time_savings': 0.0, 'currency': 'RUB', 'confidence_score': 0.4, 'metrics_snapshot': "{'similarity': 0.4, 'target_monthly': 238.04, 'current_monthly': 2587.2}", 'insights': "{'recommended_provider': 'selectel', 'recommended_region': 'ru-6a', 'recommended_sku': 'v1-r4-d10:ru-6a', 'recommended_price_id': 3531, 'specs_unknow ... (114 characters truncated) ... ': 0.4, 'price_id': 3531}, {'provider': 'selectel', 'region': 'ru-1c', 'sku': 'v1-r4-d10:ru-1c', 'monthly': 245.73, 'score': 0.4, 'price_id': 2523}]}", 'status': 'pending', 'first_seen_at': datetime.datetime(2025, 10, 28, 5, 6, 12, 53563), 'seen_at': None, 'snoozed_until': None, 'applied_at': None, 'dismissed_at': None, 'dismissed_reason': None, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 12, 53823), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 12, 53824)}
2025-10-28 08:06:12,054 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE %(param_1)s = resource_tags.resource_id
2025-10-28 08:06:12,054 INFO sqlalchemy.engine.Engine: [cached since 0.5224s ago] {'param_1': 1664}
2025-10-28 08:06:12,054 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_end | rule_id=cost.rightsize.cpu_underuse provider=yandex resource_id=1664 outputs=0 created=0 updated=0 duration_ms=1
2025-10-28 08:06:12,054 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_start | rule_id=cost.price_check.cross_provider provider=yandex resource_id=1664 rtype=server
2025-10-28 08:06:12,054 INFO app.core.recommendations.plugins.price_check_rule: price_check: normalized | res_id=1664 name=chartsstorage vcpu=None mem_gib=8.0 region=ru-central1-b
2025-10-28 08:06:12,055 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s) AS anon_1
2025-10-28 08:06:12,055 INFO sqlalchemy.engine.Engine: [cached since 0.5184s ago] {'provider_1': 'yandex', 'ram_gb_1': 6.4, 'ram_gb_2': 10.0}
2025-10-28 08:06:12,058 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s AND (provider_prices.region LIKE concat(%(region_1)s, '%%'))) AS anon_1
2025-10-28 08:06:12,058 INFO sqlalchemy.engine.Engine: [cached since 0.5167s ago] {'provider_1': 'yandex', 'ram_gb_1': 6.4, 'ram_gb_2': 10.0, 'region_1': 'ru'}
2025-10-28 08:06:12,061 INFO sqlalchemy.engine.Engine: SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s AND (provider_prices.region LIKE concat(%(region_1)s, '%%')) ORDER BY provider_prices.monthly_cost IS NULL ASC, provider_prices.monthly_cost ASC 
 LIMIT %(param_1)s
2025-10-28 08:06:12,061 INFO sqlalchemy.engine.Engine: [cached since 0.5159s ago] {'provider_1': 'yandex', 'ram_gb_1': 6.4, 'ram_gb_2': 10.0, 'region_1': 'ru', 'param_1': 500}
2025-10-28 08:06:12,078 INFO app.core.recommendations.plugins.price_check_rule: price_check: catalog scope | res_id=1664 total_prices=564 region_filtered=384
2025-10-28 08:06:12,078 INFO app.core.recommendations.plugins.price_check_rule: price_check: candidate_search | res_id=1664 pref_region=ru-central1-b min_score=0.00
2025-10-28 08:06:12,080 INFO app.core.recommendations.plugins.price_check_rule: price_check: candidate | res_id=1664 best_price_id=3535 score=0.40 target_monthly=360.92 current_monthly=14837.70 savings=14476.78 min_abs=0.00
2025-10-28 08:06:12,081 INFO sqlalchemy.engine.Engine: SELECT price_comparison_recommendations.user_id AS price_comparison_recommendations_user_id, price_comparison_recommendations.current_resource_id AS price_comparison_recommendations_current_resource_id, price_comparison_recommendations.recommended_price_id AS price_comparison_recommendations_recommended_price_id, price_comparison_recommendations.similarity_score AS price_comparison_recommendations_similarity_score, price_comparison_recommendations.monthly_savings AS price_comparison_recommendations_monthly_savings, price_comparison_recommendations.annual_savings AS price_comparison_recommendations_annual_savings, price_comparison_recommendations.savings_percent AS price_comparison_recommendations_savings_percent, price_comparison_recommendations.migration_effort AS price_comparison_recommendations_migration_effort, price_comparison_recommendations.migration_notes AS price_comparison_recommendations_migration_notes, price_comparison_recommendations.status AS price_comparison_recommendations_status, price_comparison_recommendations.user_feedback AS price_comparison_recommendations_user_feedback, price_comparison_recommendations.id AS price_comparison_recommendations_id, price_comparison_recommendations.created_at AS price_comparison_recommendations_created_at, price_comparison_recommendations.updated_at AS price_comparison_recommendations_updated_at 
FROM price_comparison_recommendations 
WHERE price_comparison_recommendations.user_id = %(user_id_1)s AND price_comparison_recommendations.current_resource_id = %(current_resource_id_1)s AND price_comparison_recommendations.recommended_price_id = %(recommended_price_id_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:12,081 INFO sqlalchemy.engine.Engine: [cached since 0.5888s ago] {'user_id_1': 2, 'current_resource_id_1': 1664, 'recommended_price_id_1': 3535, 'param_1': 1}
2025-10-28 08:06:12,082 INFO sqlalchemy.engine.Engine: INSERT INTO price_comparison_recommendations (user_id, current_resource_id, recommended_price_id, similarity_score, monthly_savings, annual_savings, savings_percent, migration_effort, migration_notes, status, user_feedback, created_at, updated_at) VALUES (%(user_id)s, %(current_resource_id)s, %(recommended_price_id)s, %(similarity_score)s, %(monthly_savings)s, %(annual_savings)s, %(savings_percent)s, %(migration_effort)s, %(migration_notes)s, %(status)s, %(user_feedback)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:12,082 INFO sqlalchemy.engine.Engine: [cached since 0.4416s ago] {'user_id': 2, 'current_resource_id': 1664, 'recommended_price_id': 3535, 'similarity_score': 40.0, 'monthly_savings': 14476.78, 'annual_savings': 173721.36, 'savings_percent': 97.57, 'migration_effort': 'medium', 'migration_notes': None, 'status': 'pending', 'user_feedback': None, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 12, 82016), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 12, 82017)}
2025-10-28 08:06:12,082 INFO sqlalchemy.engine.Engine: SELECT optimization_recommendations.resource_id AS optimization_recommendations_resource_id, optimization_recommendations.provider_id AS optimization_recommendations_provider_id, optimization_recommendations.recommendation_type AS optimization_recommendations_recommendation_type, optimization_recommendations.category AS optimization_recommendations_category, optimization_recommendations.severity AS optimization_recommendations_severity, optimization_recommendations.title AS optimization_recommendations_title, optimization_recommendations.description AS optimization_recommendations_description, optimization_recommendations.source AS optimization_recommendations_source, optimization_recommendations.resource_type AS optimization_recommendations_resource_type, optimization_recommendations.resource_name AS optimization_recommendations_resource_name, optimization_recommendations.potential_savings AS optimization_recommendations_potential_savings, optimization_recommendations.estimated_monthly_savings AS optimization_recommendations_estimated_monthly_savings, optimization_recommendations.estimated_one_time_savings AS optimization_recommendations_estimated_one_time_savings, optimization_recommendations.currency AS optimization_recommendations_currency, optimization_recommendations.confidence_score AS optimization_recommendations_confidence_score, optimization_recommendations.metrics_snapshot AS optimization_recommendations_metrics_snapshot, optimization_recommendations.insights AS optimization_recommendations_insights, optimization_recommendations.status AS optimization_recommendations_status, optimization_recommendations.first_seen_at AS optimization_recommendations_first_seen_at, optimization_recommendations.seen_at AS optimization_recommendations_seen_at, optimization_recommendations.snoozed_until AS optimization_recommendations_snoozed_until, optimization_recommendations.applied_at AS optimization_recommendations_applied_at, optimization_recommendations.dismissed_at AS optimization_recommendations_dismissed_at, optimization_recommendations.dismissed_reason AS optimization_recommendations_dismissed_reason, optimization_recommendations.id AS optimization_recommendations_id, optimization_recommendations.created_at AS optimization_recommendations_created_at, optimization_recommendations.updated_at AS optimization_recommendations_updated_at 
FROM optimization_recommendations 
WHERE optimization_recommendations.resource_id = %(resource_id_1)s AND optimization_recommendations.recommendation_type = %(recommendation_type_1)s AND optimization_recommendations.source = %(source_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:12,082 INFO sqlalchemy.engine.Engine: [cached since 0.5777s ago] {'resource_id_1': 1664, 'recommendation_type_1': 'price_compare_cross_provider', 'source_1': 'cost.price_check.cross_provider', 'param_1': 1}
2025-10-28 08:06:12,083 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_end | rule_id=cost.price_check.cross_provider provider=yandex resource_id=1664 outputs=1 created=1 updated=0 duration_ms=28
2025-10-28 08:06:12,083 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_start | rule_id=cost.rightsize.cpu_underuse provider=yandex resource_id=1665 rtype=server
2025-10-28 08:06:12,083 INFO sqlalchemy.engine.Engine: INSERT INTO optimization_recommendations (resource_id, provider_id, recommendation_type, category, severity, title, description, source, resource_type, resource_name, potential_savings, estimated_monthly_savings, estimated_one_time_savings, currency, confidence_score, metrics_snapshot, insights, status, first_seen_at, seen_at, snoozed_until, applied_at, dismissed_at, dismissed_reason, created_at, updated_at) VALUES (%(resource_id)s, %(provider_id)s, %(recommendation_type)s, %(category)s, %(severity)s, %(title)s, %(description)s, %(source)s, %(resource_type)s, %(resource_name)s, %(potential_savings)s, %(estimated_monthly_savings)s, %(estimated_one_time_savings)s, %(currency)s, %(confidence_score)s, %(metrics_snapshot)s, %(insights)s, %(status)s, %(first_seen_at)s, %(seen_at)s, %(snoozed_until)s, %(applied_at)s, %(dismissed_at)s, %(dismissed_reason)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:12,083 INFO sqlalchemy.engine.Engine: [cached since 0.4409s ago] {'resource_id': 1664, 'provider_id': 150, 'recommendation_type': 'price_compare_cross_provider', 'category': 'cost', 'severity': 'low', 'title': 'Доступен более дешёвый аналог у другого провайдера', 'description': 'Найдено сопоставимое предложение у selectel (ru-6a) примерно за 360 RUB/мес. Текущая стоимость ~14837 RUB.', 'source': 'cost.price_check.cross_provider', 'resource_type': 'server', 'resource_name': 'chartsstorage', 'potential_savings': 0.0, 'estimated_monthly_savings': 14476.78, 'estimated_one_time_savings': 0.0, 'currency': 'RUB', 'confidence_score': 0.4, 'metrics_snapshot': "{'similarity': 0.4, 'target_monthly': 360.92, 'current_monthly': 14837.699999999999}", 'insights': "{'recommended_provider': 'selectel', 'recommended_region': 'ru-6a', 'recommended_sku': 'v1-r8-d10:ru-6a', 'recommended_price_id': 3535, 'specs_unknow ... (114 characters truncated) ... ': 0.4, 'price_id': 3535}, {'provider': 'selectel', 'region': 'ru-1c', 'sku': 'v1-r8-d10:ru-1c', 'monthly': 376.29, 'score': 0.4, 'price_id': 2527}]}", 'status': 'pending', 'first_seen_at': datetime.datetime(2025, 10, 28, 5, 6, 12, 83174), 'seen_at': None, 'snoozed_until': None, 'applied_at': None, 'dismissed_at': None, 'dismissed_reason': None, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 12, 83442), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 12, 83442)}
2025-10-28 08:06:12,083 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE %(param_1)s = resource_tags.resource_id
2025-10-28 08:06:12,084 INFO sqlalchemy.engine.Engine: [cached since 0.5521s ago] {'param_1': 1665}
2025-10-28 08:06:12,084 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_end | rule_id=cost.rightsize.cpu_underuse provider=yandex resource_id=1665 outputs=0 created=0 updated=0 duration_ms=1
2025-10-28 08:06:12,084 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_start | rule_id=cost.price_check.cross_provider provider=yandex resource_id=1665 rtype=server
2025-10-28 08:06:12,084 INFO app.core.recommendations.plugins.price_check_rule: price_check: normalized | res_id=1665 name=cl1etc88oikj3sh8mkro-amil vcpu=None mem_gib=16.0 region=ru-central1-b
2025-10-28 08:06:12,084 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s) AS anon_1
2025-10-28 08:06:12,084 INFO sqlalchemy.engine.Engine: [cached since 0.548s ago] {'provider_1': 'yandex', 'ram_gb_1': 12.8, 'ram_gb_2': 20.0}
2025-10-28 08:06:12,087 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s AND (provider_prices.region LIKE concat(%(region_1)s, '%%'))) AS anon_1
2025-10-28 08:06:12,087 INFO sqlalchemy.engine.Engine: [cached since 0.5464s ago] {'provider_1': 'yandex', 'ram_gb_1': 12.8, 'ram_gb_2': 20.0, 'region_1': 'ru'}
2025-10-28 08:06:12,092 INFO sqlalchemy.engine.Engine: SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s AND (provider_prices.region LIKE concat(%(region_1)s, '%%')) ORDER BY provider_prices.monthly_cost IS NULL ASC, provider_prices.monthly_cost ASC 
 LIMIT %(param_1)s
2025-10-28 08:06:12,092 INFO sqlalchemy.engine.Engine: [cached since 0.5466s ago] {'provider_1': 'yandex', 'ram_gb_1': 12.8, 'ram_gb_2': 20.0, 'region_1': 'ru', 'param_1': 500}
2025-10-28 08:06:12,111 INFO app.core.recommendations.plugins.price_check_rule: price_check: catalog scope | res_id=1665 total_prices=672 region_filtered=456
2025-10-28 08:06:12,111 INFO app.core.recommendations.plugins.price_check_rule: price_check: candidate_search | res_id=1665 pref_region=ru-central1-b min_score=0.00
2025-10-28 08:06:12,114 INFO app.core.recommendations.plugins.price_check_rule: price_check: candidate | res_id=1665 best_price_id=3539 score=0.40 target_monthly=606.68 current_monthly=9219.60 savings=8612.92 min_abs=0.00
2025-10-28 08:06:12,114 INFO sqlalchemy.engine.Engine: SELECT price_comparison_recommendations.user_id AS price_comparison_recommendations_user_id, price_comparison_recommendations.current_resource_id AS price_comparison_recommendations_current_resource_id, price_comparison_recommendations.recommended_price_id AS price_comparison_recommendations_recommended_price_id, price_comparison_recommendations.similarity_score AS price_comparison_recommendations_similarity_score, price_comparison_recommendations.monthly_savings AS price_comparison_recommendations_monthly_savings, price_comparison_recommendations.annual_savings AS price_comparison_recommendations_annual_savings, price_comparison_recommendations.savings_percent AS price_comparison_recommendations_savings_percent, price_comparison_recommendations.migration_effort AS price_comparison_recommendations_migration_effort, price_comparison_recommendations.migration_notes AS price_comparison_recommendations_migration_notes, price_comparison_recommendations.status AS price_comparison_recommendations_status, price_comparison_recommendations.user_feedback AS price_comparison_recommendations_user_feedback, price_comparison_recommendations.id AS price_comparison_recommendations_id, price_comparison_recommendations.created_at AS price_comparison_recommendations_created_at, price_comparison_recommendations.updated_at AS price_comparison_recommendations_updated_at 
FROM price_comparison_recommendations 
WHERE price_comparison_recommendations.user_id = %(user_id_1)s AND price_comparison_recommendations.current_resource_id = %(current_resource_id_1)s AND price_comparison_recommendations.recommended_price_id = %(recommended_price_id_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:12,114 INFO sqlalchemy.engine.Engine: [cached since 0.6223s ago] {'user_id_1': 2, 'current_resource_id_1': 1665, 'recommended_price_id_1': 3539, 'param_1': 1}
2025-10-28 08:06:12,115 INFO sqlalchemy.engine.Engine: INSERT INTO price_comparison_recommendations (user_id, current_resource_id, recommended_price_id, similarity_score, monthly_savings, annual_savings, savings_percent, migration_effort, migration_notes, status, user_feedback, created_at, updated_at) VALUES (%(user_id)s, %(current_resource_id)s, %(recommended_price_id)s, %(similarity_score)s, %(monthly_savings)s, %(annual_savings)s, %(savings_percent)s, %(migration_effort)s, %(migration_notes)s, %(status)s, %(user_feedback)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:12,115 INFO sqlalchemy.engine.Engine: [cached since 0.4751s ago] {'user_id': 2, 'current_resource_id': 1665, 'recommended_price_id': 3539, 'similarity_score': 40.0, 'monthly_savings': 8612.92, 'annual_savings': 103355.04, 'savings_percent': 93.42, 'migration_effort': 'medium', 'migration_notes': None, 'status': 'pending', 'user_feedback': None, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 12, 115531), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 12, 115532)}
2025-10-28 08:06:12,116 INFO sqlalchemy.engine.Engine: SELECT optimization_recommendations.resource_id AS optimization_recommendations_resource_id, optimization_recommendations.provider_id AS optimization_recommendations_provider_id, optimization_recommendations.recommendation_type AS optimization_recommendations_recommendation_type, optimization_recommendations.category AS optimization_recommendations_category, optimization_recommendations.severity AS optimization_recommendations_severity, optimization_recommendations.title AS optimization_recommendations_title, optimization_recommendations.description AS optimization_recommendations_description, optimization_recommendations.source AS optimization_recommendations_source, optimization_recommendations.resource_type AS optimization_recommendations_resource_type, optimization_recommendations.resource_name AS optimization_recommendations_resource_name, optimization_recommendations.potential_savings AS optimization_recommendations_potential_savings, optimization_recommendations.estimated_monthly_savings AS optimization_recommendations_estimated_monthly_savings, optimization_recommendations.estimated_one_time_savings AS optimization_recommendations_estimated_one_time_savings, optimization_recommendations.currency AS optimization_recommendations_currency, optimization_recommendations.confidence_score AS optimization_recommendations_confidence_score, optimization_recommendations.metrics_snapshot AS optimization_recommendations_metrics_snapshot, optimization_recommendations.insights AS optimization_recommendations_insights, optimization_recommendations.status AS optimization_recommendations_status, optimization_recommendations.first_seen_at AS optimization_recommendations_first_seen_at, optimization_recommendations.seen_at AS optimization_recommendations_seen_at, optimization_recommendations.snoozed_until AS optimization_recommendations_snoozed_until, optimization_recommendations.applied_at AS optimization_recommendations_applied_at, optimization_recommendations.dismissed_at AS optimization_recommendations_dismissed_at, optimization_recommendations.dismissed_reason AS optimization_recommendations_dismissed_reason, optimization_recommendations.id AS optimization_recommendations_id, optimization_recommendations.created_at AS optimization_recommendations_created_at, optimization_recommendations.updated_at AS optimization_recommendations_updated_at 
FROM optimization_recommendations 
WHERE optimization_recommendations.resource_id = %(resource_id_1)s AND optimization_recommendations.recommendation_type = %(recommendation_type_1)s AND optimization_recommendations.source = %(source_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:12,116 INFO sqlalchemy.engine.Engine: [cached since 0.611s ago] {'resource_id_1': 1665, 'recommendation_type_1': 'price_compare_cross_provider', 'source_1': 'cost.price_check.cross_provider', 'param_1': 1}
2025-10-28 08:06:12,116 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_end | rule_id=cost.price_check.cross_provider provider=yandex resource_id=1665 outputs=1 created=1 updated=0 duration_ms=32
2025-10-28 08:06:12,116 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_start | rule_id=cost.rightsize.cpu_underuse provider=yandex resource_id=1666 rtype=server
2025-10-28 08:06:12,116 INFO sqlalchemy.engine.Engine: INSERT INTO optimization_recommendations (resource_id, provider_id, recommendation_type, category, severity, title, description, source, resource_type, resource_name, potential_savings, estimated_monthly_savings, estimated_one_time_savings, currency, confidence_score, metrics_snapshot, insights, status, first_seen_at, seen_at, snoozed_until, applied_at, dismissed_at, dismissed_reason, created_at, updated_at) VALUES (%(resource_id)s, %(provider_id)s, %(recommendation_type)s, %(category)s, %(severity)s, %(title)s, %(description)s, %(source)s, %(resource_type)s, %(resource_name)s, %(potential_savings)s, %(estimated_monthly_savings)s, %(estimated_one_time_savings)s, %(currency)s, %(confidence_score)s, %(metrics_snapshot)s, %(insights)s, %(status)s, %(first_seen_at)s, %(seen_at)s, %(snoozed_until)s, %(applied_at)s, %(dismissed_at)s, %(dismissed_reason)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:12,116 INFO sqlalchemy.engine.Engine: [cached since 0.4742s ago] {'resource_id': 1665, 'provider_id': 150, 'recommendation_type': 'price_compare_cross_provider', 'category': 'cost', 'severity': 'low', 'title': 'Доступен более дешёвый аналог у другого провайдера', 'description': 'Найдено сопоставимое предложение у selectel (ru-6a) примерно за 606 RUB/мес. Текущая стоимость ~9219 RUB.', 'source': 'cost.price_check.cross_provider', 'resource_type': 'server', 'resource_name': 'cl1etc88oikj3sh8mkro-amil', 'potential_savings': 0.0, 'estimated_monthly_savings': 8612.92, 'estimated_one_time_savings': 0.0, 'currency': 'RUB', 'confidence_score': 0.4, 'metrics_snapshot': "{'similarity': 0.4, 'target_monthly': 606.68, 'current_monthly': 9219.6}", 'insights': "{'recommended_provider': 'selectel', 'recommended_region': 'ru-6a', 'recommended_sku': 'v1-r16-d10:ru-6a', 'recommended_price_id': 3539, 'specs_unkno ... (117 characters truncated) ... : 0.4, 'price_id': 3539}, {'provider': 'selectel', 'region': 'ru-1c', 'sku': 'v1-r16-d10:ru-1c', 'monthly': 637.41, 'score': 0.4, 'price_id': 2531}]}", 'status': 'pending', 'first_seen_at': datetime.datetime(2025, 10, 28, 5, 6, 12, 116512), 'seen_at': None, 'snoozed_until': None, 'applied_at': None, 'dismissed_at': None, 'dismissed_reason': None, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 12, 116765), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 12, 116765)}
2025-10-28 08:06:12,117 INFO sqlalchemy.engine.Engine: SELECT resource_tags.resource_id AS resource_tags_resource_id, resource_tags.tag_key AS resource_tags_tag_key, resource_tags.tag_value AS resource_tags_tag_value, resource_tags.id AS resource_tags_id, resource_tags.created_at AS resource_tags_created_at, resource_tags.updated_at AS resource_tags_updated_at 
FROM resource_tags 
WHERE %(param_1)s = resource_tags.resource_id
2025-10-28 08:06:12,117 INFO sqlalchemy.engine.Engine: [cached since 0.5853s ago] {'param_1': 1666}
2025-10-28 08:06:12,117 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_end | rule_id=cost.rightsize.cpu_underuse provider=yandex resource_id=1666 outputs=0 created=0 updated=0 duration_ms=1
2025-10-28 08:06:12,117 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_start | rule_id=cost.price_check.cross_provider provider=yandex resource_id=1666 rtype=server
2025-10-28 08:06:12,117 INFO app.core.recommendations.plugins.price_check_rule: price_check: normalized | res_id=1666 name=duktusdemo vcpu=None mem_gib=16.0 region=ru-central1-d
2025-10-28 08:06:12,118 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s) AS anon_1
2025-10-28 08:06:12,118 INFO sqlalchemy.engine.Engine: [cached since 0.5812s ago] {'provider_1': 'yandex', 'ram_gb_1': 12.8, 'ram_gb_2': 20.0}
2025-10-28 08:06:12,121 INFO sqlalchemy.engine.Engine: SELECT count(*) AS count_1 
FROM (SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s AND (provider_prices.region LIKE concat(%(region_1)s, '%%'))) AS anon_1
2025-10-28 08:06:12,121 INFO sqlalchemy.engine.Engine: [cached since 0.5802s ago] {'provider_1': 'yandex', 'ram_gb_1': 12.8, 'ram_gb_2': 20.0, 'region_1': 'ru'}
2025-10-28 08:06:12,125 INFO sqlalchemy.engine.Engine: SELECT provider_prices.provider AS provider_prices_provider, provider_prices.resource_type AS provider_prices_resource_type, provider_prices.provider_sku AS provider_prices_provider_sku, provider_prices.region AS provider_prices_region, provider_prices.cpu_cores AS provider_prices_cpu_cores, provider_prices.ram_gb AS provider_prices_ram_gb, provider_prices.storage_gb AS provider_prices_storage_gb, provider_prices.storage_type AS provider_prices_storage_type, provider_prices.extended_specs AS provider_prices_extended_specs, provider_prices.hourly_cost AS provider_prices_hourly_cost, provider_prices.monthly_cost AS provider_prices_monthly_cost, provider_prices.currency AS provider_prices_currency, provider_prices.yearly_cost AS provider_prices_yearly_cost, provider_prices.three_year_cost AS provider_prices_three_year_cost, provider_prices.commitment_discount_percent AS provider_prices_commitment_discount_percent, provider_prices.last_updated AS provider_prices_last_updated, provider_prices.confidence_score AS provider_prices_confidence_score, provider_prices.source AS provider_prices_source, provider_prices.source_url AS provider_prices_source_url, provider_prices.notes AS provider_prices_notes, provider_prices.id AS provider_prices_id, provider_prices.created_at AS provider_prices_created_at, provider_prices.updated_at AS provider_prices_updated_at 
FROM provider_prices 
WHERE provider_prices.cpu_cores IS NOT NULL AND provider_prices.ram_gb IS NOT NULL AND provider_prices.provider != %(provider_1)s AND provider_prices.ram_gb BETWEEN %(ram_gb_1)s AND %(ram_gb_2)s AND (provider_prices.region LIKE concat(%(region_1)s, '%%')) ORDER BY provider_prices.monthly_cost IS NULL ASC, provider_prices.monthly_cost ASC 
 LIMIT %(param_1)s
2025-10-28 08:06:12,126 INFO sqlalchemy.engine.Engine: [cached since 0.5799s ago] {'provider_1': 'yandex', 'ram_gb_1': 12.8, 'ram_gb_2': 20.0, 'region_1': 'ru', 'param_1': 500}
2025-10-28 08:06:12,143 INFO app.core.recommendations.plugins.price_check_rule: price_check: catalog scope | res_id=1666 total_prices=672 region_filtered=456
2025-10-28 08:06:12,143 INFO app.core.recommendations.plugins.price_check_rule: price_check: candidate_search | res_id=1666 pref_region=ru-central1-d min_score=0.00
2025-10-28 08:06:12,147 INFO app.core.recommendations.plugins.price_check_rule: price_check: candidate | res_id=1666 best_price_id=3539 score=0.40 target_monthly=606.68 current_monthly=10349.10 savings=9742.42 min_abs=0.00
2025-10-28 08:06:12,147 INFO sqlalchemy.engine.Engine: SELECT price_comparison_recommendations.user_id AS price_comparison_recommendations_user_id, price_comparison_recommendations.current_resource_id AS price_comparison_recommendations_current_resource_id, price_comparison_recommendations.recommended_price_id AS price_comparison_recommendations_recommended_price_id, price_comparison_recommendations.similarity_score AS price_comparison_recommendations_similarity_score, price_comparison_recommendations.monthly_savings AS price_comparison_recommendations_monthly_savings, price_comparison_recommendations.annual_savings AS price_comparison_recommendations_annual_savings, price_comparison_recommendations.savings_percent AS price_comparison_recommendations_savings_percent, price_comparison_recommendations.migration_effort AS price_comparison_recommendations_migration_effort, price_comparison_recommendations.migration_notes AS price_comparison_recommendations_migration_notes, price_comparison_recommendations.status AS price_comparison_recommendations_status, price_comparison_recommendations.user_feedback AS price_comparison_recommendations_user_feedback, price_comparison_recommendations.id AS price_comparison_recommendations_id, price_comparison_recommendations.created_at AS price_comparison_recommendations_created_at, price_comparison_recommendations.updated_at AS price_comparison_recommendations_updated_at 
FROM price_comparison_recommendations 
WHERE price_comparison_recommendations.user_id = %(user_id_1)s AND price_comparison_recommendations.current_resource_id = %(current_resource_id_1)s AND price_comparison_recommendations.recommended_price_id = %(recommended_price_id_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:12,147 INFO sqlalchemy.engine.Engine: [cached since 0.655s ago] {'user_id_1': 2, 'current_resource_id_1': 1666, 'recommended_price_id_1': 3539, 'param_1': 1}
2025-10-28 08:06:12,148 INFO sqlalchemy.engine.Engine: INSERT INTO price_comparison_recommendations (user_id, current_resource_id, recommended_price_id, similarity_score, monthly_savings, annual_savings, savings_percent, migration_effort, migration_notes, status, user_feedback, created_at, updated_at) VALUES (%(user_id)s, %(current_resource_id)s, %(recommended_price_id)s, %(similarity_score)s, %(monthly_savings)s, %(annual_savings)s, %(savings_percent)s, %(migration_effort)s, %(migration_notes)s, %(status)s, %(user_feedback)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:12,148 INFO sqlalchemy.engine.Engine: [cached since 0.5078s ago] {'user_id': 2, 'current_resource_id': 1666, 'recommended_price_id': 3539, 'similarity_score': 40.0, 'monthly_savings': 9742.42, 'annual_savings': 116909.04, 'savings_percent': 94.14, 'migration_effort': 'medium', 'migration_notes': None, 'status': 'pending', 'user_feedback': None, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 12, 148218), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 12, 148219)}
2025-10-28 08:06:12,148 INFO sqlalchemy.engine.Engine: SELECT optimization_recommendations.resource_id AS optimization_recommendations_resource_id, optimization_recommendations.provider_id AS optimization_recommendations_provider_id, optimization_recommendations.recommendation_type AS optimization_recommendations_recommendation_type, optimization_recommendations.category AS optimization_recommendations_category, optimization_recommendations.severity AS optimization_recommendations_severity, optimization_recommendations.title AS optimization_recommendations_title, optimization_recommendations.description AS optimization_recommendations_description, optimization_recommendations.source AS optimization_recommendations_source, optimization_recommendations.resource_type AS optimization_recommendations_resource_type, optimization_recommendations.resource_name AS optimization_recommendations_resource_name, optimization_recommendations.potential_savings AS optimization_recommendations_potential_savings, optimization_recommendations.estimated_monthly_savings AS optimization_recommendations_estimated_monthly_savings, optimization_recommendations.estimated_one_time_savings AS optimization_recommendations_estimated_one_time_savings, optimization_recommendations.currency AS optimization_recommendations_currency, optimization_recommendations.confidence_score AS optimization_recommendations_confidence_score, optimization_recommendations.metrics_snapshot AS optimization_recommendations_metrics_snapshot, optimization_recommendations.insights AS optimization_recommendations_insights, optimization_recommendations.status AS optimization_recommendations_status, optimization_recommendations.first_seen_at AS optimization_recommendations_first_seen_at, optimization_recommendations.seen_at AS optimization_recommendations_seen_at, optimization_recommendations.snoozed_until AS optimization_recommendations_snoozed_until, optimization_recommendations.applied_at AS optimization_recommendations_applied_at, optimization_recommendations.dismissed_at AS optimization_recommendations_dismissed_at, optimization_recommendations.dismissed_reason AS optimization_recommendations_dismissed_reason, optimization_recommendations.id AS optimization_recommendations_id, optimization_recommendations.created_at AS optimization_recommendations_created_at, optimization_recommendations.updated_at AS optimization_recommendations_updated_at 
FROM optimization_recommendations 
WHERE optimization_recommendations.resource_id = %(resource_id_1)s AND optimization_recommendations.recommendation_type = %(recommendation_type_1)s AND optimization_recommendations.source = %(source_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:12,148 INFO sqlalchemy.engine.Engine: [cached since 0.6437s ago] {'resource_id_1': 1666, 'recommendation_type_1': 'price_compare_cross_provider', 'source_1': 'cost.price_check.cross_provider', 'param_1': 1}
2025-10-28 08:06:12,149 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_run_end | rule_id=cost.price_check.cross_provider provider=yandex resource_id=1666 outputs=1 created=1 updated=0 duration_ms=31
2025-10-28 08:06:12,149 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_skip | reason=not_applicable rule_id=cost.rightsize.cpu_underuse provider=yandex resource_id=1667 rtype=volume
2025-10-28 08:06:12,149 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_skip | reason=not_applicable rule_id=cost.price_check.cross_provider provider=yandex resource_id=1667 rtype=volume
2025-10-28 08:06:12,149 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_skip | reason=not_applicable rule_id=cost.rightsize.cpu_underuse provider=yandex resource_id=1668 rtype=volume
2025-10-28 08:06:12,149 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_skip | reason=not_applicable rule_id=cost.price_check.cross_provider provider=yandex resource_id=1668 rtype=volume
2025-10-28 08:06:12,149 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_skip | reason=not_applicable rule_id=cost.rightsize.cpu_underuse provider=yandex resource_id=1669 rtype=volume
2025-10-28 08:06:12,149 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_skip | reason=not_applicable rule_id=cost.price_check.cross_provider provider=yandex resource_id=1669 rtype=volume
2025-10-28 08:06:12,149 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_skip | reason=not_applicable rule_id=cost.rightsize.cpu_underuse provider=yandex resource_id=1670 rtype=volume
2025-10-28 08:06:12,149 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_skip | reason=not_applicable rule_id=cost.price_check.cross_provider provider=yandex resource_id=1670 rtype=volume
2025-10-28 08:06:12,149 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_skip | reason=not_applicable rule_id=cost.rightsize.cpu_underuse provider=yandex resource_id=1671 rtype=volume
2025-10-28 08:06:12,149 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_skip | reason=not_applicable rule_id=cost.price_check.cross_provider provider=yandex resource_id=1671 rtype=volume
2025-10-28 08:06:12,149 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_skip | reason=not_applicable rule_id=cost.rightsize.cpu_underuse provider=yandex resource_id=1672 rtype=postgresql-cluster
2025-10-28 08:06:12,149 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_skip | reason=not_applicable rule_id=cost.price_check.cross_provider provider=yandex resource_id=1672 rtype=postgresql-cluster
2025-10-28 08:06:12,149 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_skip | reason=not_applicable rule_id=cost.rightsize.cpu_underuse provider=yandex resource_id=1673 rtype=postgresql-cluster
2025-10-28 08:06:12,149 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_skip | reason=not_applicable rule_id=cost.price_check.cross_provider provider=yandex resource_id=1673 rtype=postgresql-cluster
2025-10-28 08:06:12,149 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_skip | reason=not_applicable rule_id=cost.rightsize.cpu_underuse provider=yandex resource_id=1674 rtype=kubernetes-cluster
2025-10-28 08:06:12,149 INFO app.core.recommendations.orchestrator.RecommendationOrchestrator: rule_skip | reason=not_applicable rule_id=cost.price_check.cross_provider provider=yandex resource_id=1674 rtype=kubernetes-cluster
2025-10-28 08:06:12,150 INFO sqlalchemy.engine.Engine: INSERT INTO optimization_recommendations (resource_id, provider_id, recommendation_type, category, severity, title, description, source, resource_type, resource_name, potential_savings, estimated_monthly_savings, estimated_one_time_savings, currency, confidence_score, metrics_snapshot, insights, status, first_seen_at, seen_at, snoozed_until, applied_at, dismissed_at, dismissed_reason, created_at, updated_at) VALUES (%(resource_id)s, %(provider_id)s, %(recommendation_type)s, %(category)s, %(severity)s, %(title)s, %(description)s, %(source)s, %(resource_type)s, %(resource_name)s, %(potential_savings)s, %(estimated_monthly_savings)s, %(estimated_one_time_savings)s, %(currency)s, %(confidence_score)s, %(metrics_snapshot)s, %(insights)s, %(status)s, %(first_seen_at)s, %(seen_at)s, %(snoozed_until)s, %(applied_at)s, %(dismissed_at)s, %(dismissed_reason)s, %(created_at)s, %(updated_at)s)
2025-10-28 08:06:12,150 INFO sqlalchemy.engine.Engine: [cached since 0.5075s ago] {'resource_id': 1666, 'provider_id': 150, 'recommendation_type': 'price_compare_cross_provider', 'category': 'cost', 'severity': 'low', 'title': 'Доступен более дешёвый аналог у другого провайдера', 'description': 'Найдено сопоставимое предложение у selectel (ru-6a) примерно за 606 RUB/мес. Текущая стоимость ~10349 RUB.', 'source': 'cost.price_check.cross_provider', 'resource_type': 'server', 'resource_name': 'duktusdemo', 'potential_savings': 0.0, 'estimated_monthly_savings': 9742.42, 'estimated_one_time_savings': 0.0, 'currency': 'RUB', 'confidence_score': 0.4, 'metrics_snapshot': "{'similarity': 0.4, 'target_monthly': 606.68, 'current_monthly': 10349.1}", 'insights': "{'recommended_provider': 'selectel', 'recommended_region': 'ru-6a', 'recommended_sku': 'v1-r16-d10:ru-6a', 'recommended_price_id': 3539, 'specs_unkno ... (117 characters truncated) ... : 0.4, 'price_id': 3539}, {'provider': 'selectel', 'region': 'ru-1c', 'sku': 'v1-r16-d10:ru-1c', 'monthly': 637.41, 'score': 0.4, 'price_id': 2531}]}", 'status': 'pending', 'first_seen_at': datetime.datetime(2025, 10, 28, 5, 6, 12, 149229), 'seen_at': None, 'snoozed_until': None, 'applied_at': None, 'dismissed_at': None, 'dismissed_reason': None, 'created_at': datetime.datetime(2025, 10, 28, 8, 6, 12, 150063), 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 12, 150064)}
2025-10-28 08:06:12,150 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:06:12,152 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:06:12,152 INFO sqlalchemy.engine.Engine: SELECT complete_syncs.user_id AS complete_syncs_user_id, complete_syncs.sync_type AS complete_syncs_sync_type, complete_syncs.sync_status AS complete_syncs_sync_status, complete_syncs.sync_started_at AS complete_syncs_sync_started_at, complete_syncs.sync_completed_at AS complete_syncs_sync_completed_at, complete_syncs.sync_duration_seconds AS complete_syncs_sync_duration_seconds, complete_syncs.total_providers_synced AS complete_syncs_total_providers_synced, complete_syncs.successful_providers AS complete_syncs_successful_providers, complete_syncs.failed_providers AS complete_syncs_failed_providers, complete_syncs.total_resources_found AS complete_syncs_total_resources_found, complete_syncs.total_monthly_cost AS complete_syncs_total_monthly_cost, complete_syncs.total_daily_cost AS complete_syncs_total_daily_cost, complete_syncs.cost_by_provider AS complete_syncs_cost_by_provider, complete_syncs.resources_by_provider AS complete_syncs_resources_by_provider, complete_syncs.error_message AS complete_syncs_error_message, complete_syncs.error_details AS complete_syncs_error_details, complete_syncs.sync_config AS complete_syncs_sync_config, complete_syncs.id AS complete_syncs_id, complete_syncs.created_at AS complete_syncs_created_at, complete_syncs.updated_at AS complete_syncs_updated_at 
FROM complete_syncs 
WHERE complete_syncs.id = %(pk_1)s
2025-10-28 08:06:12,152 INFO sqlalchemy.engine.Engine: [cached since 51.48s ago] {'pk_1': 2082}
2025-10-28 08:06:12,153 INFO sqlalchemy.engine.Engine: UPDATE complete_syncs SET sync_config=%(sync_config)s, updated_at=%(updated_at)s WHERE complete_syncs.id = %(complete_syncs_id)s
2025-10-28 08:06:12,153 INFO sqlalchemy.engine.Engine: [generated in 0.00006s] {'sync_config': '{"sync_type": "manual", "user_id": 2, "providers_count": 4, "sync_timestamp": "2025-10-28T08:05:20.669891", "providers": [{"id": 1, "name": "Beget- c ... (453 characters truncated) ... uppressed_snoozed": 0, "rule_timings": {"cost.price_check.cross_provider": 0.6693260039901361, "cost.rightsize.cpu_underuse": 0.026095583161804825}}}', 'updated_at': datetime.datetime(2025, 10, 28, 8, 6, 12, 153037), 'complete_syncs_id': 2082}
2025-10-28 08:06:12,153 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:06:29,812 INFO sqlalchemy.engine.Engine: SELECT DATABASE()
2025-10-28 08:06:29,812 INFO sqlalchemy.engine.Engine: [raw sql] {}
2025-10-28 08:06:29,813 INFO sqlalchemy.engine.Engine: SELECT @@sql_mode
2025-10-28 08:06:29,813 INFO sqlalchemy.engine.Engine: [raw sql] {}
2025-10-28 08:06:29,813 INFO sqlalchemy.engine.Engine: SELECT @@lower_case_table_names
2025-10-28 08:06:29,813 INFO sqlalchemy.engine.Engine: [raw sql] {}
2025-10-28 08:06:29,814 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:06:29,815 INFO sqlalchemy.engine.Engine: SELECT cloud_providers.user_id AS cloud_providers_user_id, cloud_providers.provider_type AS cloud_providers_provider_type, cloud_providers.connection_name AS cloud_providers_connection_name, cloud_providers.account_id AS cloud_providers_account_id, cloud_providers.api_endpoint AS cloud_providers_api_endpoint, cloud_providers.credentials AS cloud_providers_credentials, cloud_providers.is_active AS cloud_providers_is_active, cloud_providers.last_sync AS cloud_providers_last_sync, cloud_providers.sync_status AS cloud_providers_sync_status, cloud_providers.sync_error AS cloud_providers_sync_error, cloud_providers.auto_sync AS cloud_providers_auto_sync, cloud_providers.sync_interval AS cloud_providers_sync_interval, cloud_providers.provider_metadata AS cloud_providers_provider_metadata, cloud_providers.id AS cloud_providers_id, cloud_providers.created_at AS cloud_providers_created_at, cloud_providers.updated_at AS cloud_providers_updated_at 
FROM cloud_providers 
WHERE cloud_providers.connection_name = %(connection_name_1)s 
 LIMIT %(param_1)s
2025-10-28 08:06:29,815 INFO sqlalchemy.engine.Engine: [generated in 0.00009s] {'connection_name_1': 'yc', 'param_1': 1}
2025-10-28 08:06:29,817 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.provider_id = %(provider_id_1)s AND resources.is_active = true
2025-10-28 08:06:29,817 INFO sqlalchemy.engine.Engine: [generated in 0.00006s] {'provider_id_1': 117}
2025-10-28 08:06:29,818 INFO sqlalchemy.engine.Engine: ROLLBACK
2025-10-28 08:06:44,464 INFO sqlalchemy.engine.Engine: SELECT DATABASE()
2025-10-28 08:06:44,465 INFO sqlalchemy.engine.Engine: [raw sql] {}
2025-10-28 08:06:44,465 INFO sqlalchemy.engine.Engine: SELECT @@sql_mode
2025-10-28 08:06:44,465 INFO sqlalchemy.engine.Engine: [raw sql] {}
2025-10-28 08:06:44,465 INFO sqlalchemy.engine.Engine: SELECT @@lower_case_table_names
2025-10-28 08:06:44,465 INFO sqlalchemy.engine.Engine: [raw sql] {}
2025-10-28 08:06:44,466 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:06:44,467 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:44,467 INFO sqlalchemy.engine.Engine: [generated in 0.00008s] {'pk_1': 1287}
2025-10-28 08:06:44,468 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:06:44,468 INFO sqlalchemy.engine.Engine: [cached since 0.001104s ago] {'pk_1': 1288}
2025-10-28 08:06:44,469 INFO sqlalchemy.engine.Engine: ROLLBACK
2025-10-28 08:07:02,068 INFO sqlalchemy.engine.Engine: SELECT DATABASE()
2025-10-28 08:07:02,068 INFO sqlalchemy.engine.Engine: [raw sql] {}
2025-10-28 08:07:02,069 INFO sqlalchemy.engine.Engine: SELECT @@sql_mode
2025-10-28 08:07:02,069 INFO sqlalchemy.engine.Engine: [raw sql] {}
2025-10-28 08:07:02,069 INFO sqlalchemy.engine.Engine: SELECT @@lower_case_table_names
2025-10-28 08:07:02,069 INFO sqlalchemy.engine.Engine: [raw sql] {}
2025-10-28 08:07:02,069 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:07:02,070 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(id_1)s 
 LIMIT %(param_1)s
2025-10-28 08:07:02,071 INFO sqlalchemy.engine.Engine: [generated in 0.00008s] {'id_1': 1287, 'param_1': 1}
2025-10-28 08:07:02,072 INFO sqlalchemy.engine.Engine: UPDATE resources SET is_active=%(is_active)s, updated_at=%(updated_at)s WHERE resources.id = %(resources_id)s
2025-10-28 08:07:02,072 INFO sqlalchemy.engine.Engine: [generated in 0.00008s] {'is_active': 0, 'updated_at': datetime.datetime(2025, 10, 28, 8, 7, 2, 72498), 'resources_id': 1287}
2025-10-28 08:07:02,073 INFO sqlalchemy.engine.Engine: COMMIT
2025-10-28 08:07:02,074 INFO sqlalchemy.engine.Engine: BEGIN (implicit)
2025-10-28 08:07:02,074 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.id = %(pk_1)s
2025-10-28 08:07:02,074 INFO sqlalchemy.engine.Engine: [generated in 0.00005s] {'pk_1': 1287}
2025-10-28 08:07:02,075 INFO sqlalchemy.engine.Engine: SELECT resources.provider_id AS resources_provider_id, resources.resource_id AS resources_resource_id, resources.resource_name AS resources_resource_name, resources.region AS resources_region, resources.external_ip AS resources_external_ip, resources.service_name AS resources_service_name, resources.resource_type AS resources_resource_type, resources.status AS resources_status, resources.pricing_model AS resources_pricing_model, resources.list_price AS resources_list_price, resources.effective_cost AS resources_effective_cost, resources.currency AS resources_currency, resources.billing_period AS resources_billing_period, resources.daily_cost AS resources_daily_cost, resources.original_cost AS resources_original_cost, resources.cost_period AS resources_cost_period, resources.cost_frequency AS resources_cost_frequency, resources.business_unit AS resources_business_unit, resources.project_id AS resources_project_id, resources.feature_tag AS resources_feature_tag, resources.cost_center AS resources_cost_center, resources.environment AS resources_environment, resources.last_sync AS resources_last_sync, resources.is_active AS resources_is_active, resources.provider_config AS resources_provider_config, resources.notes AS resources_notes, resources.id AS resources_id, resources.created_at AS resources_created_at, resources.updated_at AS resources_updated_at 
FROM resources 
WHERE resources.provider_id = %(provider_id_1)s AND resources.is_active = true
2025-10-28 08:07:02,075 INFO sqlalchemy.engine.Engine: [generated in 0.00006s] {'provider_id_1': 117}
2025-10-28 08:07:02,077 INFO sqlalchemy.engine.Engine: ROLLBACK
2025-10-28 08:24:04,952 INFO werkzeug:  * Detected change in '/Users/colakamornik/Desktop/InfraZen/app/providers/yandex/client.py', reloading
